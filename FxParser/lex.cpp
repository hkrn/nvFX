#define yy_create_buffer FxParser_create_buffer
#define yy_delete_buffer FxParser_delete_buffer
#define yy_scan_buffer FxParser_scan_buffer
#define yy_scan_string FxParser_scan_string
#define yy_scan_bytes FxParser_scan_bytes
#define yy_flex_debug FxParser_flex_debug
#define yy_init_buffer FxParser_init_buffer
#define yy_flush_buffer FxParser_flush_buffer
#define yy_load_buffer_state FxParser_load_buffer_state
#define yy_switch_to_buffer FxParser_switch_to_buffer
#define yyin FxParserin
#define yyleng FxParserleng
#define yylex FxParserlex
#define yyout FxParserout
#define yyrestart FxParserrestart
#define yytext FxParsertext
#define yywrap FxParserwrap

#line 20 "C:/p4/GitHub/nvFX/FxParser/lex.cpp"
/* A lexical scanner generated by flex */

/* Scanner skeleton version:
 * $Header: /home/daffy/u0/vern/flex/RCS/flex.skl,v 2.91 96/09/10 16:58:48 vern Exp $
 */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5

#include <stdio.h>


/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
#ifdef c_plusplus
#ifndef __cplusplus
#define __cplusplus
#endif
#endif


#ifdef __cplusplus

#include <stdlib.h>
#include <unistd.h>

/* Use prototypes in function declarations. */
#define YY_USE_PROTOS

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_PROTOS
#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef __TURBOC__
 #pragma warn -rch
 #pragma warn -use
#include <io.h>
#include <stdlib.h>
#define YY_USE_CONST
#define YY_USE_PROTOS
#endif

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif


#ifdef YY_USE_PROTOS
#define YY_PROTO(proto) proto
#else
#define YY_PROTO(proto) ()
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#define YY_BUF_SIZE 16384

typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int yyleng;
extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

/* The funky do-while in the following #define is used to turn the definition
 * int a single C statement (which needs a semi-colon terminator).  This
 * avoids problems with code like:
 *
 * 	if ( condition_holds )
 *		yyless( 5 );
 *	else
 *		do_something_else();
 *
 * Prior to using the do-while the compiler would get upset at the
 * "else" because it interpreted the "if" statement as being all
 * done when it reached the ';' after the yyless() call.
 */

/* Return all but the first 'n' matched characters back to the input stream. */

#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		*yy_cp = yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yytext_ptr )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */
typedef unsigned int yy_size_t;


struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;
#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2
	};

static YY_BUFFER_STATE yy_current_buffer = 0;

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 */
#define YY_CURRENT_BUFFER yy_current_buffer


/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;

static int yy_n_chars;		/* number of characters read into yy_ch_buf */


int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart YY_PROTO(( FILE *input_file ));

void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
void yy_load_buffer_state YY_PROTO(( void ));
YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )

YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));

static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t ));
static void yy_flex_free YY_PROTO(( void * ));

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)

typedef unsigned char YY_CHAR;
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
typedef int yy_state_type;
extern char *yytext;
#define yytext_ptr yytext

static yy_state_type yy_get_previous_state YY_PROTO(( void ));
static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
static int yy_get_next_buffer YY_PROTO(( void ));
static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yy_c_buf_p = yy_cp;

#define YY_NUM_RULES 534
#define YY_END_OF_BUFFER 535
static yyconst short int yy_accept[3610] =
    {   0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      532,  532,  316,  316,  320,  320,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  535,  530,  528,  529,  313,  530,  530,   92,
       92,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,   50,  530,   51,  527,  527,  456,  457,
      455,  527,  527,  454,  534,  404,  403,  534,  534,  534,
      534,  534,  405,  416,  534,  534,  534,  534,  534,  534,

      533,  532,  532,  316,  318,  317,  320,  321,  332,  323,
      322,  332,  534,  334,  334,  334,  334,  334,  334,  334,
      334,  334,  334,  334,  334,  333,  338,  337,  335,  336,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,   50,   51,  527,  527,  527,  527,  527,
      340,  341,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  179,  180,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  512,  513,  527,  527,  527,  527,  527,  527,

      527,  234,  235,  527,  287,  288,  527,  527,  527,  527,
      527,  527,  527,  527,  204,  205,  527,  527,  527,  527,
      527,  179,  180,  527,  527,  527,  527,  527,  527,  527,
      527,  461,  462,  460,  528,    0,    0,  314,  315,   94,
       92,    0,  527,    0,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,   98,
      527,  527,  527,  527,  527,  527,  527,  527,  492,  527,
      527,  490,  527,  527,  527,  527,  527,  527,  527,  527,

      527,  527,  527,  527,  527,  527,    0,    0,    0,    0,
       98,    0,  527,  527,  527,  527,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      533,  532,  532,  316,  317,  317,  319,  320,  332,  314,
      315,  331,  324,  325,  329,  330,  326,  328,  327,  334,
        0,  334,  334,  334,  334,  334,  334,  334,  334,  334,
      334,  334,  334,  334,  334,  334,  334,  338,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  132,  527,  527,  527,  527,  527,

      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,   98,
      527,  527,  527,  165,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  490,  527,  527,    0,    0,   94,   94,   93,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,

      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,    4,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,   71,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  493,  527,  500,  527,  527,  527,  527,  527,
      527,  527,  527,  494,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,   97,    0,   97,    0,    0,    0,  527,
      527,  407,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  324,  325,  334,  334,

      334,  334,  334,  334,   71,  334,  334,  334,  334,  334,
      334,  334,  334,  334,  334,  334,  527,   71,  527,  527,
      527,  527,  343,  527,  527,  527,  107,  527,  527,  527,
      163,  527,  527,  527,  527,  131,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  154,
      153,  527,  527,  527,  527,  527,  527,  166,  527,  527,
      137,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  177,  527,  527,  527,  158,  527,  527,  527,  527,

      527,  527,  527,  527,  167,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  177,  527,  527,    0,    0,  527,  527,
      527,  527,  527,  527,  527,   67,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,   72,   73,   74,  527,  527,  527,  394,
       81,  527,   61,   62,   63,  527,  527,  466,  527,  527,
      527,  527,  527,  527,  527,  496,  502,  527,  497,  504,

      527,  501,  527,  527,  527,  527,  527,  495,  527,  506,
      527,  527,  527,  527,  482,  527,  527,   45,  527,  527,
      527,  527,  527,  527,  527,   99,  527,  527,   58,   59,
       60,  527,  527,   52,  527,    0,    0,    0,   99,  527,
      527,    0,    0,  406,    0,    0,  437,    0,    0,    0,
        0,    0,    0,    0,    0,  324,  334,   67,  334,  334,
      334,  334,   72,   73,   74,  334,  334,   81,   61,   62,
       63,  334,  334,  334,  334,  334,   58,   59,   60,   52,
      527,  527,  527,  527,  527,  339,  527,  527,  527,  527,
      527,  527,  127,  527,  527,  527,  527,  527,  527,  527,

      159,  527,  527,  527,  119,  527,  527,  527,  527,  527,
      527,  135,  266,  527,  527,  527,  527,  527,  527,  527,
      118,  527,  527,  116,  128,  527,  109,  134,  104,  527,
      527,  527,  527,  527,  106,  164,  527,  161,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  178,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  136,  527,  527,  527,  527,  527,
      134,  527,  106,  527,  527,  527,  527,  527,  134,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  178,
      527,  468,    0,    0,  527,  527,  527,  527,  527,  527,

      527,   68,   69,   70,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  100,  527,   54,  527,  527,  527,  527,  527,
       80,  527,  527,  527,  527,   75,   76,   77,    2,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      503,  505,  527,  527,  527,  527,  527,  498,  508,  527,
      499,  510,  527,  507,  527,  527,  527,  527,  527,  471,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  100,    0,    0,  458,  527,  411,
      412,    0,    0,    0,    0,    0,    0,    0,  417,    0,

        0,   68,   69,   70,   54,  334,   80,   75,   76,   77,
        2,  334,  334,  334,  334,  334,   54,  527,  527,  527,
      527,  527,  103,  527,  174,  527,  527,  527,  527,  272,
      210,  527,  157,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  110,  168,  527,  527,  527,  527,
      126,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  108,  527,  527,  527,  527,  527,
      527,  527,  133,  527,  527,  527,  527,  527,  527,  129,
      268,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  174,  527,  521,  157,  126,  527,  527,  527,  133,

      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,    0,    0,  395,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,   95,  527,  527,  527,   55,   56,   57,  527,
       46,  527,  527,    1,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  509,  527,  511,  527,  483,  484,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,

      527,  527,  527,  527,  527,  527,    0,   95,  527,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   55,   56,   57,    1,
      334,  334,  334,  334,  334,  527,  527,  527,  527,  527,
      527,  527,  527,  113,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  224,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  115,  527,  527,  162,  114,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,

      527,  527,  527,  527,  527,  527,  527,  527,  105,  527,
      267,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  520,  526,  527,  523,  527,  527,  527,
      527,  467,  527,  527,  527,    0,    0,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  465,  527,  527,  527,
      527,   96,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,   79,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  360,  527,  527,  527,  527,  527,  527,  527,  527,

      527,  527,  527,  527,  527,  472,  473,  488,  527,  527,
      527,   15,  527,  527,  527,  527,  527,   78,  527,  527,
      527,  527,   96,  527,    0,    0,    0,    0,  413,    0,
        0,  439,  440,  441,  442,  443,  444,  445,  446,  447,
      448,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  334,  334,  334,   79,  334,  334,   78,  334,
      527,  527,   78,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,

      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      111,  527,  527,  527,  527,  527,  227,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  117,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  368,  527,  527,  527,  527,
      524,  527,  527,  465,  527,  527,  527,    0,  531,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,   19,  399,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,   48,   64,   65,

       66,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  478,  481,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,   53,  527,  392,  527,  527,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   64,
       65,   66,  334,  334,  334,  334,  334,  334,  334,  334,
       53,  527,  527,  527,  527,  527,  527,  527,  527,  527,

      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  275,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  152,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      112,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,

        0,  527,  527,  527,  527,  527,  527,  527,  402,  527,
      527,  527,  527,  527,  527,  400,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  369,  527,  527,  527,
      527,    3,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  365,  527,  527,  527,  527,  527,  527,  527,
       87,   88,   90,  527,  527,  527,  527,  527,   39,  527,
      527,   27,  527,   82,   83,   85,  527,  527,  527,  527,
      527,  527,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  432,    0,    0,    0,    0,    0,    0,    0,    0,

        0,   87,   88,   90,  334,   82,   83,   85,  334,  453,
      342,  283,  284,  527,  209,  527,  527,  124,  527,  527,
      216,  527,  213,  527,  212,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  191,  527,  527,  527,  527,
      527,  527,  527,  142,  144,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  175,  527,  527,  527,  527,
      527,  173,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,

      140,  138,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  258,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  175,  173,  527,   29,  527,  527,  527,   24,
      527,  527,  390,  527,  527,  527,  527,  527,  527,   20,
      396,  527,  527,  527,  527,  527,  527,  527,   49,  527,
      527,  527,  527,   14,  527,  527,  527,  362,  527,  527,
      527,  527,  474,  527,  527,  527,  527,  527,  527,  527,
      527,  352,  527,  527,  527,  527,  366,  527,  527,  387,
      527,  527,  491,  527,  527,  527,  527,  527,  469,  527,
      349,  350,  527,  527,  527,  527,  527,  364,  527,    0,

        0,    0,    0,    0,    0,    0,  426,  427,  428,  429,
      430,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      334,  334,  334,  334,  206,  527,  527,  125,  527,  527,
      527,  527,  527,  527,  527,  527,  228,  527,  527,  527,
      527,  527,  527,  276,  397,  527,  527,  527,  237,  238,
      236,  527,  527,  265,  527,  527,  527,  527,  193,  122,
      527,  527,  527,  527,  527,  186,  527,  121,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  171,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  181,  527,  527,  527,  527,  527,

      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  269,  120,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  361,  527,  527,
      527,  527,  527,  527,  527,  527,   37,   44,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  388,  527,  527,
      527,   91,  527,  527,  527,  527,  527,  527,  527,   86,
      527,  527,  527,  527,    0,  414,    0,    0,    0,    0,

        0,    0,    0,  438,    0,  434,    0,    0,    0,    0,
        0,  334,   91,  334,   86,  527,  527,  169,  151,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  278,  527,  527,  527,  239,  527,  527,  527,
      527,  527,  527,  123,  527,  527,  187,  527,  527,  527,
      527,  527,  527,  527,  229,  527,  527,  527,  527,  527,
      172,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  230,  527,
      527,  527,  527,  527,  527,  527,  245,  527,  527,  527,

      527,  527,  527,  527,  527,  527,  280,  281,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,   17,   18,
      527,  363,  527,  527,  527,  475,  476,  527,  527,   31,
      527,   40,  527,  527,  527,  527,  527,    7,  527,  527,
      527,  527,   21,  527,  527,  527,  527,  527,  527,  527,
      527,  459,  408,  409,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  418,    0,    0,  334,  334,  527,  527,
      170,  527,  527,  527,  527,  527,  527,  527,  277,  527,

      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  190,  527,  527,  270,  527,  527,  527,
      527,  527,  527,  527,  344,  527,  527,  527,  527,  527,
      527,  527,  291,  527,  527,  527,  527,  527,  527,  527,
      292,  527,  182,  183,  195,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  373,  527,  527,  246,  527,  243,
      527,  242,  527,  527,  527,  527,  527,  527,  279,  282,
      527,  527,  527,  527,  527,  527,  527,  463,   43,  527,
      527,  527,  527,  527,  527,  401,  527,  527,  527,  527,
      391,  527,  527,  527,  527,  527,  527,  527,  527,  527,

      527,  527,  527,  367,  527,  527,  527,  527,   41,  527,
      527,  527,  527,  527,    5,  470,   89,  527,  527,  527,
      393,  527,  527,   84,  527,  527,  346,    0,    0,  415,
        0,  451,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   89,   84,  527,  527,  527,  217,  527,  527,
      214,  221,  527,  527,  527,  527,  527,  160,  527,  527,
      527,  527,  527,  527,  527,  527,  155,  527,  226,  527,
      527,  527,  273,  263,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,

      201,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  260,  527,  527,  527,  527,  522,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  351,
      527,   28,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,   16,  527,  527,  527,  527,  527,  527,  372,  527,
      527,  527,  527,  527,    0,    0,  410,    0,    0,    0,
        0,  419,    0,    0,    0,    0,    0,  527,  208,  527,
      222,  527,  527,  225,  527,  149,  147,  192,  527,  527,
      527,  261,  262,  527,  130,  527,  527,  527,  176,  271,

      527,  527,  527,  527,  527,  527,  293,  527,  527,  527,
      306,  305,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  312,  527,  527,  194,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  518,  516,  517,  527,  527,  527,  527,  527,
      527,  527,  527,  527,   38,  485,  527,  527,  527,  527,
      489,  347,  348,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  371,  527,  527,  527,
      527,    8,  381,  527,    0,    0,    0,  452,  431,  420,

      433,    0,    0,    0,    0,    0,  449,    0,  207,  218,
      527,  215,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  300,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  370,  527,  527,
      525,  527,  527,  527,  527,  527,  527,  527,   25,  527,
      527,  398,  527,  527,  527,   34,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  477,  527,  527,  527,

      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  408,  409,    0,    0,    0,
        0,    0,    0,    0,    0,  527,  527,  527,  376,  241,
      527,  527,  223,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  302,  527,  527,  527,  301,
      527,  527,  527,  527,  309,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  252,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,   42,  527,  527,  487,  527,   22,  527,  527,  527,

      527,  527,  527,  382,  527,  527,  527,   32,  527,  527,
      527,  527,    6,  527,  527,  527,  527,  527,   10,   11,
       12,  527,  527,  527,  527,    0,    0,    0,    0,  425,
        0,    0,  450,  527,  527,  211,  527,  374,  527,  527,
      527,  274,  527,  527,  527,  527,  527,  345,  527,  527,
      527,  527,  527,  527,  527,  527,  290,  527,  527,  295,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  231,  527,  253,  250,  527,
      527,  527,  527,  527,  249,  527,  259,  527,  527,  527,
      527,  464,  527,  527,   36,  527,  527,  486,  527,  527,

      527,  527,  378,  527,  527,  479,  480,   23,   47,   26,
      527,  527,  527,  527,  527,  356,  357,  527,  527,  527,
      527,  410,    0,    0,    0,    0,    0,  527,  219,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  304,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  184,  375,
      203,  527,  527,  146,  527,  527,  527,  527,  244,  527,
      527,  527,  527,  515,  514,  527,  527,  527,  527,  527,
      527,  377,  527,  527,   35,  527,  527,  527,  527,  527,
        9,  527,   13,  527,    0,    0,    0,    0,    0,  527,

      527,  527,  527,  189,  527,  143,  145,  141,  139,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      311,  527,  527,  200,  199,  527,  527,  202,  527,  232,
      527,  527,  527,  527,  257,  285,  286,  527,  527,  527,
      527,  527,  527,  527,  379,  527,   33,  527,  527,  386,
      527,  527,  527,  527,    0,    0,    0,    0,    0,  220,
      527,  527,  188,  527,  527,  527,  527,  307,  527,  296,
      527,  527,  527,  527,  527,  527,  527,  527,  198,  197,
      527,  527,  527,  527,  527,  527,  519,  527,  389,  527,
      359,  527,  527,  380,  527,  527,  527,  527,  527,  353,

        0,    0,    0,    0,    0,  240,  156,  527,  527,  294,
      527,  298,  527,  527,  527,  310,  527,  297,  527,  196,
      527,  527,  527,  527,  527,  527,  527,  358,  527,  527,
        6,  527,  385,  527,  527,    0,    0,    0,  421,    0,
      527,  527,  303,  527,  527,  308,  299,  527,  527,  527,
      527,  256,  527,  527,  527,  354,  355,  384,  383,  527,
        0,    0,    0,    0,  527,  527,  527,  527,  527,  527,
      527,  251,  247,  248,  527,   13,  435,  423,    0,    0,
      150,  148,  264,  527,  527,  233,  527,  527,    0,    0,
      289,  185,  527,  527,  527,    0,    0,  527,  527,   30,

        0,  422,  527,  527,    0,  254,  255,  424,    0
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    4,    5,    1,    1,    1,    1,    1,
        1,    6,    1,    1,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
       23,    1,    1,    1,   27,   28,   29,   30,   31,   32,
       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
       43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
        1,   24,    1,   25,   26,    1,   27,   28,   29,   30,

       31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
       41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
       51,   52,   53,   54,   55,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yyconst int yy_meta[56] =
    {   0,
        1,    2,    3,    4,    1,    5,    6,    7,    1,    8,
        8,    8,    8,    8,    8,    8,    8,    8,    8,    9,
        1,    1,    1,    4,   10,    6,   11,   11,   11,   11,
       11,   12,    6,    6,    6,    6,    6,    6,    6,    6,
        6,    6,    6,    6,    6,    6,    6,    6,    6,    7,
        6,    6,   10,    1,   10
    } ;

static yyconst short int yy_base[3635] =
    {   0,
        0,    0,   55,    0,   90,   96,  110,  131,  133,  150,
      110,  165,  112,  118, 4583, 4582,  185,  189,  213,    0,
      150,  266,  317,    0,  346,    0,  375,    0,  427,    0,
      454,  481,  508,  535,  564,    0,  591,  618,  670,    0,
      243,  259, 4577,16905, 4573,16905,16905,  107,  121,  127,
      136,  719,  733,  286,  266,  403,  289,  751,  168,  404,
      474,  296,  641,  355,  488,  516,  763,  770,  500,  462,
      524,  538,  248,16905,  601,16905,  570,  450,16905,16905,
    16905,  470,  624,16905,16905,16905,16905, 4527, 4522, 4531,
     4520, 4500,16905,16905,   75,  105, 4496, 4504, 4496,  155,

        0,  168,  367,    0,16905,  198,    0,16905,    0,16905,
    16905,  265,  810,  850,  864,  239,  261,  319,  335,  100,
      422,  370,  448,  558,  535,16905,    0,16905,16905,16905,
      676,  661,  638,  772,  737,  801,  725,  112,  858,  859,
      865,  804,  880,16905,16905,  871,  887,  892,  899,  904,
    16905,16905,  913,  923,  931,  939,  947,  958,  966,  923,
      976,  982,  985, 1004,  811, 1011, 1015, 1027, 1035, 1038,
     1054, 1056, 1057,16905,16905,  655, 1069,  294, 1063, 1076,
     1082, 1097, 1081, 1103, 1104, 1125, 1117, 1133, 1136,  667,
     1141, 1149,16905,16905,  388, 1152, 1153, 1168, 1174,  245,

     1181,16905,16905, 1177,16905,16905,  432, 1189,  548, 1201,
     1204, 1223, 1210,  998,16905,16905,  575, 1232, 1247, 1231,
     1254,16905,16905, 1200, 1266, 1268, 1276, 1286,  987,  728,
     1295,16905,16905,16905, 4528, 4478, 4486,16905,16905, 4488,
      270,    0, 4496, 4488, 1297, 1310, 1316, 1294, 1320, 1323,
     1328, 1343, 1345, 1353, 1354, 1370, 1373, 1374, 1382, 1387,
     1392, 1399, 1406, 1409, 1425, 1427, 1438, 1447, 1432, 1454,
     1459, 1466, 1469, 1482, 1488, 1495, 1493, 1504, 1515, 1510,
     1516, 1521, 1537, 1542, 1543, 1544,  180,  270,  565, 1564,
     1565, 1590, 1593, 1595, 1598, 1604, 1615, 1617, 1624, 1630,

     1636, 1643, 1649, 1651, 1662, 1664, 4466, 4452, 4450, 4455,
    16905, 4433, 1673, 1661, 1673, 1681, 4438, 4437, 4432, 4430,
     4434, 4407,  323, 4425, 4411, 4411, 4396, 4393, 4403, 4393,
        0,  673,  809,    0,  389,  431,16905,    0,    0,    0,
        0,16905,  298,    0,16905,16905,16905,16905,16905, 4403,
     4402,  566,  577,  860,  586,  613,  671,  892, 1106, 1447,
     1254,  953,  761,  847, 1221,  995,  944,    0, 1687, 1695,
     1706, 1707, 1706, 1720, 1725, 1739, 1739, 1747, 1748, 1751,
     1765, 1766, 1771, 1785, 1790, 1791, 1807, 1808, 1826, 1827,
     1828, 1833, 1841, 1857, 1860, 1863, 1863, 1879, 1884, 1885,

     1901, 1906, 1907, 1918, 1914, 1926, 1930, 1942, 1946, 1962,
     1943, 1965, 1977, 1968, 1986, 1991, 1996, 2008, 2013, 2018,
     2027, 2039, 2041, 2054, 2048, 2065, 2070, 2071, 2080, 2085,
     2079, 2088, 2102, 2105, 2108, 2114, 2126, 2132, 2133, 2138,
     2145, 2146, 2152, 2155, 2162, 2169, 2181, 2188, 2185, 2188,
     2195, 2202, 2209, 2221, 2218, 2221, 2237, 2242, 2246, 2249,
     2249, 2266, 2267, 2272, 2273, 2289, 2293, 2292, 2310, 2313,
     2322, 2325, 2337, 2338, 2349, 2345, 2357, 2362, 2363, 2379,
     2384, 4392, 2393, 2396, 4373, 4373, 4368,16905,    0,    0,
     2412, 2415, 2424, 2437, 2412, 2437, 2436, 2444, 2456, 2460,

     2462, 2475, 2475, 2487, 2494, 2484, 2496, 2503, 2509, 2515,
     2522, 2526, 2528, 2541, 2543, 2548, 2550, 2563, 2570, 2572,
     2583, 2585, 2598, 2600, 2609, 2634, 2540, 2622, 2562, 2597,
     2625, 2650, 2641, 2647, 2653, 2656, 2662, 2670, 2671, 2677,
     2693, 2687, 1410, 1915, 4377,  416, 2699, 2707, 2723, 2726,
     2717,  470,  291,  736, 2699, 1745, 2731, 2745, 2745, 2752,
     2753, 2759, 2771, 2762, 2778, 2781, 2796, 2790, 2820, 2811,
     2809, 2818, 2833, 2835, 4351,16905, 4367, 4362, 4357, 2840,
     2842,16905, 4339, 4330, 4344, 4330, 4336, 4330, 4309, 4305,
     4308, 4307, 4303, 4292, 4278, 4277,  469,    0,    0, 1074,

     1045, 1517, 1117, 1250, 1828, 1185, 1549,  940, 2870, 1311,
     1266, 1565,  888, 1545, 2878, 2047, 2862, 2882, 2832, 2870,
     2891, 2892, 2899, 2911, 2913, 2918, 2924, 2933, 2939, 2940,
     2955, 2952, 2961, 2951, 2965, 2970, 2984, 2986, 2989, 2991,
     2999, 3013, 3018, 3017, 3022, 3031, 3041, 3045, 3051, 3057,
     3062, 3074, 3079, 3086, 3087, 3092, 3106, 3106, 3118, 3125,
     3115, 3125, 3132, 3146, 3151, 3153, 3158, 3170, 3173, 3175,
     3182, 3194, 3195, 3197, 3206, 3217, 3205, 3217, 3223, 3229,
     3240, 3238, 3245, 3257, 3253, 3265, 3271, 3277, 3295, 3270,
     3289, 3295, 3307, 3303, 3315, 3320, 3323, 3339, 3327, 3343,

     3346, 3346, 3365, 3367, 3368, 3374, 3387, 3364, 3387, 3393,
     3406, 3405, 3408, 3415, 3421, 3429, 3435, 3443, 3441, 3458,
     3421, 3463, 3464, 3475, 3471, 3483, 3488, 3491, 3502, 3504,
     3511, 3524, 3526, 2751, 3523, 3527, 4282, 4273,    0, 3533,
     3539, 3548, 3555, 3561, 3567, 3570, 3583, 3595, 3587, 3590,
     3594, 3603, 3612, 3631, 3622, 3634, 3651, 3656, 3662, 3663,
     3604, 3668, 3675, 3676, 3694, 3696, 3697, 1616, 3699, 3716,
     3708, 3725, 3718, 4285, 4283, 4276, 3726, 3744, 3743, 3735,
     3749, 3761, 4274, 4271, 4269, 3766, 3767, 3775, 3767, 3787,
     3789, 3794, 3796, 3813, 3813, 4268, 4266,  503, 4259, 4251,

      504, 4249, 3816, 3819, 3836, 3825, 3838, 2307, 2380, 4245,
      533, 3845,  623,  521, 4235, 3335, 3846, 3862, 3863, 3866,
     3870, 3879, 3880, 3886, 3887, 3896, 3903, 3906, 4230, 4229,
     4226, 3906, 3913, 3920, 3932, 4195, 4196, 4173,16905, 3929,
     3932, 4164, 4172,16905, 4168, 4146,16905, 4147, 4153, 4134,
     4131, 4140, 4117, 4130, 4130,    0,    0,  811, 2889, 1566,
     1671, 1365, 4138, 4135, 4134, 3966, 1095, 1020, 4126, 4107,
     4096, 1756, 1242, 1775, 1443, 1586, 4094, 4090, 4083, 1488,
     3941, 3946, 3953, 3962, 3974, 3981, 3981, 3988, 3989, 4007,
     4008, 4010, 4030, 4013, 4033, 4039, 4043, 4048, 4051, 4067,

     4073, 4074,  611, 4080, 4086, 4095, 4097, 4106, 4112, 4117,
     4118, 4133, 4139, 4094, 4143, 4144, 4146, 4167, 4168, 4169,
     4174, 4178, 4181, 4187, 4188, 4206, 4207, 4209, 4212, 4216,
     4219, 4224, 4233, 4241, 4245, 4247, 4255, 4258, 4264, 4272,
     4280, 4281, 4286, 4302, 4308, 4305, 4311, 4319, 4327, 4333,
     4338, 4337, 4342, 4345, 4363, 4366, 4369, 4372, 4386, 4389,
     4390, 4398, 4403, 4408, 4417, 4427, 4433, 4427, 4437, 4444,
     4456, 4458, 4465, 4467, 4478, 4480, 4487, 4502, 4500, 4513,
     4477, 4512, 4522, 4524, 4539, 4533, 4545, 4552, 4553, 4587,
     4570, 4577, 4056, 4042, 4556, 4589, 4589, 4595, 4601, 4610,

     4612, 4066, 4062, 4061, 4619, 4625, 4637, 4638, 4640, 4659,
     4660, 4637, 4661, 4672, 4681, 4680, 4681, 4715, 4702, 4703,
     4714, 4715, 4722, 4704, 4756, 4744, 4746, 4761, 4766, 4768,
     4781,  936, 4783, 4788, 4804, 4059, 4056, 4053, 4805, 4807,
     4816, 4736, 4743, 4825, 4816, 4839, 4841, 4780, 4849, 4854,
     4051, 4047, 4848, 4868, 3733, 4871, 4874,  702, 4042,  552,
      786, 4030,  618, 4029, 4877,  659,  738,  768, 1045,  643,
     4893, 4898, 4899, 4900, 4905, 4920, 4921, 4922, 4929, 4930,
     4935, 4947, 4952, 4959,16905, 4009, 4015, 4966, 4955, 4010,
     3998, 3987,  539, 3981,  407, 3981, 3984, 3970,  790, 1202,

     3964, 3978, 3976, 3974, 4999, 2003, 1625, 3972, 3969, 3948,
     1691, 1843, 1797, 2092, 2159, 1961, 5003, 4987, 4991, 4997,
     5014, 5018, 5024, 5030, 5041, 5035, 5045, 5057, 5053, 5054,
     5073, 5076, 5080, 5099, 5096, 5101, 5102, 5122, 5123, 5128,
     5135, 5072, 5143, 5135, 5142, 5149, 5161, 5163, 5168, 5174,
     5185, 5183, 5194, 5206, 5207, 5209, 5218, 5230, 5233, 5245,
     5242, 5257, 5254, 5266, 5277, 5278, 5283, 5289, 5206, 5297,
     5298, 5320, 5327, 5333, 5336, 5277, 5340, 5346, 5347, 5354,
     5363, 5366, 5373, 5375, 5388, 5390, 5397, 5398, 5414, 5415,
     5420, 5421, 5440, 5441, 5446, 5447, 5463, 5464, 5467, 5482,

     5483, 5482, 5490, 3924, 5507, 5508, 5502, 5512, 5546, 5549,
     5536, 5552, 5554, 5557, 3911, 3924, 5559, 5526, 5574, 5566,
     5571, 5583, 5574, 5591, 5597, 5600, 5616, 5618, 5625, 5630,
     5646, 5621, 5639, 5655, 5665, 5667, 5674, 1049, 1083, 5649,
     5682, 5690, 5696, 5702, 5703, 5705,  161,  737, 1315, 5674,
     5713, 5716, 5722, 5723, 5741,  604,  740, 5740, 5743, 5744,
     5752, 5756, 5768, 5764, 5776, 5781, 5784, 5797, 5800, 5803,
     5812, 5820, 5821, 5827, 5839, 5845, 5846, 5848, 5856, 5857,
     5874, 5877, 1162, 3932, 1333, 3893, 5879, 3878, 3876, 1233,
     1383,  812, 5886, 5887, 5890, 5905, 5906, 5911, 5918, 5927,

     5938, 5939, 5940, 5947, 5948, 5953, 3864,16905, 5967,  690,
     1395, 3844, 3843, 3831, 6004, 3825, 3839, 3831, 3815, 3810,
     3814, 3801, 3792, 3783, 3794, 3788, 1367, 1482, 1686, 1976,
     2256, 2881, 2131, 2451, 2226, 5995, 5998, 5999, 6001, 6014,
     6025, 6023, 6036, 6045, 6047, 6058, 6067, 6069, 6078, 6084,
     6089, 6033, 6092, 6111, 6057, 6111, 6103, 6119, 6125, 6133,
     6151, 6142, 6133, 6145, 6163, 6169, 6175, 6170, 6189, 6203,
     6198, 6217, 6219, 6222, 6229, 6241, 6243, 6248, 6250, 6263,
     6270, 6262, 6274, 6280, 6281, 6288, 6304, 6306, 6317, 6313,
     6325, 6329, 6341, 6332, 6353, 6356, 6360, 6365, 6368, 6383,

     6381, 6388, 6390, 6400, 6407, 6403, 6423, 6410, 6426, 6434,
     6435, 6440, 6443, 6457, 6461, 6463, 6476, 6478, 6483, 6489,
     6460, 6497, 6502, 6507, 6521, 6523, 6526, 6528, 6548, 6545,
     6550, 6557, 6570, 6569, 6570, 3765, 3768, 6577, 6578, 6596,
     6598, 6599, 6605, 6620, 6622, 6629, 6641, 6642, 6654, 6650,
     6666, 6675, 6674, 6675, 6683, 6684, 6692, 1172, 1455, 6700,
     6708, 6719, 6720, 6721, 6732, 1351, 2221, 1176, 6741, 6744,
     6753, 6764,  632,  853, 6741, 6763, 6766, 6775, 6781, 6788,
     6789, 6794, 6806, 6811, 6812, 6818, 6828, 6835, 6836, 6844,
     6836, 6856, 6856, 6863, 6864, 6880, 6886, 6892, 6870, 6900,

     6901, 6903,  893,  980, 6920, 3777, 3772, 3756, 6955, 6914,
     6930, 6933, 6947, 6950, 6964, 6973, 7007, 6981, 6997, 7000,
     7006, 7014,16905, 7026, 3713, 3728, 3699, 3694, 3712, 3695,
     3668,16905,16905,16905,16905,16905,16905,16905,16905,16905,
    16905, 3684, 3679, 3669, 3675, 3660, 3660, 3661, 3635, 3631,
     3647, 1108, 1369, 2330, 1290, 2318, 6334, 7051, 2340, 2517,
     1699, 7056, 7039, 7048, 7051, 7060, 7076, 7068, 7082, 7087,
     7088, 7103, 7104, 7115, 7116, 7112, 7124, 7133, 7134, 7140,
     7152, 7156, 7162, 7163, 7179, 7170, 7186, 7191, 7196, 7203,
     7208, 7213, 7225, 7229, 7231, 7239, 7251, 7253, 7258, 7270,

     7262, 7278, 7279, 7285, 7299, 7301, 7304, 7310, 7316, 7325,
     7323, 7332, 7338, 7345, 7354, 7353, 7358, 7361, 7365, 7377,
     7374, 7384, 7390, 7398, 7406, 7412, 7418, 7424, 7432, 7436,
     7442, 7448, 7451, 7464, 7457, 7473, 7476, 7479, 7485, 7494,
     7500, 7512, 7515, 7532, 7534, 7535, 7537, 6210, 7554, 7556,
     7582, 7563, 7569, 7585, 7590, 7591, 7602, 7607, 7614, 7627,
     7629, 7640, 7634, 7646, 7649, 7658, 7661, 3631,16905, 7662,
     7674, 7670, 7682, 7689, 7692, 7698, 7710, 7716, 7706, 7720,
     7723, 7737, 7728, 7745, 7744, 7751, 7763, 7765, 7770, 7782,
     7785, 1013, 1299, 7787, 7794, 7795, 7800, 7812, 3646, 3643,

     3642, 7817, 7818, 7824, 7836, 2390, 2474, 7838, 7843, 7845,
     7858, 7860, 7867, 7865, 7877, 7887, 7893, 7896, 7899, 7908,
     7902, 7916, 7917, 7935, 7936, 7937, 7938, 7957, 7959, 7966,
     7978, 7979, 7985, 3635, 3631, 7990,  784, 1441, 1533, 7991,
     8006, 8012, 8015, 8018, 8017, 8034, 8037, 8039, 8040, 1634,
     1845, 1893, 8056, 8059, 8061, 8062, 8081, 8083, 8086, 7956,
     3610, 3597, 3605, 3593, 3592, 3581, 3570, 3574, 3563, 3562,
     3558, 3540, 3547, 3550, 3543, 3538, 3543, 3510, 3498, 3523,
     3521, 3520, 1897, 1944, 1991, 2655, 1999, 2146, 2190, 2857,
     2504, 8084, 8103, 2251, 2414, 8105, 8112, 8113, 8118, 8130,

     8135, 8142, 8149, 8152, 8158, 8170, 8174, 8180, 8179, 8198,
     8199, 8198, 8206, 8207, 8210, 8225, 8226, 8231, 8232, 8237,
     8238, 8246, 8254, 8260, 8265, 8264, 8267, 8274, 8280, 8292,
     8291, 8292, 8299, 8309, 8315, 8321, 8316, 8335, 8337, 8340,
     8357, 8357, 8364, 8374, 8380, 8342, 8380, 8386, 8390, 8397,
     8398, 8416, 8417, 8418, 8423, 8439, 8440, 8445, 8446, 8461,
     8462, 8477, 8474, 8473, 8483, 8494, 8494, 8501, 8508, 8520,
     8511, 8525, 8530, 8539, 8549, 8560, 8556, 8562, 8575, 8577,
     8584, 8590, 8574, 8608, 8596, 8597, 8605, 8624, 8631, 8633,
     8636, 8648, 8659, 8657, 8670, 8664, 8679, 8681, 8690, 8692,

     3484, 8709, 8712, 8714, 8721, 8733, 8734, 8678, 8741, 8742,
     8751, 8758, 8763, 8779, 8781, 8782, 8784, 8803, 8805, 8802,
     8812,  984, 1241, 8820, 8826, 8832, 8840, 8812, 8846, 8852,
     8858, 2441, 2604, 8832, 8864, 8870, 8878, 7793, 8870, 8897,
     8894, 8899, 8900, 8906, 8914, 8917, 8923, 8933, 8935, 8944,
     8942, 8955, 8964, 8967, 8976, 8979, 8988, 9000, 8976, 8988,
     3501, 1537, 3499, 9008, 9012, 9024, 9027, 9000, 9024, 9031,
     9041, 9034, 9050, 3487, 1648, 3481, 9058, 9064, 9066, 9077,
     9086, 9074, 3464, 3446, 3452, 3443, 3435, 3438, 3425, 2991,
     3429,16905, 3414, 3400, 3411, 3399, 3409, 3395, 3390, 3385,

     3373, 3391, 1741, 3387, 2802, 3362, 1782, 3360, 2811, 9086,
     9094, 3359, 3358, 9100, 9103, 9110, 9122, 9124, 9131, 9133,
     9144, 9153, 9155, 9156, 9168, 9177, 9179, 9180, 9192, 9201,
     9213, 9214, 9189, 9221, 9222, 9227, 9228, 9244, 9245, 9253,
     9252, 9262, 9270, 9271, 9276, 9288, 9292, 9294, 9307, 9309,
     9314, 9316, 9329, 9326, 9329, 9336, 9343, 9346, 9362, 9353,
     9365, 9381, 9383, 9390, 9395, 9386, 9411, 9411, 9418, 9398,
     9430, 9432, 9439, 9440, 9445, 9462, 9467, 9457, 9481, 9487,
     9481, 9491, 9498, 9499, 9517, 9518, 9519, 9530, 9539, 9541,
     9542, 9558, 9561, 9567, 9570, 9582, 9579, 9589, 9589, 9595,

     9610, 9608, 9611, 9617, 9623, 9632, 9638, 9639, 9646, 9647,
     9652, 9666, 9668, 9679, 9681, 9675, 9689, 9701, 9698, 9701,
     9717, 9721, 9738, 9741, 9742,16905, 9741, 9749, 9750, 9755,
     9769, 9772, 9775, 9781, 9793, 9799, 9800, 9812, 9805, 9821,
     9824, 9833, 9840, 9849, 1778, 1539, 9852, 9855, 9861, 9869,
     9870, 9875, 9889, 9892, 1424, 1483, 9893, 9908, 9908, 9915,
     1492, 1906, 3356, 9925, 9929, 9941, 9933, 9941, 9957, 9962,
     9963, 9968, 9972, 9977, 9991, 9993, 9996, 9998,10005,10006,
    10011,10023,10028, 2023,10042,10044,10047,10049,10064,10061,
    10071,10077, 2223,10089,10095,10085,10099,10102,10118, 3320,

     3294, 3296, 3291, 3269, 3271, 3265,16905,16905,16905,16905,
     3249, 3260, 3250, 3250, 3229, 3247, 3230, 3223, 3217, 3212,
     2400, 3063, 2536, 3072,10121,10123,10124,10130,10138,10143,
    10144,10152,10162,10164,10171,10171,10179,10183,10195,10198,
    10200,10211,10217,10220,10223,10239,10242,10246,10251,10252,
    10260,10226,10270,10272,10269,10279,10279,10297,10287,10303,
    10304,10307,10322,10324,10333,10335,10346,10348,10357,10332,
    10356,10357,10376,10377,10378,10389,10398,10400,10401,10420,
    10423,10426,10429,10433,10449,10451,10452,10464,10458,10471,
    10480,10397,10483,10492,10486,10495,10507,10516,10523,10529,

    10532,10538,10544,10545,10560,10565,10566,10567,10587,10575,
    10589,10594,10598,10606,10617,10619,10628,10626,10641,10616,
    10648,10650,10657,10669,10670,10682,10689,10691,10694,10710,
    10702,10721,10722,10727,10734,10743,10746,10742,10754,10758,
    10766,10771,10774,10785,10787,10794,10794, 1135, 2635,10802,
    10811,10816, 1582,10808,10830, 1823, 2029,10825,10846,10839,
    10849,10865, 1928, 2058,10855,10865,10872,10873,10879,10891,
    10891,10898,10910,10910,10917,10922,10927,10936,10939,10955,
     1650,10957,10958,10964,10968,10980,10986,10987, 2062,10992,
    10993,11001,11015,11017, 3194,16905, 3191, 3196, 3191, 3173,

     3174, 3179, 3169,16905, 3165,16905, 3172, 3168, 3162, 3152,
     3155, 2438, 2610, 2483, 2867,11007,11024,11027,11030,11044,
    11047,11030,11063,11050,11065,11073, 3867, 9708, 6913,11076,
    11076,11085,11090,11104,11106,11109,11111,11126,11128,11133,
    11140,11141,11159,11160,11161,11168,11169,11172,11188,11185,
    11192,11195,11204,11210,11216,11217,11229,11232,11229,11236,
    11239,11246,11256,11262,11255,11272,11276,11280,11289,11286,
    11296,11313,11306,11323,11316,11316,11330,11335,11349,11351,
    11354,11356,11363,11371,11371,11379,11388,11398,11400,11407,
    11409,11420,11429,11419,11429,11435,11441,11448,11450,11457,

    11469,11474,11478,11483, 2674, 2688,11484,11492,11506,11500,
    11510,11514,11523,11531,11522,11541,11543,11550,11563,11552,
    11562,11570,11563,11586,11588,11595,11591,11603,11614,11616,
     1309, 1804,11619,11631,11636, 1359,11628,11644, 3170, 3167,
    11645,11650,11668,11669,11668, 3155, 3148,11676,11677,11680,
    11695,11696,11701,11708,11717,11721,11726,11727,11745,11746,
     1876,11745,11753,11769,11771,11772,11774, 2259,11781,11791,
    11793,11800, 3140, 3138, 3124, 3127, 3113, 3116, 3102, 3093,
     3103, 3085, 3078,  580, 3095, 3086, 2280, 2370,11802,11813,
    11815,11812,11833,11824,11830,11850,11840,11836,11856,11858,

    11869,11871,11882,11891,11898,11904,11907,11910,11913,11919,
    11868,11931,11932,11937,11953,11955,11956,11968,11975,11977,
    11965,11986,11987,11992,12008,12010,12011,12023,12030,12032,
    12039,12051,12052,12063, 5282,12064,12075,12086,12085,12097,
    12103,12104,12109,12126,12121,12127,12129,12138,12144,12147,
    12152,12168,12171,12173,12174,12193,12196,12198,12199,12205,
    12220,12221,12222,12227,12231,12243,12249,12239, 3079, 3078,
    12253,12265,12261,12271,12277,12286,12288,12293,12299,12305,
    12308,12314,12320,12321,12333,12336,12345,12342,12353,12359,
    12362,12378,  999, 2593,12378,12385,12386, 1826,12405,12406,

    12407,12408,12415,12420,12425,12434,12437,12443,12444,12462,
    12464,12465,12481,12461,12473,12485, 3071,12490,12491,12507,
    12508,12514,12515, 3067,12531,12532,12537, 3046, 3027,16905,
     3010,16905, 3006, 3019, 3020, 2997, 3000, 2991, 2988, 2981,
     2931, 2934, 2952, 2941,12540,12554,12559,12560,12566,12578,
    12584,12585,12590,12602,12606,12608,12616,12619,12635,12637,
    12640,12642,12657,12661,12667,12679,12681,12688,12689,12692,
    12707,12706,12707,12714,12726,12733,12739,12733,12745,12752,
    12753,12756,12771,12772,12773,12784,12793,12795,12806,12818,
    12825,12827,12830,12842,12853,12847,12781,12860,12861,12870,

    12867,12887,12888,12890,12891,12893,12912,12912,12922,12938,
    12929,12945,12946,12952,12962,12968,12918,12968,12974,12980,
    12987,12989,12996,13002,13017,13008,13023,13017,13031,13038,
    13041,13055,13058,13063, 1958, 2220,13064,13082,13084, 1873,
    13085,13087,13094,13104,13104,13111,13123,13125,13130,13136,
    13142,13145,13162,13164,13156,13177,13184,13186,13189,13196,
    13197,13215,13216,13217, 2922, 2919, 2924, 2890, 2861, 2870,
     2846, 1065, 2797, 2802, 2787, 2776, 2757,13224,13227,13228,
    13248,13245,13250,13251,13257,13270,13273,13279, 5487,13282,
    13285,13294,13301,13307,13306,13318,13323,13329,13335,13340,

    13342,13351,13363,13364,13375,13315,13371,13372,13392,13388,
    13396,13402,13408,13405,13421,13423,13424,13430,13443,13446,
    13452,13468,13471,13477,13483,13484,13500,13503,13505,13506,
    13512,13520,13525,13530,13542,13546,13552,13561,13563,13560,
     2692,13568,13580,13583,13585,13596,13602,13592,13606,13609,
    13614,13628,13631,13634,13640,13648,13652,13654,13662,13674,
    13676,13681,13683, 6075, 6658, 2763, 2007, 7703, 9184,10047,
     2734,13681,13683,13696,13701,13715,13717,13724,13730,13753,
    13738,13741,13756,13757,13758,13765,13771,13766,13785,13789,
    13791,13819,13799,13811, 2704, 2702, 2681,16905,16905,16905,

     2663, 2633, 2629, 2612, 2578, 2579,16905, 2554,13820,13822,
    13827,13839,13842,13848,13851,13854,13863,13875,13884,13886,
    13893,13899,13911,13912,13914,13927,13933,13937,13940,13954,
    13947,13966,13940,13970,13972,13985,13982,13985,13992,14006,
    14008,14011,14013,14030,14020,14026,14038,14045,14055,14059,
    14071,14074,14086,14080,14083,14095,14094,14102,14114,14117,
    14108,14123,14127,14130,14145,14137,14145,14153,14157,14169,
    14172,14174,14181,14194,14201,14203,14206,14218,14223,14225,
    14232,14233, 2305, 2181,14251,14252,14253,14254,14273,14263,
    14280,14277,14296,14286, 1704, 2433, 2572, 9890,12604,14299,

    14301,14320,14322,13473,14296,14329,14331,14348, 2712, 2789,
     2932,14350,14353,14355,14315,16905,16905, 2552, 2497, 2508,
     2506, 2460, 2462, 2463, 2441,14325,14363,14375,14377,14382,
    14384,14397,14404,14406,14409,14426,14429,14433,14436,14441,
    14453,14458, 9895,14455,14477,14495,14479,14497,14499,14501,
    14503,14510,14495,14515,14529,14534,14541,14537,14557,14529,
    14557,14563,14569,14576,14576,14584,14590,14593,14596,14612,
    14616,14628,14631,14628,14640,14651,14652,14657,14663,14679,
    14680,14685,14691,14702,14651,14696,14707,14713,14718,14717,
    14725,14726,14731,14743, 2450, 2639,14748,14749,14751,14768,

    14762,14773,14772,14777,14793, 2766, 3003,14795,14796,14798,
    14815,14805,14817,14824,14826,14834,14837,14846, 2394, 2376,
     2375,14852,14857,14856,14861, 2347, 2345, 2328, 2307,16905,
     2291, 2261,16905,14864,14881,14878,14886,14887,14895,14905,
    14907,14914,14916,14929,14938,14941,14950,14953,14962,14973,
    14904,14970,14977,14980,14996,14998,14999,15011,15018,15020,
    15023,15035,15031,15047,15050,15055,15056,15074,15075,15076,
    15077,15096,15098,15099,15095,15107,15111,15123,15126,15138,
    15132,15135,15147,15158,15159,15170,15175,14989,15182,15179,
    15182,15189,15196,15199,15205,15206,15224, 2263,15223,15224,

    15227,15243,15244,15249,15256, 2202, 2201,15255,15271,15272,
    15277,15281,15284,15289,15298,15301,15306,15320,15320,15327,
    15339,16905, 2160, 2123, 2094, 2097, 2091,15341,15350,15352,
    15361,15349,15361,15373,15373,15380,15392,15392,15399,15400,
    15418,15421,15417,15423,15431,15436,15443,15448,15455,15460,
    15474,15480,15481,15483,15502,15494,15502,15510,15501,15511,
    15520,15528,15532,15534,15551,15557,15558,15564,15573,15579,
     2978, 3049,15580,15585,15586,15601,15602,15607,15613,15620,
    15621,15626,15640,15642,15647,15649,15662,15661,15669,15671,
    15682,15679,15691,15698, 2070, 2034, 2004, 1983, 1936,15703,

    15302,15695,15702,15711,15718,15712,15721,15728,15735,15738,
    15754,15756,15757,15764,15765,15771,15781,15774,15788,15800,
    15802,15807,15809,15822,15824,15829,15831,15846,15851,15852,
    15853,15868,15873,15877,15872, 1959, 1924,15882,15891,15894,
    15899,15915,15917,15918,15920,15937,15939,15940,15942,15959,
    15961,15962,15969,15981, 1772, 1716, 1661, 1603, 1605,15983,
    15988,15990,16010,16011,16012,16019,16023,16035,16031,16043,
    16048,16049,16065,16069,16071,16057,16079,16082,16088,16089,
    16096,16105,16108,16115,16117,16124,16130,16136,16139,16141,
    16152,16158,16164,16165,16171,16177,16184,16190,16197,16196,

     1574, 1466, 1456, 1415, 1212,16209,16212,16208,16220,16226,
    16227,16232,16249,16250,16253,16268,16267,16268,16287,16288,
    16289,16290,16310,16311,16312,16323,16334,16332,16345,16347,
    16354,16356,16367,16369,16378, 1170, 1168,  946,16905,  882,
    16376,16391,16393,16398,16400,16413,16415,16420,16435,16440,
    16442,16451,16457,16462,16463,16474,16479,16485,16486,16491,
      788,  785,  702,  648,16498,16320,16487,16513,16514,16515,
    16526,16520,16535,16537,16344,16412,16905,16905,  524,  509,
    16534,16544,16550,16556,16564,16570,16584,16589,  471,  403,
    16590,16596,16556,16576,16610,  369,  326,16612,16615,16617,

      304,16905,16632,16634,  272,16637,16649,16905,16905,16694,
    16706,16718,16730,16742,16754,16760,16763,16775,16787,16799,
    16811,16823,16835,16842,16854,16859,16864,16871,  265,  194,
    16878,16885,  151,16892
    } ;

static yyconst short int yy_def[3635] =
    {   0,
     3609,    1, 3609,    3,    3,    3, 3610, 3610, 3610, 3610,
     3611, 3611, 3612, 3612, 3613, 3613, 3614, 3614, 3609,   19,
     3615, 3615,    1,   23,   23,   25,   25,   27,   27,   29,
       29,   29,   29,   29,   29,   35,   29,   29,   35,   39,
       25,   25, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3616,
     3616, 3617, 3617,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   63,   53,   53,   63,   63,   53,   53,
       63,   53,   63, 3609, 3609, 3609,   63,   63, 3609, 3609,
     3609,   63,   63, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,

     3618, 3609, 3618, 3619, 3609, 3620, 3621, 3609, 3622, 3609,
     3609, 3622, 3623, 3624, 3624,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115, 3609, 3625, 3609, 3609, 3609,
       63,   63,   53,   63,   63,   53,   53,   63,   63,   63,
       63,   53,   63, 3609, 3609,   63,   63,   63,   63,   63,
     3609, 3609,   53,   63,   53,   63,   53,   58,   53,   53,
       63,   63,   63,   63,   53,   53,   63,   63,   53,   53,
       63,   63,   63, 3609, 3609,  153,   63,  155,   63,   53,
       63,   63,   53,   63,   63,   63,   53,   53,   63,  168,
       63,   53, 3609, 3609,  155,   63,   63,   63,   63,  168,

       53, 3609, 3609,   63, 3609, 3609,  153,   63,  155,   63,
       63,   63,   63,  168, 3609, 3609,  155,   63,   63,   53,
       63, 3609, 3609,   53,   63,   58,   53,   63,   63,   67,
       63, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3626,
     3616, 3627, 3628, 3609,   63,   63,   63,   53,   53,   63,
      155,   63,   63,   53,   53,   53,   63,   63,   53,   53,
       53,   53,   53,   53,   63,   63,   63,   63,   63,   63,
       63,   63,  155,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63, 3628, 3628, 3628,   63,
       63,   67,   63,   63,   63,   63,   63,   63,   63,   63,

       63,   53,   63,   63,   63,   63, 3609, 3609, 3609, 3609,
     3609, 3609,   63,   53,   53,   53, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3618, 3609, 3618, 3619, 3620, 3620, 3609, 3621, 3622, 3622,
     3622, 3609, 3629, 3630, 3609, 3609, 3609, 3609, 3609, 3631,
     3609,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115, 3625,   53,   63,
       63,   63,   53,   53,   53,   63,   53,   53,   53,   63,
       53,   53,   53,   53,   53,   53,   53,   53,   63,   63,
       63,   63,   53,   53,   53,   53,   63,   63,   63,   63,

       63,   63,   63,   63,   53,   53,   63,   53,   63,   63,
       53,   63,   63,   63,   53,   53,   53,   53,   53,   53,
       53,   63,   63,   63,   63,   63,   63,   63,   53,   53,
       53,   53,   53,   53,   53,   53,   63,   63,   63,   63,
       53,   53,   53,   53,   53,   53,   63,   63,   53,   53,
       53,   53,   53,   63,   53,   53,   63,   63,   53,   53,
       63,   53,   53,   53,   53,   53,   63,   53,   63,   63,
       63,   63,   63,   63,   63,   53,   53,   53,   53,   53,
       53,  292,   53,   53, 3609, 3609, 3626, 3609, 3627, 3632,
       63,   63,   63,   63,   53,   53,   53,   53,   53,   63,

       63,   63,   53,   63,   63,   53,   63,   63,   63,   63,
       53,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   53,   63,   53,   53,
       63,   63,   63,   63,   63,   63,   63,   53,   53,   53,
       53,   53, 3628, 3628, 3628, 3628,   53,   53,   53,   53,
       53, 3628, 3628, 3628,   63,  292,   53,   63,   53,   53,
       53,   53,   53,   53,   53,   63,   63,   63,   63,   63,
       63,   63,   63,   63, 3609, 3609, 3609, 3609, 3609,   63,
       63, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3633, 3630, 3634,  115,

      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,   63,   63,   53,   53,
       53,   53,   53,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   53,   53,   53,   63,   63,   63,   63,
       53,   63,   63,   53,   53,   53,   53,   63,   63,   63,
       63,   63,   63,   53,   53,   53,   63,   53,   63,   63,
       53,   53,   53,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   53,   53,   63,   63,
       63,   63,   63,   63,   53,   53,   53,   53,   53,   53,
       53,   63,   63,   53,   53,   53,   63,   63,   53,   53,

       53,   63,   63,   63,   63,   63,   63,   53,   53,   63,
       63,   53,   63,   53,   53,   53,   53,   63,   63,   63,
       63,   63,   63,   63,   53,   53,   53,   63,   63,   63,
       63,   63,   63,  292,   53,   63, 3609, 3609, 3632,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   53,   63,
       53,   53,   53,   53,   63,   63,   63,   63,   63,   63,
       53,   63,   53,   53,   63,   63,   63,   53,   63,   63,
       53,   53,   63, 3628, 3628, 3628,   53,   53,   53,   53,
       53,   53, 3628, 3628, 3628,   53,   53,   53,   63,   63,
       63,   63,   63,   63,   53, 3628, 3628, 3628, 3628, 3628,

     3628, 3628,   63,   63,   63,   63,   63, 3628, 3628, 3628,
     3628,   53, 3628, 3628, 3628,  292,   53,   53,   53,   63,
       53,   53,   53,   53,   53,   53,   53,   53, 3628, 3628,
     3628,   63,   53,   53,   63, 3609, 3609, 3609, 3609,   53,
       53, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3630, 3634,  115,  115,  115,
      115,  115, 3631, 3631, 3631,  115,  115,  115, 3631, 3631,
     3631,  115,  115,  115,  115,  115, 3631, 3631, 3631,  115,
       53,   53,   53,   53,   63,   63,   53,   53,   53,   63,
       63,   63,   63,   63,   63,   63,   53,   53,   53,   63,

       63,   63,  754,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   53,   53,   63,   63,   63,   63,   63,
       63,   53,   53,   53,   53,   63,   63,   63,   63,   53,
       53,   53,   53,   53,   63,   63,   53,   53,   53,   53,
       53,   53,   53,   63,   63,   63,   63,   53,   63,   63,
       63,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       63,   53,   53,   53,   53,   63,   63,   53,   53,   53,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       53,   53,   63,   63,   63,   63,   63,   53,   53,  292,
       53,   53, 3609, 3609,   63,   63,   53,   63,   63,   63,

       63, 3628, 3628, 3628,   53,   63,   63,   63,   63,   63,
       63,   53,   63,   63,   63,   53,   53,   63,   63,   63,
       53,   53,   53,   63,  292,   63,   63,   63,   63,   63,
       63, 3628,   63,   63,   63, 3628, 3628, 3628,   63,   63,
       63,   53,   53,   53,   53,   63,   63,   53,   53,   53,
     3628, 3628,   53,   53,  155,   53,   53, 3628, 3628, 3628,
     3628, 3628, 3628, 3628,   53, 3628, 3628, 3628, 3628, 3628,
       63,   63,   63,   63,   63,   63,   63,   63,   53,   53,
       53,   53,   53,   53, 3609, 3609, 3609,   53,   63, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,

     3609, 3631, 3631, 3631,  115,  115,  115, 3631, 3631, 3631,
      115,  115,  115,  115,  115,  115,   63,   63,   53,   53,
       53,   63,   63,   63,   63,   63,   53,   63,   53,   53,
       63,   63,   53,   63,   63,   63,   63,   63,   63,   63,
       63,   53,   53,   53,   53,   53,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   53,   53,
       53,   63,   63,   63,   63,   53,   53,   53,   53,   53,
       53,   63,   63,   63,   63,   63,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   63,   63,

       63,   53,   53, 1172,   53,   63,   53,   53,  292,  292,
       53,   63,   63,   63, 3609, 3609,   63,   53,   63,   53,
       53,   53,   53,   53,   53,   53,   63,   63,   53,   53,
       53,   63,   53,   53,   63,   63,   63, 3628, 3628,   53,
       53,   63,   63,   63,   63,   63, 3628, 3628, 3628,   53,
       53,   53,   53,   53,   63, 3628, 3628,   53,   63,   63,
       53,   63,   63,   53,   53,   53,   63,   63,   63,   63,
       63,   53,   53,   53,   63,   63,   63,   63,   53,   53,
      754,   63, 3628, 3628, 3628, 3628,   63, 3628, 3628, 3628,
     3628, 3628,   53,   53,   63,   63,   63,   63,   63,   63,

       63,   63,   63,   53,   53,   53, 3609, 3609,   53, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3631, 3631, 3631,  115,
      115,  115,  115,  115,  115,   53,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   53,  155,   63,   53,   53,   53,   53,   53,   63,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   63,   63,   63,   53,   63,   63,   63,   63,   63,
       63,   53,   53,   53,   53,   53,   63,   63,   63,   53,
       53,   63,   63,  155,   63,   63,   53,   53,   63,   63,

       63,   63,   63,   53,   53,   63,   63,   63,   63,   53,
       53,   53,   53,   53,   63,   63,   63,   63,   63,   63,
       53,   53,   53,   53,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   53,   53, 3609, 3609,   53,   53,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   53,
       63,   63,   53,   53,   53,   53,   53, 3628, 3628,   53,
       63,   63,   63,   63,   63, 3628, 3628, 3628,   63,   63,
       63,   63, 3628, 3628,   53,   53,   63,   63,   63,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       63,   63,   53,   53,   53,   53,   63,   63,   53,   53,

       63,   63, 3628, 3628,   63, 3628, 3628, 3628,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53, 3609,   63, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3631, 3631, 3631,  115,  115,  115,  115,  115,
     1509, 1509,   63,   63,   63,   63,   63,   53,   63,   63,
       63,   63,   63,   63,   63,   53,   53,   53,   53,   53,
       63,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   63,   63,   53,   63,   63,   63,   63,

       53,   53,   53,   53,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   53,   53,   63,   53,   63,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   53,
       63,   63,   63,   63,   63,   63,   63, 1509,   63,   63,
      292,   53,   53,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   53,   63, 3609, 3609,   63,
       63,   53,   53,   53,   53,   53,   63,   63,   53,   53,
       53,   53,   53,   53,   53,   53,   63,   63,   63,   63,
       63, 3628, 3628,   63,   53,   53,   53,   53, 3628, 3628,

     3628,   53,   53,   53,   63, 3628, 3628,   63,   63,   63,
       63,   63,   63,   63,   53,   63,   63,   63,   63,   63,
       63,   53,   53,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63, 3628, 3628,   63, 3628, 3628, 3628,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63, 3628,
     3628, 3628,   63,   63,   63,   63,   63,   63,   63,   53,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3631,
     3631, 3631, 3631, 3631, 3631,  115, 3631, 3631, 3631,  115,
      115,   63,   63, 3628, 3628,   63,   53,   53,   53,   53,

       53,   53,   53,   53,   53,   63,   53,   53,   53,   63,
       63,   53,   53,   53,   63,   63,   63,   63,   63,   63,
       63,   53,   63,   63,   63,   53,   63,   53,   63,   63,
       53,   53,   53,   53,   53,   53,   53,   63,   63,   63,
       63,   53,   53,   53,   53,   63,   63,   63,   53,   53,
       53,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   53,   63,   63,   53,   53,   53,   53,
       53,   53,   53,   53,   63,   63,   53,   63,   63,   63,
       63,   63,   53,   53,   63,   63,   53,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,

     3609,   63,   63,   63,   63,   63,   63,   53,   53,   53,
       53,   53,   53,   63,   63,   63,   63,   63,   63,   53,
       53, 3628, 3628,   53,   53,   53,   53,   63,   53,   53,
       53, 3628, 3628,   63,   53,   53,   53,  292,   63,   63,
       63,   63,   63,   63,   53,   53,   53,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   53,   53,
     3628, 3628, 3628,   53,   63,   63,   63,   53,   53,   53,
       53,   53,   53, 3628, 3628, 3628,   53,   63,   63,   63,
       63,   53, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,

     3609, 3631, 3631, 3631,  115, 3631, 3631, 3631,  115,   53,
       53, 3628, 3628,   53,   53,   53,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   63,   63,   63,   63,
       63,   63,   63,   53,   53,   53,   53,   53,   53,   53,
       53,   63,   63,   53,   53,   63,   63,   53,   53,   63,
       63,   63,   53,   53,   53,   53,   53,   53,   63,   63,
       53,   53,   53,   53,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   53,   53,   63,   63,

       63,   63,   63,   63,   63,   63,   63,   63,   53,   53,
       53,   63,   63,   63,   63,   53,   53,   63,   53,   53,
       63,   53,  292,   63,   63, 3609,   53,   53,   53,   53,
       53,   53,   53,   53,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63, 3628, 3628,   63,   63,   63,   53,
       53,   53,   53,   53, 3628, 3628,   63,   63,   53,   53,
     3628, 3628, 3628,   53,   63,   63,   53,   53,   63,   63,
       63,   63,   53,   53,   63,   63,   63,   63,   53,   53,
       53,   53,   53, 3628,   63,   63,   63,   63,   63,   53,
       53,   53, 3628,   63,   63,   53,   53,   53,   63, 3609,

     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3631,  115, 3631,  115,   63,   63,   63,   63,   53,   53,
       53,   53,   63,   63,   63,   53,   53,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   53,   53,   53,
       53,   63,   63,   63,   53,   63,   53,   53,   53,   53,
       53,   63,   63,   63,   63,   63,   63,   63,   63,   53,
       53,   53,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   53,   63,   63,   63,   63,   63,   63,
       63,   53,   63,   63,   63,   63,   63,   63,   63,   63,

       63,   63,   63,   63,   63,   63,   63,   63,   63,   53,
       63,   63,   53,   63,   63,   63,   63,   63,   63,   53,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       53,   63,   63,   63,   63,   63,   63,   53,   53,   63,
       53,   53,   63,   63,   63,   63,   53, 3628, 3628,   53,
       53,   53, 3628,   53,   53, 3628, 3628,   53,   53,   53,
       53,   63, 3628, 3628,   53,   53,   53,   53,   53,   63,
       53,   53,   63,   53,   53,   53,   53,   53,   53,   63,
     3628,   63,   63,   63,   53,   63,   63,   63, 3628,   63,
       63,   53,   63,   63, 3609, 3609, 3609, 3609, 3609, 3609,

     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3631,  115, 3631,  115,   53,   53,   53,   53,   53,
       53,   63,   63,   63,   63,   53, 2323, 2323, 2323,   63,
       53,   53,   53,   63,   63,   63,   63,   63,   63,   63,
       53,   53,   63,   63,   63,   53,   53,   63,   63,   53,
       53,   63,   63,   63,   63,   63,   63,   63,   53,   53,
       53,   53,   53,   53,   53,   53,   63,   53,   53,   53,
       53,   53,   53,   53,   63,   53,   53,   53,   63,   63,
       63,   63,   53,   63,   53,   53,   53,   63,   63,   63,
       63,   63,   63,   53,   53,   63,   63,   63,   63,   63,

       63,   63,   53,   53, 3628, 3628,   53,   53,   53,   53,
       63,   53,   53,   53,   53,   63,   63,   63,   63,   63,
       53,   53,   53,   63,   63,   53,   63,   63,   63,   63,
     3628, 3628,   63,   63,   63, 3628,   53,   53, 3628, 3628,
       53,   53,   63,   63,   53, 3628, 3628,   53,   53,   63,
       63,   63,   63,   63,   63,   53,   53,   53,   63,   63,
     3628,   53,   53,   63,   63,   63,   63, 3628,   53,   63,
       63,   63, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3631, 3631,   63,   63,
       63,   53,   53,   53,   53,   53,   53,   63,   63,   63,

       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       53,   53,   53,   53,   63,   63,   63,   63,   63,   63,
       53,   53,   53,   53,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63, 2323,   63,   63,   63,   53,   53,
       53,   53,   53,   53,   53,   63,   63,   53,   53,   53,
       53,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   53,   63,   63,   53, 3628, 3628,
       53,   63,   53,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   53,   53,
       53,   63, 3628, 3628,   53,   53,   53, 3628,   63,   63,

       63,   63,   53,   53,   53,   53,   53,   53,   53,   63,
       63,   63,   63,   53,   53,   53, 3628,   53,   53,   53,
       53,   53,   53, 3628,   53,   53,   53, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3631, 3631,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   63,   63,   53,   53,   63,   63,
       63,   63,   63,   53,   53,   63,   63,   53,   53,   63,
       63,   53,   53,   53,   63,   63,   63,   53,   63,   53,
       53,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   53,   53,   53,   53,

       53,   53,   63,   63,   63,   63,   63,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   53,   53,   53,
       53,   53,   53,   53, 3628, 3628,   53,   63,   63, 3628,
       63,   63,   53,   63,   53,   53,   63,   63,   63,   63,
       63,   63,   63,   63,   53,   63,   63,   63,   63,   53,
       53,   63,   63,   63, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609,   53,   53,   63,
       63,   63,   63,   63,   63,   63,   63,   63, 2323,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,

       63,   63,   63,   63,   63,   53,   53,   53,   63,   53,
       53,   53,   63,   53,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   53,   53,   53,   53,   63,   63,   63,   63,   53,
     1884,   63,   63,   63,   63,   63,   63,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   63,   63,   53,   63,
       63,   63,   63, 2323, 2323, 3628, 3628, 2323, 2323, 2323,
     3628, 2323, 2323,   53,   53,   63,   63,   63,   63,  292,
       53,   63,   63,   63,   63,   53,   53,   53,   53,   63,
       63,   53,   53,   63, 3609, 3609, 3609, 3609, 3609, 3609,

     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       53,   63,   63,   63,   63,   63,   63,   53,   53,   53,
       53,   53,   63,   63,   63,   63,   53,   53,   53,   63,
       63,   63,   63,   63,   53,   53,   53,   53,   53,   63,
       63,   63,   63,   63,   63,   63,   53,   63,   63,   63,
       63,   63,   53,   63,   63,   53,   53,   53,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       53,   53, 3628, 3628,   63,   63,   63,   63,   63,   53,
       53,   53,   63,   53, 3628, 3628, 3628, 2323, 2323, 2323,

     2323, 2323, 2323, 2323,   53,   63,   63,   63, 3628, 3628,
     3628,   63,   63,   63,   53, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609,   53,   53,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   53,   53,   53,
       53,   53, 2323, 2323, 2323, 2323, 2323, 2323, 2323, 2323,
     2323, 2323,   53,   53,   53,   53,   53,   63,   63, 2323,
       53,   63,   63,   63,   53,   53,   53,   53,   53,   53,
       63,   63,   63,   53,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   53,   63,   63,   63,   63,   53,
       53,   53,   53,   53, 3628, 3628,   53,   63,   63,   63,

       63,   63,   53,   53,   63, 3628, 3628,   63,   63,   63,
       63,   53,   63,   63,   63,   53,   63,   63, 3628, 3628,
     3628,   63,   63,   53,   53, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609,   53,   53,   53,   53,   53,   53,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       53,   53,   53,   53,   63,   63,   63,   63,   63,   63,
       63,   63,   53,   53,   53,   53,   53,   63,   63,   63,
       63,   63,   63,   63,   53,   53,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63, 2323,   63,   53,
       53,   53,   53,   53,   53,   53,   63, 3628,   53,   53,

       63,   63,   63,   63,   63, 3628, 3628,   63,   63,   63,
       63,   53,   53,   53,   53,   53,   53,   63,   53,   53,
       63, 3609, 3609, 3609, 3609, 3609, 3609,   63,   63,   63,
       63,   53,   53,   53,   63,   53,   63,   53,   53,   53,
       63,   63,   53,   63,   53,   53,   53,   53,   53,   53,
       63,   63,   63,   63,   63,   53,   53,   53,   53,   53,
       53,   53,   63,   63,   63,   63,   63,   63,   63,   63,
     3628, 3628,   63,   63,   63,   63,   63,   63,   63,   53,
       53,   53,   63,   63,   63,   63,   63,   53,   63,   63,
       63,   53,   63,   63, 3609, 3609, 3609, 3609, 3609,   63,

     2323,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       63,   63,   63,   53,   53,   53,   53,   53,   53,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   53,   53, 3628, 3628,   53,   53,   53,
       53,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   53,   63, 3609, 3609, 3609, 3609, 3609,   63,
       63,   63,   63,   63,   63,   53,   63,   63,   53,   53,
       53,   53,   53,   63,   63,   53,   53,   53,   53,   53,
       53,   53,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,

     3609, 3609, 3609, 3609, 3609,   63,   63,   53,   53,   53,
       53,   53,   53,   53,   63,   63,   53,   53,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63, 3609, 3609, 3609, 3609, 3609,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
     3609, 3609, 3609, 3609,   63,   53, 2323,   63,   63,   63,
       63,   63,   63,   63,   53,   53, 3609, 3609, 3609, 3609,
       53,   53,   53,   53,   53,   53,   53,   53, 3609, 3609,
       53,   53,   63,   63,   63, 3609, 3609,   63,   63,   63,

     3609, 3609,   63,   63, 3609,   63,   63, 3609,    0, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609
    } ;

static yyconst short int yy_nxt[16961] =
    {   0,
       44,   45,   46,   47,   48,   44,   44,   44,   49,   50,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   44,
       44,   44,   44,   44,   44,   52,   53,   54,   55,   56,
       57,   58,   59,   60,   61,   52,   52,   62,   63,   64,
       65,   66,   52,   67,   68,   69,   70,   71,   72,   52,
       73,   52,   74,   75,   76,   44,   45,   46,   44,   44,
       44,   44,   44,   49,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       52,   52,   52,   77,   78,   52,   52,   52,   52,   52,
       52,   52,   52,   52,   52,   52,   52,   52,   52,   52,

       52,   52,   52,   52,   52,   52,   52,   79,   44,   80,
       81,  102,   85,  103,  105,  322,   81,  106,   52,   52,
      105,  323,   82,  106,   52,   52,  238,   83,   82,  239,
       86,  103,   87,   83,  240,  324,   88,  236,   89,   90,
      360,  237,   84,  240,   44,  325,  245,  352,   84,   91,
       44,   86,  128,   87,   92,   94,  245,   88,  856,   89,
       90,   95,   96,   93,   97,   98,  102,   85,  103,  332,
       91,  332,   94,   99,   85,   92,  242,  100,   95,   96,
      244,   97,   98,  329,   93, 3609,  103,  110,  111,  332,
       99,  110,  111,  112,  100,  543,  245,  112,  266,  244,

      330,  598,  129,  336,  130,  267,  337,  245,  113,  245,
     1466,  245,  113,   44,   45,   46,   47,   44,   44,   44,
       44,   49,   50,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   44,   44,   44,   44,   44,   44,  114,  114,
      115,  114,  114,  114,  116,  117,  118,  119,  114,  114,
      120,  121,  114,  114,  114,  114,  114,  122,  123,  124,
      125,  114,  114,  114,  114,  126,   44,   44,  128,   52,
      340,  245,  597,  341,  245,   82,  355,  240,  306,  352,
       83,  544,  245,   52,   52,   52,  352,  245,  201,  244,
       85,   82,  245,  245,  245,  234,   83,   44,  356,   52,

       52,  352,  809,  253,  201,  245,  254,  245,  352,  245,
      244,  234,  255,   44,  245,  598,  598,  245,  129, 3609,
      130,   44, 3608,  250,  245,  245,  251,  245,  258,  245,
      245,  448,  245,  252,  449,  245,  273,  245,  259,  245,
      245, 3605,  274,   52,  131,   52,  132,  133,  134,   82,
      135,  136,  588,  357,  137,  138,  139,   52,   52,  352,
       52,  140,  141,  142,  143,   52,  352,  589,  332,  144,
      333,  145,  146,   52,  358,  352, 3602,  147,   52,   52,
       52,  279,  359,   52,   52,  245,  148,  149,  333,  245,
       52,  150,   52,   52, 3609,  280,  363, 3609,  151,  245,

      152,  153,  154,  155,  156,  157,  158,  159, 3601,  160,
      352,  161,  162,  163,  164,  165,  166,  352,  167,  168,
      169,  170,  171,   72,  172,  461,  173,  174,  449,  175,
       44,  245,  245,  256,  245,  244,  336,  257,  268,  337,
     3597,  269,  245,  245,  245,  245,  245,  245,  361, 1316,
      802, 1317,  362,  176,  177,  178,  179,  180,  181,  182,
      445,  183,  352,  245,  184,  185,  186,  187,  188,  352,
      189,  190,  191,  192,   52,   52,  245,  245,  364,  193,
      314,  194,  195,  196,  245,  808,  598,  598,  352,  244,
      245,  197,  198,  164,  245,  352,  245,  199,  200,  201,

      245,  301,  245,  245,  245,  245,  202,  315,  203,  195,
      196, 3596,  270,  271,  245,  245,  245,  245,  197,  198,
      164,  272,  244,  244,  199,  200,  201,  245,  298,  281,
      299,  245, 1067,  202,  282,  203,  195, 1051, 1052,  245,
      244,  245,  283,  300,  245,  197,  198,  164, 3590,  204,
      245,  199,  244,  201,  302,  245,  284,  245,  303,  285,
      205,  286,  206,  195,  304,  366,  245, 1064,  245, 3589,
     1313,  244,  197,  198,  164,  367,  204,  245,  199,  245,
      201,  305,  352, 1314,  244,  461, 1284,  205,  468,  206,
      207,  208,  209,  210,  245,  211,  245,  365,  352,  545,

      245,  212,  213,  164,  245,  352,  352,  199,  214,  201,
      313,  546,  461,  352,  245,  449,  215,  600,  216,  217,
     2739,  472,  218,  244,  352, 2740,  602,  307,  219,  198,
      164,  308,  220,  352,  221,  309,  201,  244, 1066,  245,
      310,  311,  244,  222,  312,  223,  217, 1139, 1473,  218,
      245,  244, 1286,  603,  245,  219,  198,  164,  245,  220,
      352,  221,  244,  201,  316, 1706,  245,  275,  245,  245,
      222,  276,  223,   47,  332,  277,  332,  370,  244,  245,
      245,  245,  245,  445,  245,  278,  245,  245, 3580, 1292,
     1288,  245,  446,  245,  332,  257,  224,  177,  195,  225,

      245,  226,  245,  604,  227,  245,  245,  228,  229,  245,
      245,  352,  245,  230,  231,  245,  369, 1525,  352, 1526,
      245,  244,  232,  252,  233,  243,  243, 1283,  243,  243,
      243,  243,  243,  243,  243,  243,  243,  243,  244,  243,
      243, 3579,  243,  243,  243,  243,  243,  243,  243,  243,
      243,  243,  244,  245,  245,  244,  244,  244,  481,  244,
      482,  246,  431,  245,  245,  373,  245,  245,  245, 1289,
      810,  268,  247,  287,  248,  288,  249,  260,  261,  245,
      289,  245,  811, 1290, 1474,  262, 1467,  244,  263,  290,
      245,  264,  245,  291,  265,  292,  293,  245,  260,  611,

      245,  352,  245,  244,  294,  244,  245,  245,  352,  371,
      332, 1285,  333, 1961,  245,  295,  245,  296,  297,  343,
      343,  343,  343,  343,  343,  343,  343,  344,  344,  245,
      333,  244,  245, 1321, 1322, 3578, 3577,  345,  421,  245,
      372,  346,  245,  376,  245,  245, 1508,  245,  272,  347,
      422,  352,  423,  348,  424,  349,  350,  350,  352,  350,
      350,  350,  350,  350,  350,  350,  350,  350,  350,  351,
      350,  350,  244,  350,  350,  350,  350,  350,  350,  350,
      350,  350,  350,  351,  245,  374, 1707,  352,  245,  245,
      601,  245,  245,  245,  352,  375,  612,  245,  280,  245,

      352,  245,  245,  245,  353,  245,  245,  352,  300,  245,
      377,  354,  244,  260,  245,  245,  378,  245,  245,  875,
      304,  245,  245,  379,  245,  380,  245, 3564,  352,  245,
      245,  245,  352,  245,  381,  352,  245,  605,  245,  352,
     1734,  382,  383,  245,  384, 1256, 1257,  300,  245,  387,
      385,  245,  386,  388,  245,  244,  245,  245,  378,  391,
      389,  270,  408,  390,  245,  245,  245,  245,  392,  396,
      245,  393,  245,  397,  245,  245, 3563,  394,  616,  395,
      352,  868,  610,  398,  352,  245,  370,  352,  245,  399,
      245,  352,  401,  352,  245,  402,  406,  400,  403,  244,

      352,  404,  245,  244,  405,  245,  409,  245,  245,  407,
      245,  414,  410,  414, 2145,  245,  411,  245,  244,  415,
      245,  464,  412,  615,  471,  416,  245, 1735,  413,  245,
      418,  417,  244,  456,  419,  352, 2835,  425,  245,  245,
      245,  428,  352,  245,  420,  429,  245,  430,  245,  431,
      245,  426,  245,  433,  427,  432, 1291,  434, 1922,  245,
      352,  245, 1458,  298,  244,  438,  245,  352,  244,  435,
      436,  245,  437,  859,  245,  297,  245,  440,  439,  441,
      245,  245,  245,  245,  442,  352,  245,  444,  303,  245,
      245,  245,  352,  450, 1459,  387,  443,  257,  245,  245,

      245,  245,  244,  245,  245, 3002,  447,  398,  260,  245,
     3003,  858,  245,  245,  352,  370,  401,  245,  399,  245,
      408,  352,  245,  245,  245,  451,  245,  452,  405,  245,
      414,  245, 1111,  410,  245,  352,  606,  453,  455, 1778,
      407,  245,  352,  454,  861,  245,  352,  245,  245,  413,
      456,  418, 1779,  352,  244,  457,  422,  352,  245,  245,
      424,  245,  245, 2531,  352,  420,  459,  245,  430,  245,
      431,  460,  245,  458,  245,  245,  245,  245,  245,  245,
      245,  244,  462,  410,  300,  245,  257,  463,  245, 1701,
      441,  244,  245,  454,  414,  244,  398,  245,  245,  413,

      245, 1503,  464,  466,  465, 3562,  430,  245,  431,  245,
     3561,  245,  245,  866,  456,  387, 1692,  458,  245,  245,
      245,  245,  245,  245,  300,  352,  467,  245,  445,  383,
      260,  450,  352,  245,  245,  397,  414,  446,  401,  386,
      245, 1323, 1324,  245,  464,  398, 1325,  469,  245,  245,
      405, 3540,  244,  410,  245,  613,  417,  463,  260,  245,
      244,  352,  245,  470, 1506,  614,  401,  245,  352,  413,
      245,  426,  245,  245,  474,  473,  245,  410,  405, 1113,
      475,  411,  352,  862,  465, 2146,  430,  454,  431,  352,
      352,  245,  245,  413,  352,  245,  476,  352,  245,  609,

      257,  352,  401, 1782,  245,  477,  352,  873,  478,  351,
      398,  451,  245,  352,  405,  479,  410,  245,  244,  245,
      463,  483,  245,  245, 1923,  434,  454,  245,  244,  484,
      245,  245,  480,  245,  244,  493,  245,  245,  436,  245,
      245,  245,  245, 2693,  245,  872,  245,  494,  245,  245,
      245,  352,  244,  495,  245,  491,  245,  496,  352,  245,
      245,  245, 1699,  245, 1468,  245,  492,  245,  497,  245,
      244,  245, 1504,  499,  498,  500,  245,  245,  244,  245,
     1780,  245,  245,  505, 2698,  501,  351,  245,  351,  245,
      502,  503,  504,  245,  245,  245,  245,  506,  245,  245,

      510,  507,  244,  245,  245,  352, 1107,  245,  245,  245,
      512,  508,  352,  245, 1507,  245, 1553,  509,  245,  511,
      245,  245, 1527,  245,  513,  245,  245,  245,  245,  244,
      245,  245,  514,  245,  245,  245,  515,  245,  245, 1528,
      245,  796,  245,  244,  797,  245,  516,  245,  245,  245,
      245,  518,  517,  245, 2356,  245,  798,  245,  245,  245,
      244,  245,  245,  520,  245, 3539,  245,  519,  245,  245,
     1962,  245,  245,  245,  244,  607,  524,  245,  521,  523,
      525,  245,  522, 1115,  245,  245, 1693,  352,  245,  245,
      352,  245,  245,  245,  352,  608,  527,  528,  245, 3538,

      245,  351,  244,  245,  526, 3537,  245, 2363,  245,  529,
      245,  244,  245, 2357,  245,  245,  245,  530,  245,  245,
      531,  245,  245,  245,  533,  245,  245,  245,  352,  245,
      535, 1554,  245,  532,  245,  352,  245,  534,  245,  245,
      245,  245,  245,  860,  245,  245,  245,  245,  245,  245,
      245,  245,  244,  536,  245,  245,  244,  352,  244,  245,
      245,  537, 1963,  245,  352,  245,  538,  245,  245,  245,
      245,  245,  245,  245,  245,  867,  245,  245,  245,  876,
     2184,  245,  539,  541, 2349,  352,  540,  245,  245,  352,
      245,  549,  352,  542,  245,  245,  352, 2536,  245,  245,

      552,  244,  553, 3536,  550,  352,  352,  554,  547,  551,
      874, 1105,  352,  352,  548,  555,  245,  556, 1116,  245,
      245,  245,  245,  245,  559,  245,  352,  245,  245,  245,
      245,  557,  245,  352,  245, 3505,  560,  245,  245,  245,
     3504,  561,  245,  245,  245,  245,  558,  245,  245,  245,
      245,  245,  563,  244,  245,  245,  245,  245,  245,  245,
      245,  562,  245, 1974,  245,  352,  245,  244,  564,  244,
      567,  569,  352,  565,  245,  245,  566,  245, 2561,  571,
      568,  245,  245,  245,  245,  572,  570, 3503,  245,  245,
      245, 2193,  245,  245,  245,  245,  573, 1106,  245,  245,

      245,  245,  581,  245,  245,  351,  245,  245,  574,  528,
      580,  352,  245,  521,  245,  245,  245,  245,  352, 3206,
      245,  510,  245,  244,  245,  245,  245,  497,  245,  245,
      245,  352,  245,  245,  528, 1555,  245,  245,  352,  245,
      245,  245,  245,  245,  245,  245,  617,  245,  245,  245,
      245,  245,  618,  245,  530,  813, 3502,  814,  619,  245,
      351,  245,  815,  245,  245,  245,  245,  569,  245,  245,
      245,  816,  245,  621,  620,  245,  245,  245,  245,  623,
      245,  245,  245,  568, 2221,  245,  245,  245,  245,  245,
      245,  245,  622,  625,  626,  624,  352,  244, 3501,  245,

      627,  351, 1112,  352,  245,  245,  245,  245,  245,  245,
      245,  491,  245,  245,  245,  352,  628, 2348,  245,  245,
      631, 1114,  352,  244,  245, 2223,  245, 1332,  245,  245,
      245,  629,  245,  245,  245,  632,  245,  352,  630,  863,
      864,  865,  244, 2694,  352,  244,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  633,  634,  245,  245,  245,
      496,  245,  245,  637,  244, 2840, 2539,  245,  352,  245,
      245,  245,  245,  635, 1975,  352,  636,  245,  638,  503,
      639, 1331,  640,  352,  245,  245,  642,  641,  245,  245,
      352,  644,  244,  245,  643,  244,  245,  245,  245,  245,

      506,  245,  245,  245,  645,  245,  245,  509,  646,  245,
      245,  245,  244,  245,  245,  649,  351, 2364,  245,  245,
     2971, 2717, 1976,  245,  647,  244, 2002,  245,  245,  245,
      648,  245,  651,  245,  244,  245,  245,  245,  650,  652,
      245,  245,  245,  244,  653,  245,  799,  244,  245,  800,
      245,  245,  245,  655,  245,  245,  245,  245,  654, 2546,
      657,  801,  245,  351,  245,  245,  519,  245,  656,  245,
      658,  245,  245, 2003,  245, 2966,  661,  244,  244, 3459,
      245,  245,  665,  245,  245,  245,  245,  659,  245,  660,
      245,  666,  245,  662,  245,  245,  245,  667,  245,  245,

     1335,  352,  245,  245,  663,  529,  664,  245,  352,  245,
      351,  245,  245,  668,  245,  669,  352,  670,  351,  245,
     2004,  245, 3458,  352,  245,  671,  244,  245, 2006,  245,
      245,  672,  245,  674,  245,  245,  245,  245,  673,  245,
     1330,  245,  244,  352, 3083, 3457,  245,  675,  244,  245,
      352,  245,  245, 2381,  245,  245,  245,  245,  677,  245,
      676,  678,  680,  679, 3456,  245,  245,  245,  245,  681,
      245,  245, 2540,  245,  245,  245,  880,  244,  245,  683,
      245,  244,  245,  245,  245,  245,  682,  352,  245, 2547,
     2568,  245,  245,  684,  352,  245,  245,  245,  245,  685,

      245,  245,  686, 3455,  245,  245,  549,  245,  245,  245,
      687,  693,  692,  245,  245,  688,  245, 3399,  245,  689,
      245,  690,  245,  245,  245,  691,  245,  245,  245,  245,
      245,  245,  352,  245,  694, 1333,  245, 3398, 3397,  352,
      695,  245,  698,  245,  245,  245,  245,  245,  245,  245,
      696,  245,  245,  245,  697,  245,  699,  245,  245,  701,
      245, 1558,  245,  245,  245,  351,  245,  702,  245, 3396,
      245,  352,  703,  245,  245, 2007,  564,  245,  352,  566,
      245,  700,  245,  245,  245,  245,  704,  245,  245,  570,
      626,  245, 3196,  245,  245,  705,  245,  245,  706,  352,

      244,  245, 1334,  245, 3395,  245,  352,  245,  245,  351,
      707,  708,  245,  245,  709,  245,  644,  630,  710, 2008,
      244,  244,  245,  245,  711,  245,  640,  245,  245,  245,
      245,  245,  245, 1700,  245,  712,  245,  245,  245,  244,
      244,  245,  244,  245,  656,  245,  245,  666,  713,  245,
      245,  245,  245, 2389, 2967,  245, 1560,  671,  715,  245,
      245,  714,  245,  716,  245,  245,  352,  245,  245,  668,
      244,  245,  245,  352,  245,  245,  717,  245,  244,  710,
     2012,  245,  244,  245,  676,  245,  245,  718,  245,  245,
      245,  691,  245,  245,  644,  245,  352, 1556,  719,  351,

      245,  245, 3327,  352, 2724,  245,  721,  720,  245,  245,
      245,  671,  245,  245,  690,  245,  245,  245,  691,  245,
      245, 3326, 3195,  634,  244, 2743,  244,  245,  245,  723,
      245,  711,  245,  640,  722,  245,  724,  245, 1058,  666,
      245, 1059, 1781,  245,  245,  667, 3325,  245,  245,  351,
      712,  245,  245, 1060,  245,  245,  245,  245,  352,  245,
      725,  668,  643,  245,  245,  352,  245,  245,  245,  245,
     3324,  245,  245,  644, 3323,  245,  728,  654,  726,  245,
      352,  245,  245,  245,  245,  245,  729,  352,  245,  351,
      245,  658, 3322,  727,  244,  244,  245,  730,  245,  244,

      245,  245,  245,  245,  245,  731,  245,  245,  732,  244,
      660, 1061,  245,  244, 1062, 2744, 1932,  733,  245,  351,
      245,  245,  245,  245,  245,  690, 1063,  245,  551,  691,
     2412,  735,  245,  244,  245,  245,  245,  245,  245,  245,
      245,  245,  245, 2013, 3207,  245,  740,  736,  741,  245,
      245,  744,  244,  245,  245,  245,  245,  351,  245,  245,
      244,  742,  743,  245,  245,  245, 2587,  245,  245,  244,
     2155,  245,  245,  746, 3233,  245,  245,  245,  245,  245,
      245,  245,  745,  747,  748,  245,  749,  245,  245, 1559,
      245,  352,  245,  244,  245,  245,  245,  245,  352,  245,

     1933,  245,  351,  245,  245,  245,  750, 3232, 3231,  245,
     3230, 2588,  245,  245,  245,  751,  752,  245,  245,  245,
      754,  245,  756,  245,  245,  245,  245,  755,  245,  245,
      245,  753, 3229,  245, 3228,  758, 3227,  245,  245,  245,
      245,  245,  759,  245,  352,  245, 1791,  245,  757,  245,
      245,  352,  245,  245,  245,  351,  761,  352,  245,  245,
      245,  245,  245,  245,  352,  760, 2414,  245,  778,  245,
      245,  245,  762,  763,  764,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  245, 3226,  245,  765,  245,
      245,  244,  245,  245,  245,  766,  245,  245,  768, 3125,

      245,  245,  245,  780,  245,  245,  245,  245,  767,  245,
      769,  245,  244,  245,  245,  245,  245,  245, 3124,  245,
     3123, 2836,  770,  244,  245,  245,  245,  245,  245,  245,
      245,  771,  245, 2156,  245,  245,  245,  772,  781,  245,
      245,  773,  245,  245,  245,  774,  775,  776,  779, 3122,
      352,  245,  245,  245,  244,  245,  245,  352,  244,  782,
      245,  783,  784,  785,  777, 2532,  245,  245,  245,  245,
     3298,  245, 3121,  245, 3120,  786,  245,  245,  245,  788,
      245,  245,  245,  245,  245,  245,  789,  245,  245, 3119,
      245,  787,  245,  244,  245,  352,  790,  245,  245,  245,

      245, 2005,  352, 2669,  792,  245,  245,  244, 3118,  245,
      245,  791,  245,  245,  245,  245,  245, 2670,  245,  245,
      245,  245,  793, 3062,  794,  245,  245,  245,  795,  245,
      245,  244,  245,  812,  245,  245,  245,  245,  245,  804,
      245, 3219,  245,  245,  803,  245,  245, 3117,  245, 3116,
      245,  245,  805,  244,  245,  806,  245,  807,  245,  245,
      245,  813,  245,  814,  245,  245,  245,  245,  815,  245,
      245,  245,  817,  819,  245,  818,  245,  990,  245,  245,
      245,  245,  244, 3008,  245,  244,  245,  245,  245,  245,
      245,  245,  245,  820,  821,  245,  245, 3306,  245,  245,

      822,  245,  245,  824,  823,  245,  245,  245,  244, 3007,
      245,  826,  245, 3006,  245,  245,  245,  245, 3220,  245,
      245,  245,  245,  825,  828,  245,  245,  827, 3005, 2222,
      245,  829,  830,  831,  245,  245, 3004,  245, 2224,  245,
      245,  245,  352,  245,  245,  245,  245,  834,  245,  352,
      245,  352,  245,  245,  245,  245,  832,  833,  352,  245,
      245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  882,  245,  245,  245,  245,  835,  245,
      840,  869,  870,  871,  245, 3001,  245,  841,  881,  877,
      878,  879,  245,  774,  775,  776,  245,  352,  245, 3000,

     1102, 1103, 1104, 2009,  352, 2999,  245,  352,  245,  245,
      352,  245,  245,  245,  352,  883,  245,  352,  352,  245,
      245,  352,  884, 2998, 1557,  352,  245,  245,  352,  352,
      245,  245,  245,  245,  245,  885,  352,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  887,  245,  245, 2997,
      245,  244,  245, 2996,  245,  886, 2995,  245,  245,  245,
      351, 3221,  245,  245,  888,  245,  891,  889,  245,  245,
      245,  351,  890,  245,  245, 2877, 2876,  245,  245,  245,
      892,  245,  245,  245,  245,  245,  245,  245,  893,  245,
      895,  894,  245,  245,  245,  245,  245,  244,  245,  245,

     2207, 2208, 2209, 2210,  896,  245,  245, 3436,  245,  245,
      897,  245,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  244,  245, 2875,  245,  898,  245,  245, 2874,
      245, 2873, 2872,  899, 3307,  245,  900, 2871,  902,  903,
      245,  901,  245,  245,  245,  245, 2870,  245,  245, 2869,
      245, 2868,  245, 2867, 2866,  904,  245,  245,  245,  245,
      905,  245,  245,  245,  907,  245,  908,  906,  244,  245,
      245,  909,  245, 2865,  245,  245,  911,  245, 3437,  910,
      245,  245,  245,  245,  245,  245,  244,  245,  245,  245,
      244,  245,  245, 2413,  912,  245,  245,  244,  244,  914,

      245,  245, 2415,  352,  245,  245,  245,  913,  245,  245,
      352,  915,  352,  245,  245,  918, 2742,  916,  245,  352,
      245, 2741, 2738,  245, 2737,  917,  245,  245,  245,  245,
      245,  245,  920,  245,  245,  245,  245, 2736,  919, 2735,
      245, 2734, 2733,  245,  245,  245, 2732,  245,  922,  921,
      245,  245,  245,  245,  245,  923,  924, 2731,  245,  245,
      245, 2730,  245, 2729,  245, 2728,  245,  244,  245,  245,
      925,  245,  245,  245,  244,  245,  245,  245,  926,  245,
      245,  928,  929,  245,  245,  245,  244,  245,  245,  244,
      927, 2586,  930, 2585, 2584,  245,  245,  245, 2583,  245,

      931,  245,  245,  245,  245,  245, 2582,  932,  245,  245,
     2581, 2580,  245, 2579,  245, 2578,  245,  245, 2577,  245,
      245,  245, 2576,  245,  933,  934,  245,  245,  245,  245,
     2575,  245,  245,  245, 2574,  936,  245, 2573,  245,  245,
      245,  245,  935,  245,  245,  245,  938,  937,  245,  245,
      245,  245, 2411,  939, 2410,  245,  245,  245,  245,  940,
      245,  245, 2409,  245,  245,  941,  245,  245,  245, 2408,
      245,  245,  942,  245,  245,  245, 2407, 2406, 2405,  943,
     2404,  245,  245,  245,  245, 2403, 2402,  245,  944,  245,
      945,  245,  946,  245,  245, 2401,  245, 2400,  245,  245,

     2399,  245,  794,  948,  245,  245,  245,  951,  245,  245,
      245,  245,  245,  245,  245,  947,  245,  245,  245, 2398,
      245,  953,  949,  245,  950,  245, 2397, 2396,  245,  245,
      245,  245,  245,  245,  245,  952,  245,  245,  245,  245,
      954,  245,  955,  245,  245, 1068,  245, 1069,  245,  957,
     2395,  245, 1070,  245,  245,  245,  956,  245,  245,  245,
      245,  245,  245,  245,  958,  245,  959,  245,  245,  245,
      245,  245,  962,  245,  245,  244,  245,  244,  244,  351,
      245,  351,  245,  245,  245,  961,  245,  245,  960,  245,
      245,  245,  245,  245,  245,  245,  963,  964,  245,  245,

      245,  245,  245,  967,  245,  245,  351,  245,  245,  245,
      351,  245,  245,  245,  965,  245, 2220,  245,  245,  969,
      966,  245, 2219,  245, 2218,  968,  245,  245,  245, 2217,
      245,  245,  245,  245,  245, 2216,  245,  245,  971, 2215,
      245, 2214,  245,  245,  970, 2213,  245,  245,  245,  245,
      899,  979,  245, 2212,  245,  245,  245,  245,  972, 2211,
      245, 2206,  245,  245,  245,  245,  973,  245,  245,  245,
      245,  245,  974,  976,  975,  245,  245,  245,  245, 2205,
      951, 2204, 2203, 2202,  245,  245,  977,  245,  245,  245,
      245, 2201,  245,  245,  245, 2200,  980,  245,  245,  245,

      244,  245,  245,  978,  981,  245,  244,  245,  245,  245,
      245,  245,  982,  916,  245,  948,  245,  984,  244,  245,
      244,  245,  245, 2126,  245,  245,  245,  245,  245,  245,
      986,  245,  245,  983,  245,  245,  245,  245,  245,  351,
      351,  245,  351, 2001, 2000,  245,  245,  985,  245,  987,
      245,  245,  245,  245,  988,  245,  245,  992,  245,  245,
      989,  245,  245,  245,  991,  245,  245,  245,  245,  245,
      245,  245, 1999,  996,  245, 1998, 1997,  245,  245, 1996,
      995,  245,  997,  245, 1995,  245, 1994,  245, 1993,  245,
      999,  245,  245,  245, 1992,  245,  245,  245, 1000,  998,

      245,  245, 1991, 1990,  245,  245, 1002, 1003, 1004,  245,
     1989,  245, 1001,  245,  245,  245,  245,  245, 1988, 1987,
     1006,  245,  245, 1986,  245,  245,  245,  245,  245,  245,
     1005,  245,  245,  245,  245,  245, 1985, 1007, 1984,  245,
      245, 1983,  245,  245,  245, 1022,  245,  245,  245, 1008,
      244,  245, 1016,  245,  244,  245,  245, 1009, 1010, 1011,
      245,  244,  244, 1012,  245,  244,  245, 1013,  245, 1014,
      245, 1901,  245, 1777,  245, 1015, 1776,  245,  245, 1775,
     1017,  245,  245, 1019, 1018,  245,  245, 1774,  245,  245,
      245, 1773,  245,  245,  245,  245,  245,  245, 1023, 1020,

      245, 1772,  245,  245,  245, 1771,  245,  245, 1770, 1769,
     1768, 1767,  245, 1021, 1024,  245,  245,  245,  245,  245,
     1026, 1025,  245,  245,  245, 1029,  245, 1028,  245,  245,
      245,  245, 1766,  245, 1027, 1032,  245, 1765,  245, 1764,
      245,  245,  245,  245,  245, 1763,  245,  245, 1033, 1031,
      245,  245,  245,  245,  245, 1036, 1037, 1038, 1762, 1761,
     1030,  245,  245,  245,  245, 1034,  245,  245,  245, 1035,
      245,  245,  245, 1279,  245,  244,  245,  245,  245,  245,
     1039, 1280,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  244,  245,  245,  245,  245,  244,  245, 1669, 1668,

     1040,  245,  245,  245,  245,  245,  245,  245, 1042,  245,
      245, 1043, 1041,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245, 1552,  245, 1551,  245, 1550,
      245,  245, 1549,  245, 1548, 1045, 1044, 1046, 1047,  245,
     1048,  245,  245,  245, 1547,  245, 1053, 1049, 1546, 1054,
      245,  245,  245,  245,  245, 1056, 1050,  245, 1545,  245,
      245, 1055,  245,  245,  245, 1544,  245, 1543,  245,  245,
      245, 1542,  245,  245,  245, 1057, 1531, 1530,  243,  243,
      245, 1529,  245, 1071, 1065,  245,  245,  245,  245,  245,
      245,  245, 1074, 1072, 1523,  244,  245,  244,  245, 1073,

      245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  244, 1075,  245,  245, 2599,  245,  245, 1077,
      245,  245, 1076,  245,  245,  245,  245,  245,  245, 1078,
      245,  245,  245, 1079,  245,  245, 1082,  245, 1081,  245,
      245,  245,  245, 1080,  245,  245,  245,  245,  245,  245,
      245,  244,  245, 1437, 1083, 1436,  245,  245,  245,  245,
      245,  245, 1084,  245,  245, 1089,  245,  351,  245,  245,
      245,  245, 1088,  245,  245,  245,  245, 1108, 1109, 1110,
      245,  245,  245, 1118,  245,  245, 1117,  245,  351,  245,
      245,  351,  245,  351,  245,  351,  245,  351, 1326, 1119,

      245,  245, 1120,  245,  245,  245,  352,  245, 1121,  245,
     1320,  245, 1319,  352, 1318,  245,  245,  245,  245, 1315,
     1122, 1312,  245, 1311,  245,  245, 1123,  245, 1124,  245,
      245,  245,  245, 1125,  245, 1310,  245,  245,  245,  245,
      245,  245,  245,  245, 1127, 1308, 1307,  245,  244,  244,
     1130,  245,  245, 1128,  245, 1129,  245,  245, 1126,  245,
      245,  244, 1131,  245,  245,  245,  244,  245, 1132,  245,
      244,  245,  244,  245,  245,  244,  245,  245,  244,  245,
      244,  244,  245,  245,  245,  244, 1133,  245, 1216,  245,
      245, 1134,  245,  245,  245, 1215, 1135, 1136, 1137,  245,

      245,  245,  351,  245,  245, 1140,  245,  245,  245,  351,
      245,  245,  245,  351,  245,  351,  245,  245,  245, 1138,
      245,  245, 1148,  245,  245,  245,  351, 1142, 1141,  245,
      245,  245, 1143,  245, 1144,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  351,  245,  245,  245, 1145,
      245,  245,  245,  351,  351, 1147,  245,  351, 1101,  245,
     1100,  245,  245,  245, 1146,  245, 1099,  245, 1098,  245,
      245,  245,  245,  245, 1150, 1097,  245,  245,  245, 1096,
      245, 1149,  245,  245,  245, 1095,  245, 1094,  245, 1093,
      245, 1151, 1152,  245, 1153,  245, 1092,  245,  245,  245,

      245,  245,  245,  245,  245, 1091,  245, 1090,  245,  245,
     1087,  245,  245,  245, 1154,  245,  245, 1155,  245,  245,
      245,  245,  245, 1086, 1156, 1085,  245,  245,  245,  245,
      245,  245, 1157,  245, 1158,  245,  245,  245,  245,  245,
      245,  245,  245,  245, 1159,  244,  245,  245,  244,  244,
      245,  245,  245,  245,  244,  245,  245,  245,  245,  245,
      245,  245, 1160, 1161,  244,  245, 1163,  245,  244,  245,
      244,  245,  245,  245,  245,  245, 1162,  245,  244, 1164,
      245,  245,  245,  245,  245,  244,  245,  244,  244,  245,
      244,  245,  245,  244,  245,  244,  245,  245, 1165,  245,

     1167,  245,  244,  245,  244,  245, 1166,  245,  245,  245,
      994,  245,  993,  245,  245,  245,  855,  854, 1168,  245,
      245,  245,  245,  245,  245, 1170,  853,  245,  245,  245,
     1169,  245, 1171, 1172,  245,  245,  245,  245,  245,  245,
      852,  245,  245, 1174,  851,  245,  245,  245,  850,  245,
     1173,  849, 1047,  245,  848,  245,  847, 1176,  245,  245,
      245,  245, 1175, 1177, 1178,  245,  846,  245,  245,  845,
      245,  245,  245,  245,  844,  843,  245,  245,  245,  842,
     1179,  245,  245,  245,  245,  245,  245,  839,  245,  838,
     1180,  245, 1181,  837,  245,  836,  244,  245, 1184,  488,

     1185,  738,  245, 1182,  245,  245,  245,  245,  245,  245,
      245,  245, 1183,  245, 1186,  245,  245,  245,  737,  734,
      245,  599,  351,  596,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  595, 1188, 1187,  245, 1189,  594,  245,
      593,  245,  245, 1190,  245,  245,  245,  245,  592,  245,
      591, 1191,  590, 1192,  587,  245,  245,  245,  245,  245,
      245,  245, 1193,  245,  586,  245,  245,  245, 1194,  585,
      245,  245,  245,  584,  583,  582,  245,  245,  245,  579,
     1195,  578, 1197,  245,  245,  245,  245,  245,  245, 1196,
      245,  245,  245,  245,  577,  245,  576, 1199, 1198,  245,

      245,  245,  245,  575,  245,  245, 1201,  490,  245,  245,
      245,  245,  245,  245,  245,  244,  245,  245,  245,  488,
     1205,  245,  245, 1200,  245,  486,  245,  485,  245,  235,
      245,  245,  245, 1202,  245, 1203,  245,  328, 1204,  245,
      245,  327,  326,  245,  245,  321,  245,  245,  245, 1206,
      245,  245, 1207,  245,  245,  245,  245,  245,  245,  245,
      320,  319,  318,  245,  317,  245,  245,  245,  245,  245,
     1208, 1211, 1209,  245,  235,  245, 3609,  245, 1210,  245,
      245,  245,  245,  245,  108,  108, 1217, 3609, 3609,  245,
      245, 1212, 1213,  245,  245,  245,  245, 1068,  245, 1069,

      245, 3609, 3609, 3609, 1070,  245, 3609, 1214, 1072,  245,
     3609,  245,  245,  245,  245,  245,  245, 1219,  245,  245,
      245,  245, 3609,  245, 3609, 1220, 3609,  245,  245,  245,
      245,  245,  245,  245, 1218,  245,  245, 1222,  245,  245,
      245, 3609,  245, 3609,  245, 1221, 1223, 1224, 3609, 3609,
     3609,  245, 3609, 3609,  245,  245,  245, 1225,  245,  245,
      245, 3609,  245,  245,  245,  245, 1229,  245,  245, 1226,
      245,  245,  245, 3609,  245, 3609,  245, 3609,  245, 3609,
     1232, 1227,  245, 1228,  245,  245,  245,  245, 3609,  245,
      245, 1233, 3609,  245,  245,  245, 1230, 3609,  245, 3609,

     1231, 3609,  245,  245,  245,  245,  245,  245,  245,  245,
     3609,  245, 1234, 3609, 1235,  245,  245, 3609, 1237, 1236,
      245,  245,  245,  245,  245,  245, 1238, 1239,  245,  245,
     1246, 3609,  245, 1243,  245, 3609,  245,  245,  245, 1242,
     1240,  245,  245,  245, 3609,  245,  245,  245,  245,  245,
      245, 3609, 3609,  245,  245, 1244,  245,  245,  245, 1241,
     1245,  245, 3609,  245,  245,  245,  243, 1247, 1248, 1249,
      245,  245,  245,  243,  245,  245, 1252,  245,  245, 1266,
      245, 1250,  245,  245, 1267, 3609,  245,  245,  245, 1251,
      245,  245,  245, 3609,  245,  245,  245, 3609,  245, 3609,

      245, 1255,  245, 1254, 3609,  245, 1253,  245, 1274, 1258,
      245,  245,  245,  245,  245,  245, 3609,  245,  245,  245,
     1259,  245,  245,  245, 3609,  245, 1260,  245, 3609, 1261,
      245,  245, 1262, 1264,  245,  245, 3609,  245,  245,  245,
     3609,  245,  245, 3609,  245, 3609,  245, 3609, 1263,  245,
      245,  245, 1268, 1269, 1265,  245, 3609,  245, 3609,  245,
      245, 1271, 3609, 1270,  245,  245,  245,  245,  245, 1272,
     3609,  245, 3609,  245, 3609,  245,  245,  245, 3609, 3609,
     3609, 1273,  245,  245, 3609,  245, 1275,  245,  245,  245,
      245, 1277,  245,  245, 1276,  245,  245,  245, 3609,  245,

     3609, 3609,  245, 3609, 3609,  245, 3609, 1278, 3609,  245,
      245,  245,  245,  245, 1281,  245,  245,  245,  245,  245,
      245, 1282, 1287, 1293, 1294,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245, 1297, 3609,  245, 3609,  245,
     3609, 3609,  245, 1295,  245, 1296,  245,  245,  245,  245,
      245,  245,  245, 3609,  245, 1299,  245,  245,  245, 3609,
     1298, 3609, 1300,  245,  245,  245,  245, 3609,  245,  245,
      245,  245, 1301, 1302, 1303,  245,  245, 3609,  245, 3609,
      245,  245, 3609, 3609, 1306,  245,  245,  245,  245,  245,
      245,  245, 1305,  245,  245,  245, 1304, 3609,  245, 1309,

      245, 3609,  245, 3609, 3609,  245, 3609,  245, 3609,  245,
     1327, 1328, 1329,  245, 1247, 1248, 1249, 1336, 3609,  245,
     3609,  245, 3609, 3609, 3609,  245, 3609, 3609, 3609,  245,
      245,  245,  245,  245, 1337, 3609,  245,  245,  245,  352,
     1338, 1339,  245, 3609,  245, 3609,  352,  245,  245, 3609,
      245, 3609, 1340,  245,  245,  245,  245,  245,  245, 3609,
     1341,  245,  245, 3609,  245,  245, 1342,  245,  245,  245,
     3609,  245, 1343,  245,  245,  245, 3609, 3609, 3609, 1344,
     3609,  245,  245,  245, 1345,  245,  245, 1346,  245, 3609,
     1347,  245,  245,  245,  245,  245, 1348,  245, 1349,  245,

      245,  245,  245, 1350, 1351, 3609,  245,  245, 1224, 3609,
     1352,  245, 3609,  245, 3609, 1363, 3609,  245, 1225,  245,
      245,  245, 1355,  245, 1353,  245,  245,  245,  245,  245,
      245,  245,  245,  245, 3609,  245, 1357, 3609, 3609, 3609,
      245, 3609, 3609, 1354, 3609,  245,  245, 1358,  245,  245,
     1356, 3609,  245, 1359,  245, 3609,  245,  245,  245, 1360,
     1361,  245,  245,  245, 3609,  245,  245,  245, 3609,  245,
      245,  245,  245, 3609,  245, 1365,  245,  245,  245, 1362,
     1364,  245,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245, 1366, 3609,  245, 1368, 3609,

      245, 1369,  245, 1367,  245,  245, 3609,  245,  245, 1371,
     1370,  245,  245,  245, 3609,  245, 3609,  245,  245,  245,
      245, 3609, 3609, 3609,  245, 3609, 1372, 1373,  245,  245,
     3609, 1374,  245,  245, 1391,  245, 1375,  245,  245,  245,
      245,  245, 3609,  245,  245,  245, 3609,  245,  245,  245,
      245, 1376,  245,  245, 1377, 1378,  245, 3609, 1381,  245,
      245, 3609,  245,  245,  245, 3609, 3609,  245, 1384, 3609,
     1383,  245,  245, 1382, 1379,  245,  245,  245, 1380,  245,
      245, 3609, 1385,  245,  245, 3609,  245,  245,  245,  245,
     3609,  245,  245,  243,  243, 3609,  245, 3609,  245, 1386,

      245,  245, 3609,  245,  245,  245, 3609,  245,  245,  245,
     1387,  245,  245,  245, 3609,  245,  245,  245,  245,  245,
     1406,  245,  245, 1390, 1388,  245,  245,  245, 1389, 3609,
     3609,  245, 2787,  245, 3609, 3609,  245,  245,  245,  245,
      245,  245, 3609, 3609, 1392, 1393,  245, 3609, 1394, 1395,
      245, 1396, 1403,  245, 1397, 1398, 3609,  245, 1399,  245,
     1400,  245, 1405,  245, 1401, 1402,  245,  245,  245, 3609,
      245,  245, 3609, 1404, 1408,  245, 3609,  245, 3609,  245,
      245,  245,  245, 1407, 3609,  245, 1409,  245,  245,  245,
      245,  245,  245,  245, 3609,  245, 1410,  245, 3609,  245,

      245,  245,  245, 1411,  245,  245,  245,  245, 3609,  245,
      245, 3609, 1412, 3609,  245, 3609,  245,  245,  245,  245,
      245, 3609,  245, 3609, 1414,  245,  245, 3609, 1413, 3609,
     3609, 3609,  245, 3609,  245, 1416,  245,  245,  245, 1417,
     1415,  245,  245,  245, 3609, 1420, 1418, 3609,  245,  245,
     3609, 3609, 3609,  245,  245,  245,  245,  245, 1419,  245,
      245,  245,  245,  245,  245, 1421, 1422, 3609,  245,  245,
     3609, 3609, 1423, 3609,  245,  245, 3609, 3609, 3609,  245,
      245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  245, 3609, 3609, 3609,  245,  243,  243,

     3609,  245,  245,  245,  245,  245, 1424, 1425,  245,  245,
      245, 1426,  245,  245, 3609, 1361,  245,  245,  245, 3609,
     3609,  245, 3609,  245, 3609, 1428,  245,  245, 1427,  245,
      245,  245, 1353,  245,  245,  245, 3015,  245, 1429, 3609,
      245,  245,  245,  245, 3609, 1430,  245, 3609,  245, 1431,
      245,  245,  245,  245,  245,  245,  243, 1238, 1239,  243,
     3609,  243, 3609,  243,  245,  245,  243, 1438, 3609,  245,
     3609, 1240, 3609,  245, 1250,  245,  245,  245,  245,  245,
     1434, 1432,  245,  245,  245,  245,  245, 1435,  245,  245,
     3609,  245, 3609,  245,  245, 3609, 1433, 3609,  245,  245,

     1439,  245,  245,  245,  245,  245, 3609, 1440,  245,  245,
      245,  245,  245, 1443,  245,  245, 1441,  245,  245,  245,
     3609, 3609,  245, 1442,  245,  245,  245, 3609,  245, 3609,
      245, 1444,  245, 3609,  245, 3609,  245, 1445,  245,  245,
      245,  245, 1447,  245,  245, 1446,  245,  245, 1448, 3609,
      245,  245,  245,  245, 3609, 1452, 3609, 3609,  245, 3609,
      245, 3609,  245, 3609, 1449,  245,  245,  245,  245,  245,
     1450,  245, 3609,  245,  245, 1451, 3609, 1460,  245, 3609,
      245, 3609, 1453,  245, 1454,  245, 3609,  245,  245,  245,
      245, 1455,  245,  245,  245,  245,  245,  245,  245,  245,

      245,  245,  245, 3609,  245, 3609, 3609, 3609,  245,  245,
      245,  245, 1456,  245, 3609,  245,  245, 1469,  245, 1457,
     1462,  245,  245,  245,  245,  245,  245, 1461,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 1464, 3609,  245,
      245,  245, 1463, 1465,  245, 3609,  245,  245, 3609,  245,
      245,  245,  245, 3609,  245, 1470,  245,  245, 3609,  245,
     3609,  245,  245,  245,  245, 1471,  245, 1472, 1475, 1476,
      245,  245, 3609,  245, 1477,  245, 3609,  245,  245,  245,
      245,  245,  245,  245, 3609,  245,  245,  245,  245, 3609,
     1479, 1478,  245,  245,  245,  245, 3609, 3609, 1480, 3609,

      245, 3609,  245, 1481,  245,  245, 3609,  245, 3609,  245,
     1484, 3609,  245, 3609,  245,  245, 3609, 1482,  245,  245,
      245, 1483,  245,  245,  245, 3609,  245,  245,  245, 1487,
      245,  245, 3609,  245,  245, 3609, 3609,  245,  245, 1488,
     1486,  245,  245, 1485,  245, 3609,  245,  245,  245,  245,
     3609, 3609, 3609, 3609, 3609,  245,  245, 3609, 3609, 1489,
      245,  245,  245,  245,  245,  245,  245, 1490,  245, 1492,
     1491,  245,  245,  245,  245,  245,  245, 1493, 1495,  245,
     1494, 3609,  245,  245,  245,  245, 3609, 3609, 3609,  245,
      245, 3609,  245, 3609, 3609, 1496,  245,  245,  245,  245,

     1497, 1498,  245,  245, 3609,  245, 1499, 1502, 3609, 1505,
      245,  245, 1500,  245,  245, 1510,  245, 3609,  245, 1501,
      245,  245, 3609,  245, 1511,  245,  245,  245,  245, 1509,
      245,  245,  245, 3609,  245,  245,  245,  245, 1512,  245,
      245,  245, 3609, 1514,  245,  245, 3609, 3609,  245,  245,
     1513, 3609,  245,  245, 3609,  245, 3609,  245, 3609, 1516,
     1515,  245,  245, 3609,  245,  245,  245, 3609, 1517,  245,
     1519,  245,  245,  245,  245,  245,  245, 1518, 3609, 3609,
     3609,  245,  245,  245,  245, 3609,  245,  245, 1520,  245,
      245, 1521,  245, 1522,  245,  245,  245, 3609, 3609, 3609,

     3609, 3609, 3609, 3609, 3609, 3609,  245, 3609,  245, 3609,
      245, 3609, 1524, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
     1539, 1540, 1541,  245,  245,  245, 3609,  245, 1562,  245,
     3609,  245,  245,  245,  245,  245,  245, 1563, 1561, 3609,
      245, 3609,  245,  245,  245,  245, 3609, 1564,  245,  245,
     1566,  245, 3609,  245, 3609,  245, 1565,  245,  245,  245,
     3609,  245,  245, 3609, 3609, 3609,  245,  245, 1567,  245,
      245,  245, 1579,  245,  245,  245,  245,  245, 3609,  245,
      245,  245, 1568, 3609,  245,  245,  243,  243,  245,  245,
     3609,  245,  245,  245, 1569,  245, 1584, 1571,  245,  245,

      245,  245,  245, 1572,  245, 1570, 1573, 1574, 1575, 3609,
      245,  245,  245,  245,  245,  245, 3609, 3609,  245,  245,
      245, 3609, 1576,  245,  245, 3082, 1577, 3609,  245, 1580,
     1581,  245,  245,  245, 3609, 1578, 1585, 1583,  245,  245,
     1582,  245, 1586, 3609,  245,  245,  245,  245, 1587, 3609,
      245, 3609,  245,  245,  245,  245, 3609, 3609,  245, 1590,
      245,  245,  245,  245,  245, 1588,  245,  245, 1589, 3609,
      245, 3609,  245,  245,  245, 3609,  245,  245, 1591, 1592,
     3609,  245, 1593,  245,  245,  245, 1598, 1597,  245, 1594,
      245,  245,  245, 3609,  245, 3609, 1595,  245,  245, 1596,

     1599, 3609,  245,  245,  245, 3609,  245, 3609, 1600, 1602,
      245,  245,  245,  245,  245, 1601,  245,  245,  245, 3609,
      243,  243,  243, 3609, 3609, 3609,  245, 1608,  245, 1604,
      245,  245,  245, 3609, 1605, 1603, 3609,  245,  245,  245,
     1606,  245,  245,  245,  245,  245, 1607, 1609,  245,  245,
     3609,  245,  245,  245, 1881, 3609,  245,  245, 3609, 3609,
     3609,  245, 3609,  245, 3609, 1610,  245,  245,  245,  245,
      245,  245, 1611,  245,  245, 1612,  245,  245,  245, 3609,
      245, 3609,  245, 3609,  245,  245, 3609,  245, 1613,  245,
      245, 3609,  245,  245,  245, 1614,  245, 1615, 3609, 3609,

      245,  245,  245, 1617,  245,  245, 3609,  245,  245,  245,
     1616, 1618, 3609,  245,  245,  245,  245,  245, 3609, 1619,
      245,  245,  245,  245, 1620, 3609, 1621,  245, 1622,  245,
     1623,  245, 1624, 3609,  245, 3609,  245, 3609,  245, 3609,
      245,  245, 1625,  245, 1783, 1784, 1785,  245,  245, 3609,
      245,  245, 1626,  245,  245,  245,  245, 3609, 3609, 1628,
      245,  245, 1786,  245,  245, 1627,  245,  245,  245, 1630,
     3609, 1629, 1631,  245,  352,  245, 3609, 3609,  245, 1632,
      245,  352,  245,  245, 3609,  245,  245,  245,  245, 3609,
     1633, 3609, 3609,  245,  245, 3609, 1634,  245,  245, 1635,

      245,  245, 1637,  245,  245, 1636,  245,  245,  245,  245,
     1638,  245,  245,  245,  245,  245,  245,  245, 1640, 3609,
      245, 3609,  245, 3609,  245,  245, 1639,  245,  245,  245,
     3609, 1641,  245,  245, 1642,  245,  245, 1645, 3609, 1643,
     1646,  245, 3609,  245,  245, 1644,  245,  245,  245,  245,
      245, 3609,  245,  245,  245, 1499,  245,  245, 3609, 1647,
      245, 1500,  245,  245, 3609, 3609, 3609,  245,  245, 3609,
      245,  245, 3609,  245,  245,  245,  245, 1648,  245,  245,
     1650, 1649,  245,  245,  245,  245,  245,  245, 1573, 1653,
     3609, 1652, 3609,  245, 1651,  245,  245,  245,  245,  245,

      245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
      245, 3609,  245,  245, 3609,  245, 1654,  245, 3609,  245,
      245, 1656,  245,  245, 1655,  245, 1657,  245, 1604, 3609,
      245, 3609, 1659,  245, 3609,  245,  245, 3609,  245, 1606,
      245,  245, 1658,  245, 3609, 1607,  245,  245,  245,  245,
      245, 1660,  245,  245,  245,  245,  245,  245, 1662, 3609,
      245, 3609,  245, 3609, 3609,  245, 3609,  245, 1661, 3609,
      245,  245,  245, 1647,  245,  245,  245, 3609,  245, 1663,
      245, 3609,  245,  245,  245, 3609, 3609,  245, 3609,  245,
     3609,  245,  245, 3609,  245, 1664,  245,  245,  245, 3609,

      245,  245, 3609, 3609, 1665,  245,  245, 3609, 1666,  245,
      245,  245,  245, 1667,  245, 3609,  245,  245,  245,  245,
     1670,  245, 1672, 1671, 1673,  245,  245, 3609,  245,  245,
      245,  245,  245,  245, 3609,  245, 3609, 1675, 3609,  245,
      245, 3609,  245,  245, 1674, 3609,  245, 3609,  245,  245,
      245, 1677,  245, 3609,  245,  245,  245, 1676, 3609,  245,
     3609, 3609, 1678,  245,  245, 3609,  245,  245,  245,  243,
      243,  245,  245,  245, 1680,  245,  245, 3609, 1684, 1679,
      245, 3609, 3609, 1681,  245,  245, 1682, 3609,  245,  245,
     3609,  245,  245,  245, 3609, 3609, 1685, 3609,  245, 1683,

      245,  245,  245,  245, 1686,  245, 3609,  245,  245,  245,
      245,  245,  245, 1687,  245,  245,  245,  245,  245,  245,
      245, 1688,  245,  245,  245,  245, 1689,  245,  245, 1690,
     1691,  245, 3609,  245,  245,  245, 3609, 3609, 1695,  245,
     1694,  245,  245,  245, 3609,  245,  245,  245, 3609,  245,
      245,  245,  245,  245, 1696,  245, 3609, 3609,  245, 3609,
     3609, 1697, 1698,  245,  245,  245,  245,  245, 3609, 1708,
      245,  245, 3609, 1702,  245,  245,  245, 3609,  245,  245,
      245, 3609,  245,  245,  245,  245, 3609,  245,  245, 1703,
      245,  245,  245, 1705,  245, 3609,  245,  245,  245, 3609,

      245,  245,  245, 1704,  245,  245,  245,  245,  245, 1711,
     1710,  245, 3609, 1709, 3609,  245, 1713, 1714, 3609,  245,
     3609, 3609,  245, 3609, 3609,  245, 1712,  245,  245,  245,
      245,  245,  245,  245,  245,  245, 3609,  245, 1715, 1716,
      245, 3609, 3609, 1717, 3609,  245,  245,  245, 3609,  245,
      245,  245,  245,  245,  245,  245,  245, 1718, 3609,  245,
     3609,  245,  245,  245,  245, 1721,  245,  245, 3609,  245,
     1723,  245,  245, 1719,  245,  245,  245,  245,  245,  245,
      245, 1720,  245,  245,  245,  245,  245, 1722, 3609, 3609,
      245,  245,  245, 3609, 3609,  245, 3609,  245,  245, 1724,

      245, 3609,  245,  245,  245,  245,  245, 1726,  245,  245,
     3609,  245,  245, 1730, 1725, 3609,  245, 1727,  245,  245,
     1728,  245,  245,  245,  243,  243,  245,  245,  245,  245,
      245, 1732, 3609,  245, 3609,  245,  245,  245, 1729,  245,
     1731,  245,  245,  245, 3609,  245,  245,  245, 1733, 3609,
      245, 1581, 1736,  245,  245,  245, 3609,  245,  245, 1744,
     3609,  245,  245,  245,  245, 1737, 1738, 1739, 3609,  245,
     3609,  245,  245,  245,  245,  245,  245, 3609,  245, 3609,
     3609, 1745, 3609, 1740, 3609, 3609,  245, 1746,  245,  245,
      245,  245,  245, 1747,  245, 3609,  245, 3609, 1741, 1742,

     1743,  245, 3609,  245, 3609,  245, 3609,  245, 3609,  245,
     1748, 3609,  245, 3609,  245, 3609, 1749, 1750, 1751, 1752,
      245, 1755,  245, 3609,  245,  245, 1756, 3609,  245, 3609,
     3609, 3609, 3609, 3609,  245, 1753,  245, 3609,  245,  245,
      245,  245,  245, 1757, 3609,  245,  245,  245,  245,  245,
     1754, 1758,  245, 1759, 3609,  245, 1760,  245, 3609, 3609,
      245, 1787, 1788, 1789, 3609,  245, 1750, 1751, 1752,  245,
      245, 1794, 1795,  245,  245, 3609, 3609,  245,  245, 1790,
     3609,  245,  245,  245, 1753,  245,  245, 3609, 3609, 3609,
      245,  352,  245, 1792,  245,  245,  245, 1793,  352,  245,

      245,  245,  245, 3609,  245, 3609, 1796, 1797,  245,  245,
      245,  245, 1798,  245,  245, 3609,  245, 1799,  245, 1800,
      245,  245,  245, 3609, 3609, 3609,  245, 3609, 3609,  245,
      245,  245,  245,  245,  245, 1801, 3609,  245,  245, 3609,
      245,  245,  245, 3609, 1802,  245,  245,  245,  245,  245,
      245,  245,  245,  245, 3609, 1805, 3609, 3609, 1804, 1803,
      245,  245,  245,  245, 3609,  245, 1808,  245,  245, 3609,
     1806, 3609, 1807,  245,  245,  245,  245,  245, 1810,  245,
     1809,  245,  245,  245,  245, 3609,  245, 3609, 3609, 3609,
      245,  245, 3609, 3609, 3609,  245,  245,  245,  245, 1811,

     1812,  245,  245,  245,  245,  245,  245,  245, 1813,  245,
     3609,  245, 1814,  245,  245, 3609, 3609, 1815,  245,  245,
      245, 3609,  245, 3609,  245,  245, 1816,  245, 3609,  245,
      245, 1819, 1817, 3609,  245, 1818,  245,  245, 3609,  245,
     3609,  245,  245, 3609,  245, 3609,  245,  245, 1820,  245,
     1821,  245,  245,  245,  245, 1823,  245,  245, 3609,  245,
     3609, 1824, 3609,  245,  245,  245,  245,  245,  245, 3609,
     3609, 1822, 3609,  245, 3609,  245, 3609,  245,  245,  245,
      245, 1826, 1825,  245,  245,  245, 1827,  245,  245, 3609,
      245, 3609,  245, 3609, 3609,  245,  245,  245, 1828, 3609,

     1829,  245,  245,  245,  245, 1830,  245,  245, 3609, 3609,
     1832, 3609, 3609,  245,  245, 3609, 3609,  245,  245,  245,
      245,  245,  245, 1831, 1833, 1834,  245,  245,  245,  245,
      245, 1835, 3609,  245,  245,  245,  245, 3609, 1836, 1837,
      245, 3609,  245,  245,  245,  245,  245, 3609,  245,  245,
      245,  245, 1839,  245,  245,  245, 3609,  245,  245,  245,
      245, 3609,  245, 1838,  245, 3609,  245,  245,  245,  245,
     3609,  245,  245, 3609, 3609,  245,  245, 1840, 1841, 1842,
      245,  245,  245, 1843,  245, 3609,  245,  245,  245,  245,
     3609, 1845,  245, 1846, 1844,  245,  245,  245,  245,  245,

     3609,  245,  245,  245,  245,  245,  245, 1847,  245, 1849,
     3609,  245,  245,  245, 3609,  245, 3609, 1848,  245, 3609,
     3609,  245, 3609,  245, 3609,  245,  245,  245, 1850,  245,
     3609,  245, 3609,  245,  245, 1851, 3609,  245, 3609,  245,
      245,  245, 3609, 1852, 3609,  245,  245,  245, 3609,  245,
     3609,  245,  245,  245, 3609,  245, 3609, 1854, 1853,  245,
      245,  245,  245,  245, 3609,  245,  245, 1855,  245, 3609,
     1857,  245,  245,  245,  245, 1856,  245,  245,  245, 1858,
      245,  245,  245,  245, 3609,  245,  245,  245, 1861, 1859,
      245, 1863, 1860, 3609,  245,  245, 1862, 3609,  245,  245,

     3609,  245,  245,  245, 3609,  245,  245, 1864,  245,  245,
      245,  245, 3609,  245, 1866, 1867, 3609,  245, 3609,  245,
      245, 1865,  245,  245, 3609, 3609, 1871, 3609, 1868,  245,
      245, 3609, 3609,  245,  245,  245, 3609, 1869,  245, 3609,
     1875,  245,  245, 1870,  245,  245, 1872, 3609, 3609,  245,
     1873, 3609, 3609, 1874, 3609, 1876,  245, 1877,  245,  245,
      245,  245,  245, 1879,  245,  245,  245,  245,  245,  245,
     3609,  245, 3609, 3609, 3609, 1880,  245, 3609,  245,  245,
      245,  245,  245, 3609,  245, 1878,  245, 1882,  245, 3609,
      245,  245,  243, 3609,  243, 3609, 1883,  245,  245,  243,

      245, 3609,  245, 3609,  245, 3609, 1888, 1884,  245, 1885,
      245,  245,  245, 1886, 1889,  245,  245,  245, 3609,  245,
      245,  245, 1887, 3609,  245,  245, 3609, 1891,  245, 1890,
     3609, 1755, 1892,  245,  245,  245,  245,  245, 3609, 3609,
      245,  245, 3609, 3609,  245, 3609,  245, 1893,  245, 3609,
     3609,  245, 1894,  245, 3609,  245, 1895,  245,  245,  245,
      245,  245, 3609,  245,  245, 1896,  245, 3609,  245, 3609,
      245,  245,  245,  245,  245,  245,  245, 3609,  245,  245,
      245, 3609, 3609,  245,  245, 1897, 1899,  245,  245, 3609,
      245,  245,  245,  245, 1898,  245,  245,  245,  245,  245,

      245,  245, 1902, 3609,  245, 1900,  245, 3609, 1903,  245,
      245,  245, 3609, 1904,  243, 3084, 3609,  245,  245, 1907,
      245,  245, 3609,  245, 3609,  245,  245, 1905,  245, 1906,
      245,  245,  245,  245,  245,  245,  245,  245, 1908,  245,
     1909,  245,  245, 3609,  245,  245,  245, 1911,  245,  245,
     1910,  245,  245,  245,  245, 1915,  245, 3609, 3609,  245,
      245,  245,  245, 1912,  245,  245, 1913,  245, 3609,  245,
     1914,  245,  245,  245, 3609, 3609,  245, 3609,  245,  245,
      245, 1916, 3609,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245, 1917,  245,  245,  245,  245, 3609,  245,

     1919, 3609, 1918, 2161,  245, 2162, 3609,  245, 1920,  245,
     2163, 1921,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  245, 3609, 1924,  245, 3609,  245,  245,
     3609,  245, 3609, 1925, 1926,  245,  245,  245,  245, 1927,
      245,  245, 3609,  245, 1928,  245,  245, 3609, 3609, 3609,
     3609,  245,  245,  245, 3609,  245,  245,  245,  245, 1929,
      245,  245,  245,  245,  245, 1930, 1931,  245, 1934,  245,
      245,  245,  245, 1935, 3609,  245, 3609,  245, 3609,  245,
      245, 3609,  245, 3609,  245, 1936,  245,  245,  245,  245,
      245,  245,  245,  245,  245, 1940, 3609,  245, 3609,  245,

     3609,  245,  245, 1937,  245,  245, 3609, 3609, 3609,  245,
     1938,  245, 1939,  245, 3609, 3609,  245, 1942,  245,  245,
     1941,  245,  245,  245, 1943,  245,  245,  245,  245, 1945,
      245,  245, 1947,  245,  245, 3609,  245,  245,  245, 1946,
      245, 1944,  245,  245, 1948,  245,  245, 3609, 3609, 3609,
     3609, 3609,  245, 3609, 3609,  245,  245,  245, 1949,  245,
      245, 1950, 1951, 1952,  245,  245,  245,  245,  245,  245,
      245,  245,  245, 3609, 3609, 3609, 3609, 3609, 3609,  245,
      245,  245,  245,  245,  245,  245, 3609,  245, 1953,  245,
     1955,  245,  245,  245, 3609, 1982,  245,  245, 3609,  245,

      245,  245, 1954,  245,  245,  245, 1956, 1957,  245,  245,
      245, 1959,  245,  245, 3609,  245,  245,  245, 3609,  245,
     1960,  245,  245,  245,  245,  245, 3609, 3609, 1958,  245,
     3609, 3609,  245, 3609,  245,  245, 1965, 1964,  245, 3609,
      245,  245,  245,  245,  245, 1967,  245, 1969,  245,  245,
      245,  245,  245, 3609, 3609, 3609,  245, 1966, 1968,  245,
      245,  245,  245, 1971,  245,  245, 1973,  245,  245, 1972,
      245,  245, 3609,  245,  245, 3609, 3609, 3609,  245, 3609,
     1970,  245,  245,  245,  245,  245,  245,  245,  245, 1978,
      245,  245,  245,  245, 3609,  245,  245, 3609, 3609, 3609,

      245, 3609, 1977,  245, 3609,  245,  245,  245, 1979,  245,
      245,  245,  245,  245, 2010,  245,  245,  245,  245, 3609,
      245, 1980, 3609, 1981, 3609,  245, 3609,  245,  245,  245,
      245,  245, 3609, 2011, 3609,  245, 3609,  245, 3609,  245,
     2015,  245, 3609, 3609, 3609, 3609,  245,  245, 3609, 2014,
     3609,  245,  245,  245,  245,  245, 2016,  245,  245,  245,
     3609, 2017, 3609,  245, 3609, 3609, 3609, 3609, 2019,  245,
      245,  245, 3609,  245,  245, 2018,  245,  245,  245, 2020,
      245,  245, 3609,  245, 3609,  245, 2023, 3609,  245, 3609,
      245,  245,  245,  245, 2021,  245, 2024,  245, 2022,  245,

      245,  245, 2025, 3609,  245, 2026, 3609,  245,  245, 3609,
     3609, 2027, 3609,  245,  245,  245, 3609,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 3609,  245,  245,
     3609, 2031,  245, 2029,  245,  245,  245,  245, 3609, 2030,
     2033,  245, 2028,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245, 2032,  245,  245,  245,  245,  245,  245,
      245, 2035, 2036,  245, 2038,  245,  245,  245,  245,  245,
      245,  245,  245, 2034,  245,  245,  245, 3609, 3609, 3609,
      245,  245,  245, 2037,  245, 2039,  245,  245,  245,  245,
      245,  245,  245, 2044,  245,  245, 3609,  245, 2040, 2042,

     3609,  245,  245, 2043, 2041,  245, 2046,  245, 3609,  245,
      245,  245, 3609,  245,  245,  245, 2048, 2045,  245,  245,
      245, 2047,  245, 2049,  245, 3609,  245,  245, 2050, 3609,
      245,  245, 1929,  245,  245,  245,  245, 2051,  245, 3609,
      245, 3609,  245,  245,  245, 3609, 2052, 3609,  245,  245,
      245, 3609,  245, 2053,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245, 2054,  245,  245,  245,  245,
      245,  245, 2062, 3609,  245, 3609,  245, 3609, 3609,  245,
     3609,  245, 2055,  245,  245,  245,  245,  245, 3609, 3609,
     2056,  245,  245, 3609, 3609, 3609,  245, 2057, 2058, 2060,

      245,  245,  245,  245, 3609,  245,  245,  245,  245, 2059,
      245, 2061,  245,  245,  245,  245,  245,  245, 2065,  245,
      245,  245, 3609,  245,  245,  245,  245, 2063, 3609,  245,
      245,  245, 2064, 2066, 3609, 3609,  245,  245, 2067,  245,
      245,  245,  245,  245,  245, 3609,  245,  245,  245,  245,
     2068,  245,  245,  245, 3609, 3609, 3609,  245, 3609, 3609,
      245, 2069,  245, 2070, 3609,  245,  245,  245, 2071,  245,
     2073,  245,  245,  245,  245,  245, 2075, 3609, 3609,  245,
      245, 3609, 3609, 2072,  245, 2074, 3609,  245,  245,  245,
      245,  245,  245, 3609, 2076,  245,  245, 3609, 3609, 2077,

      245,  245, 2078,  245,  245,  245,  245,  245,  245,  245,
     3609,  245, 2080, 2081,  245, 3609,  245,  245,  245, 2079,
      245,  245,  245, 3609, 2082, 3609, 3609,  245,  245,  245,
     3609, 3609, 3609, 2083, 3609,  245,  245,  245,  245,  245,
      245, 2084,  245, 3609,  245, 2086, 2085,  245,  245,  245,
     2087,  245,  245,  245,  245, 3609, 3609, 3609,  245,  245,
     3609,  245, 3609,  245,  245, 3609,  245,  245,  245,  245,
     2089,  245, 3609,  245, 3609,  245, 2088, 3609,  245,  245,
      245, 3609, 2090,  245,  245, 3609,  245, 2091, 2096, 2092,
      245, 2094, 2097, 2093,  245,  245,  245, 2095, 3609,  245,

     3609,  245,  245, 2099,  245,  245,  245,  245, 3609,  245,
      245,  245, 2098,  245,  245,  245, 2101, 2102,  245,  245,
      245,  245, 2110,  245,  245, 3609,  245,  245,  245, 2100,
      245,  245, 3609,  245,  245, 2103,  245, 3609, 3609, 2104,
      245,  245, 3609, 2111,  245, 3609, 2112,  245,  245, 2105,
      245, 2106, 3609, 2107, 2113, 2108, 2109,  245,  245,  245,
     3609, 2114, 2116, 2115, 3609,  245,  245,  245,  245, 3609,
      245, 3609, 3609, 3609,  245,  245, 3609,  245,  245, 2117,
      245, 3609,  245,  245, 2118,  245, 3609,  245, 3609,  245,
      245, 2119,  245,  245,  245, 2120,  245, 3609,  245, 3609,

      245,  245, 2121,  245,  245,  245,  245,  245,  245, 2097,
     3609,  245, 2122,  245,  245,  245,  245,  245,  245,  245,
     2124, 2133,  245,  245,  245,  245,  245, 3609, 3609, 3609,
     3609, 2123, 3609, 3609,  245,  245,  245, 2125,  245,  245,
     2129, 2127,  245,  245,  245, 3609,  245,  245,  245, 3609,
     3609, 2130, 2128,  245, 3609,  245,  245, 3609,  245, 2131,
      245, 3609, 3609,  245,  245,  245, 3609,  245,  245,  245,
      245, 3609, 3609, 3609, 2132, 3609, 3609,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 2134, 2135, 3609,
      245,  245,  245, 3609,  245, 3609, 3609,  245, 2136,  245,

     3609,  245,  245, 2137,  245, 2138,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 3609,  245, 3609,
     3609, 2140, 3609,  245, 3609,  245,  245, 2139,  245,  245,
      245,  245, 3609, 2141, 2142,  245, 3609,  245, 2151,  245,
      245,  245,  245,  245, 3609, 2143,  245,  245,  245,  245,
     3609,  245, 3609,  245, 2148,  245,  245, 2144,  245,  245,
      245, 2147,  245,  245, 3609,  245,  245,  245,  245,  245,
     3609,  245, 3609,  245,  245,  245, 2157, 2149, 3609,  245,
      245, 2150, 3609,  245, 3609,  245,  245,  245, 3609, 2152,
     3609,  245,  245,  245, 3609, 2153,  245,  245,  245,  245,

      245, 2154, 3609,  245, 2164,  245,  245, 2158, 3609,  245,
     3609,  245, 3609,  245,  245, 3609, 2159,  245, 2160,  245,
     2166,  245, 2165,  245,  245,  245,  245,  245,  245,  245,
     2167,  245,  245,  245,  245, 3609, 2168, 3609,  245, 3609,
      245,  245,  245,  245,  245,  245, 3609, 3609, 2170, 3609,
      245,  245, 3609,  245, 3609,  245,  245, 2169,  245,  245,
      245,  245,  245, 2172,  245,  245, 2171,  245,  245,  245,
      245, 3609,  245, 3609,  245, 3609,  245,  245,  245,  245,
     2173,  245, 2174, 3609, 3609,  245,  245, 2175,  245,  245,
      245, 3609, 3609,  245,  245, 3609, 3609, 2177,  245,  245,

     2176,  245,  245, 3609,  245,  245,  245, 2178,  245,  245,
      245,  245, 3609,  245,  245,  245,  245,  245, 2180, 2182,
      245, 3609,  245,  245, 3609, 2179,  245,  245,  245,  245,
      245, 2183,  245, 3609,  245, 2185,  245, 3609,  245,  245,
     3609,  245,  245, 2189,  245, 2181,  245,  245, 3609,  245,
     2187,  245,  245,  245,  245, 3609, 2186,  245,  245,  245,
     3609,  245,  245,  245, 3609,  245, 3609,  245,  245,  245,
      245,  245,  245,  245, 2190,  245, 2188,  245,  245, 2191,
      245, 3609,  245, 3609,  245, 2194,  245, 3609, 2192,  245,
      245,  245,  245,  245,  245, 3609, 2196,  245,  245,  245,

      245,  245, 2199,  245, 3609, 3609, 3609,  245, 2195, 2197,
      245,  245,  245,  245,  245,  245,  245,  245, 3609, 3609,
      245,  245,  245, 3609, 3609,  245, 3609,  245,  245,  245,
      245,  245, 3609,  245, 3609,  245, 2198,  245,  245,  245,
     3609,  245,  245,  245,  245, 2225,  245, 3609,  245,  245,
      245,  245,  245,  245,  245, 2226,  245,  245,  245,  245,
     3609,  245, 3609,  245, 3609,  245, 2227,  245,  245, 2230,
      245, 3609, 3609, 2229,  245,  245, 2228,  245,  245, 2231,
     2232,  245,  245,  245, 3609,  245,  245,  245,  245,  245,
      245, 3609, 3609, 3609,  245,  243,  243,  245,  245,  245,

      245, 2233,  245,  245, 2235,  245,  245,  245, 3609,  245,
      245,  245, 2234, 2236,  245, 3609, 2237,  245,  245, 3609,
     3609,  245,  245,  245,  245, 3609,  245,  245,  245, 3085,
      245,  245, 2243,  245,  245,  245,  245, 2238, 2239, 2240,
      245, 2241, 3609,  245,  245,  245, 3609,  245,  245,  245,
      245, 2242, 2246, 3609, 3609,  245,  245,  245,  245, 2245,
     2244,  245,  245,  245,  245,  245,  245, 2247,  245,  245,
      245,  245,  245, 2249, 3609, 3609, 3609, 3609, 3609, 3609,
      245,  245, 2248,  245,  245,  245,  245,  245,  245, 2250,
      245,  245,  245,  245,  245,  245,  245, 2251, 2253,  245,

     3609,  245, 3609,  245,  245,  245, 3609, 2252, 3609,  245,
      245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
      245, 3609,  245, 2256,  245, 3609, 2255,  245,  245,  245,
     3609, 2254, 3609,  245, 2258,  245,  245, 2257,  245,  245,
      245,  245,  245,  245, 2259, 3609,  245, 3609,  245, 3609,
      245,  245, 3609,  245,  245,  245, 3609,  245,  245,  245,
      245, 2260, 2261,  245,  245,  245, 3609,  245,  245, 2262,
      245,  245, 2263,  245,  245,  245, 3609,  245, 3609,  245,
     3609,  245,  245, 3609,  245,  245,  245, 2265, 2264,  245,
      245, 2267,  245,  245,  245, 2266,  245, 3609, 3609, 3609,

     3609,  245, 3609,  245,  245,  245,  245, 2269,  245,  245,
     2268,  245,  245, 2270, 3609,  245, 2273,  245,  245, 3609,
      245, 3609, 3609,  245,  245,  245, 3609,  245, 2277, 2271,
      245,  245,  245,  245,  245, 2272,  245,  245,  245,  245,
     3609,  245,  245, 2276, 3609,  245,  245, 3609, 2274, 3609,
     2275, 3609,  245, 3609,  245,  245,  245,  245,  245,  245,
     2278,  245, 2279, 3609,  245, 3609,  245,  245,  245, 3609,
     3609, 3609, 3609,  245,  245, 3609,  245, 3609, 2280,  245,
      245,  245,  245, 2281,  245,  245,  245, 2283, 2282, 2285,
      245, 3609, 2284, 3609, 3609,  245,  245, 3609,  245, 3609,

      245,  245, 3609,  245, 3609,  245,  245,  245,  245,  245,
      245,  245, 2287,  245, 3609, 2286, 3609,  245, 3609, 2289,
      245,  245,  245, 3609, 2288,  245, 2290,  245, 3609, 3609,
      245,  245,  245, 3609,  245, 2291, 3609,  245,  245,  245,
      245,  245,  245,  245,  245,  245, 3609,  245,  245,  245,
     2293, 2292,  245,  245, 3609, 3609,  245, 3609, 3609, 3609,
     2295,  245,  245, 2294,  245,  245, 3609,  245,  245,  245,
     3609,  245,  245,  245,  245, 2297,  245, 3609, 3609, 2296,
     3609, 3609, 2298,  245,  245,  245,  245,  245,  245, 2299,
     3609,  245,  245,  245, 3609,  245,  245,  245, 2302, 2300,

      245,  245,  245, 3609,  245,  245, 2301,  245,  245, 3609,
     2303,  245,  245, 3609,  245,  245,  245,  245,  245,  245,
      245, 2308, 2305,  245, 3609,  245,  245, 2304,  245,  245,
     2306, 3609,  245, 2307,  245, 2309,  245, 2310,  245,  245,
      245,  245,  245, 2311,  245,  245, 3609,  245, 3609, 2314,
     3609,  245,  245,  245,  245,  245, 3609,  245,  245, 3609,
     2312,  245, 2315, 2313,  245, 2317,  245,  245, 2316,  245,
     3609, 3609,  245,  245,  245, 2319,  245, 3609, 3609, 3609,
      245, 3609,  245,  245, 3609,  245,  245,  245,  245, 2318,
      245, 2320,  245,  245,  245,  245,  245, 3609,  245, 3609,

      245, 3609,  245,  245, 2323,  245, 2324,  245, 3609,  245,
     2321,  245, 2322,  245,  245,  245,  245,  245, 2325,  243,
      243, 3609, 3609,  245, 3609,  245,  245,  245,  245,  245,
      245, 2327,  245, 2600, 2326,  245, 3609,  245, 3609, 2328,
      245,  245,  245, 2330, 2329,  245, 3609,  245, 2161,  245,
     2162, 2331, 3609, 3609, 3609, 2163, 3609,  245,  245, 3609,
      245,  245,  245,  245, 2332,  245, 2165, 2269, 2333,  245,
     3609,  245,  245, 3609, 3609,  245,  245,  245,  245, 3609,
      245, 3609,  245,  245, 2334,  245,  245, 3609, 2335,  245,
      245,  245,  245,  245,  245, 2336,  245, 2337,  245, 3609,

      245, 3609, 3609,  245, 3609, 3609, 3609, 3609,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 3609,  245,  245,
      245, 2338, 2339, 2340,  245,  245,  245,  245, 3609,  245,
      245,  245, 2342,  245,  245,  245, 2344,  245,  245,  245,
     3609, 2343,  245,  245,  245, 2341,  245,  245, 3609,  245,
      245,  245, 3609, 3609,  245,  245,  245, 3609,  245,  245,
     3609, 3609, 3609,  245, 3609,  245,  245,  245,  245, 3609,
      245, 2345, 2346, 3609,  245,  245, 3609,  245,  245, 2347,
     2353,  245,  245,  245,  245,  245,  245,  245, 3609, 2351,
     3609,  245, 2350,  245, 3609,  245,  245,  245,  245,  245,

     3609,  243,  243,  245, 3609,  245,  243,  243,  245,  245,
      245,  245, 2352,  245,  245, 2354,  245,  245,  245,  245,
      245, 3609, 3609,  245, 3609, 3609, 3609,  245,  245, 2355,
      245,  245,  245,  245,  245,  245,  245, 2358, 2359,  245,
     3208, 3609,  245,  245,  245, 3248, 3609,  245, 2360,  245,
     3609, 2361,  245,  245,  245, 2366,  245, 3609,  245,  245,
     3609,  245, 2362,  245,  245, 2365,  245,  245,  245,  245,
     3609,  245,  245,  245,  245,  245, 2368, 3609, 3609, 2367,
      245, 3609,  245,  245,  245,  245, 3609,  245,  245,  245,
     2369, 2370, 2371,  245,  245, 3609,  245, 2372,  245, 3609,

      245,  245,  245, 3609, 3609,  245,  245,  245, 2374, 3609,
     3609,  245,  245, 2373, 3609,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245, 2375,  245, 2376, 2377, 3609,
      245, 3609,  245,  245,  245,  245, 3609,  245, 3609,  245,
      245, 3609,  245, 3609,  245,  245, 2378,  245,  245,  245,
      245,  245,  245, 3609,  245, 2380,  245, 2379,  243,  243,
     3609, 3609,  245, 3609,  245, 3609,  245,  245,  245,  245,
      245,  245, 2382,  245,  245,  245,  245,  245,  245,  245,
     3609,  245, 3609,  245, 2383, 3086,  245, 3609,  245, 2386,
      245,  245, 2384,  245,  245, 2385,  245,  245,  245,  245,

      245, 3609,  245, 3609,  245,  245, 3609, 3609,  245, 3609,
      245, 2387,  245,  245,  245,  245,  245, 2388,  245, 2390,
      245,  245, 3609,  245,  245,  245,  245,  245, 2392,  245,
      245, 3609, 3609,  245, 3609, 2391, 3609, 3609,  245,  245,
      245,  245, 2393,  245,  245,  245, 2416,  245,  245,  245,
      245,  245, 2394, 2417, 2418,  245,  245,  245,  245, 3609,
      245, 3609,  245, 3609,  245,  245,  245,  245,  245, 2420,
     3609,  245,  245, 3609,  245, 3609, 3609,  245, 2423,  245,
      245, 2419,  245,  245,  245,  245, 2421,  245,  245, 2422,
      245,  245,  245,  245, 2426, 2424, 2425,  245,  245, 2428,

     3609,  245, 3609, 3609, 3609,  245,  245,  245,  245,  245,
      245, 2427,  245, 2429,  245,  245, 3609,  245,  245, 3609,
      245,  245,  245, 3609,  245, 2430,  245,  245,  245,  245,
      245, 3609,  245, 3609,  245, 2431, 3609,  245, 3609,  245,
     2432,  245,  245,  245,  245,  245,  245,  245, 2433,  245,
      245,  245,  245,  245,  245,  245, 2438,  245, 3609, 3609,
      245,  245, 2434, 3609,  245,  245, 3609,  245,  245,  245,
      245, 2436,  245,  245,  245, 3609,  245, 2435, 3609,  245,
      245, 3609, 3609,  245, 3609,  245,  245, 2437,  245,  245,
      245,  245,  245,  245,  245,  245,  245,  245,  245,  245,

      245,  245,  245,  245, 2439,  245,  245,  245, 2440, 2441,
      245, 3609,  245,  245,  245,  245,  245, 3609,  245, 3609,
      245, 3609, 2442,  245, 2443,  245,  245, 3609,  245, 3609,
      245,  245,  245,  245, 3609, 3609,  245,  245,  245, 3609,
      245,  245,  245,  245,  245,  245,  245,  245, 2446, 2444,
      245, 2445,  245, 3609,  245, 3609,  245, 2447,  245,  245,
      245,  245, 3609,  245, 3609,  245,  245,  245,  245,  245,
     2448,  245,  245,  245,  245, 2451,  245,  245,  245,  245,
      245, 3609,  245,  245, 2452,  245, 2449,  245, 3609, 3609,
      245,  245,  245, 3609, 2450,  245, 2453,  245,  245,  245,

      245,  245,  245,  245,  245, 3609,  245, 2455, 2456, 3609,
      245,  245,  245, 3609, 3609,  245, 3609, 2457, 2458,  245,
     2454,  245,  245,  245,  245,  245,  245,  245,  245, 2461,
      245,  245,  245, 2459,  245,  245, 2475, 3609,  245, 3609,
      245, 3609,  245, 3609,  245,  245,  245, 2460, 2463,  245,
      245, 2464,  245,  245,  245,  245,  245,  245, 3609,  245,
      245, 2466, 3609,  245,  245, 2462, 3609,  245, 3609, 2465,
      245, 2467,  245,  245,  245,  245,  245, 2469,  245, 2468,
     3609,  245,  245,  245,  245,  245,  245, 3609,  245, 2471,
      245, 3609,  245,  245,  245,  245, 2470,  245,  245, 3609,

     3609,  245,  245, 2472, 3609, 2473,  245, 3609,  245,  245,
     2474, 3609,  245, 2476,  245,  245,  245,  245,  245, 3609,
      245,  245,  245, 2477,  245,  245,  245,  245, 3609,  245,
      245, 3609, 3609,  245, 3609, 3609,  245,  245, 3609,  245,
     2478,  245,  245, 3609, 3609, 2480,  245, 3609, 3609,  245,
      245,  245, 2479,  245, 2481,  245, 3609,  245,  245,  245,
      245, 3609,  245,  245,  245, 3609, 2483,  245,  245, 2482,
      245,  245,  245,  245,  245,  245,  245, 3609, 2485, 2486,
     3609, 3609, 2484, 3609, 3609, 2487,  245, 3609,  245,  245,
      245,  245,  245,  245,  245,  245,  245,  245, 2488,  245,

      245,  245, 2489, 2492,  245, 3609, 3609, 3609, 3609,  245,
      245,  245, 2490,  245,  245,  245,  245,  245,  245,  245,
      245,  245, 3609, 2493,  245, 3609,  245, 3609,  245, 3609,
     3609, 2491,  245,  245, 2494, 3609,  245, 2495,  245,  245,
      245,  245, 3609,  245, 2502,  245, 3609,  245, 2497,  245,
     2496,  245,  245,  245,  245,  245,  245,  245,  245,  245,
     2500,  245,  245, 2498, 3609, 2499, 3609,  245, 2505, 2506,
      245,  245,  245, 3609,  245,  245,  245, 2501, 2503, 3609,
      245, 3609,  245,  245,  245,  245, 3609,  245, 3609, 3609,
     2504,  245,  245, 3609,  245, 2509,  245, 3609, 3609,  245,

      245,  245, 3609,  245,  245, 3609, 2507, 2508,  245, 3609,
     3609, 3609,  245,  245,  245,  245,  245,  245, 2510,  245,
      245,  245, 3609,  245, 2512,  245,  245, 3609,  245, 2511,
      245, 3609, 3609,  245, 3609,  245,  245, 3609,  245, 3609,
      245, 2514, 2513,  245,  245,  245, 3609, 2515,  245, 3609,
     3609,  245,  245, 2517,  245,  245,  245,  245, 3609, 3609,
      245,  245, 3609, 2518,  245,  245,  245, 2516,  245,  245,
      245,  245,  245, 2519, 3609, 3609,  245,  245,  245, 3609,
      245,  245,  245, 2521,  245,  245, 3609,  245,  245, 3609,
      245, 2520,  245,  245,  245,  245, 3609, 2522, 3609,  245,

      245, 3609, 2523, 3609, 2526,  245, 3609, 2524,  245,  245,
      245,  245,  245,  245, 2525,  245, 2527, 2528,  245,  245,
      245,  245,  245, 3609, 2529, 3609, 3609, 3609,  245,  245,
      245,  245, 3609,  245, 3609,  245,  245, 2530,  245,  245,
     2537, 2533, 3609,  245,  245,  245, 3609,  245, 2534,  245,
      245,  245,  245,  245,  245,  245, 2535,  245,  245,  245,
     3609, 3609, 2538, 3609,  245, 2541,  245,  245,  245,  245,
     3609,  245, 3609,  245,  245, 2542, 3609, 2544,  245, 3609,
      245, 3609,  245,  245, 3609,  245, 2543,  245,  245,  245,
      245,  245,  245,  245, 2548, 2545,  245, 3609,  245,  245,

      245,  245, 2549, 3609,  245, 3609,  245,  245,  245,  245,
     3609,  245,  245,  245,  245,  245,  245, 2551,  245,  245,
      245,  245,  245, 3609, 2550,  245,  245, 3609, 3609, 3609,
      245, 3609,  245, 3609, 2552,  245, 2554, 2553,  245,  245,
      245,  245, 3609, 3609,  245,  245, 3609, 3609, 3609,  245,
      245,  245, 3609, 2555,  245,  245,  245, 2556,  245, 3609,
      245,  245, 2557,  245,  245,  245,  245,  245,  245, 3609,
     2558, 3609, 3609, 3609, 3609,  245, 3609,  245,  245,  245,
      245,  245, 2559,  245,  245, 2560, 3609,  245,  245,  245,
      245,  245,  245, 3609, 2563, 3609,  245, 3609,  245,  245,

     3609,  245,  245, 3609, 2562, 3609,  245, 2564,  245,  245,
     2565,  245,  245,  245,  245, 3609,  245,  245,  245,  245,
      245,  245,  245,  245,  245, 3609,  245,  245, 3609,  245,
      245,  245, 3609, 2566, 2567,  245,  245,  245, 2589, 2569,
      245, 2571,  245,  245, 2570,  245,  245,  245,  245,  245,
     2590,  245,  245, 2591, 2572,  245,  245, 3609,  245,  245,
      245,  245, 3609,  245, 2594,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 3609, 3609, 2593,
      245, 2592, 2596,  245,  245,  245,  245,  245,  245,  245,
      245,  245, 3609,  245,  245,  245, 3609,  245, 3609,  245,

     2595,  245,  245, 3609,  245, 2597,  245,  245, 3609,  245,
      245, 3609,  245,  245, 2598,  245,  245, 2602,  245,  245,
     2601, 3609, 2603, 3609,  245, 3609,  245, 3609,  245,  245,
      245,  245,  245,  245, 2604,  245,  245,  245,  245,  245,
      245,  245, 3609,  245, 3609,  245, 2605, 3609,  245, 3609,
      245, 3609,  245, 2606,  245,  245,  245, 3609,  245, 2608,
      245, 3609,  245,  245, 1594, 2607, 2610,  245,  245,  245,
      245, 3609,  245, 3609, 3609, 3609, 3609,  245, 3609,  245,
      245, 2609,  245,  245,  245, 2611,  245,  245, 3609,  245,
      245, 2612, 3609,  245,  245,  245, 2613,  245,  245, 3609,

     3609, 3609, 2614,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245, 3609,  245, 2615,  245, 3609,
      245, 2618,  245, 3609,  245,  245, 2616, 3609,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 2617,  245,  245,
     2620, 3609,  245, 2621,  245, 3609,  245,  245,  245, 2619,
      245,  245, 3609, 3609,  245,  245, 3609,  245,  245,  245,
      245,  245,  245,  245,  245, 3609,  245,  245,  245, 2622,
      245, 2626, 2624,  245,  245,  245, 2623,  245,  245,  245,
      245, 2625,  245,  245,  245,  245, 2629,  245, 2627,  245,
      245, 2628, 3609, 3609,  245,  245,  245,  245,  245,  245,

      245,  245, 2631,  245, 3609,  245,  245, 3609,  245, 3609,
      245,  245, 2630,  245,  245,  245, 2632,  245, 3609, 2633,
      245,  245, 3609,  245,  245,  245, 2634,  245,  245,  245,
      245, 2635,  245, 2636,  245,  245, 3609,  245, 2637,  245,
     3609,  245, 2640, 2638,  245,  245,  245,  245, 2639,  245,
      245,  245,  245, 3609,  245, 2641,  245,  245,  245,  245,
      245, 3609,  245,  245,  245, 3609,  245, 3609, 2643,  245,
     2642,  245, 3609,  245,  245,  245,  245,  245,  245, 2644,
      245, 2645,  245,  245,  245,  245,  245, 3609,  245, 3609,
      245,  245, 3609,  245, 3609,  245, 2647,  245, 2646,  245,

      245, 2649,  245, 3609, 2648,  245,  245,  245, 3609, 3609,
     2650, 3609,  245, 3609,  245,  245,  245, 2652,  245, 2651,
      245, 3609,  245, 3609, 2653, 2654,  245,  245,  245,  245,
      245,  245,  245,  245,  245, 2656, 3609, 2655, 3609,  245,
     3609,  245,  245,  245,  245, 3609,  245,  245, 3609, 3609,
      245,  245, 3609,  245,  245,  245, 2657, 2660, 2659,  245,
      245,  245,  245,  245,  245,  245, 2658,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 3609,  245, 2661,
      245, 3609,  245,  245,  245,  245, 3609,  245, 3609, 3609,
     3609,  245,  245, 2662,  245,  245, 2663, 3609, 3609,  245,

      245,  245, 2664,  245,  245, 3609,  245, 3609,  245, 2665,
     3609,  245,  245,  245, 3609, 3609, 3609,  245, 2666, 2667,
      245,  245,  245,  245,  245,  245,  245,  245,  245, 2668,
     3609,  245, 2672,  245,  245,  245, 2673, 2671, 3609,  245,
      245,  245,  245,  245,  245,  245, 3609,  245, 2675,  245,
      245,  245, 3609,  245,  245, 2674, 2676,  245, 3609,  245,
     3609,  245,  245, 2677,  245,  245,  245,  245, 3609,  245,
      245, 2678,  245,  245,  245,  245,  245,  245,  245, 3609,
     2680, 2679,  245, 3609,  245,  245, 2682,  245, 2681,  245,
      245,  245, 3609,  245,  245, 3609,  245,  245,  245, 3609,

     3609,  245,  245,  245,  245, 2683,  245,  245, 2685,  245,
     2684,  245,  245,  245, 2687, 3609,  245,  245,  245, 3609,
      245, 2689,  245,  245, 3609,  245, 3609, 3609, 3609,  245,
     2686, 3609,  245,  245,  245,  245,  245,  245, 2688, 3609,
      245, 2690,  245, 3609,  245,  245,  245,  245,  245, 2695,
     2692, 3609, 3609,  245, 3609, 3609,  245,  245,  245, 2691,
      245,  245,  245,  245, 3609,  245,  245,  245, 2697,  245,
      245, 2699,  245,  245, 3609, 2696, 3609, 3609,  245, 3609,
      245, 3609, 3609,  245,  245,  245,  245, 2700,  245,  245,
     2702,  245, 2701,  245,  245,  245,  245, 3609, 2703, 2704,

     3609, 3609,  245,  245,  245,  245,  245,  245, 3609,  245,
     2708, 2705,  245,  245,  245,  245,  245, 2706, 2707,  245,
      245,  245,  245, 3609,  245,  245,  245,  245, 3609,  245,
      245,  245, 2709, 2710,  245,  245, 3609, 3609,  245,  245,
      245, 3609,  245,  245, 3609,  245, 3609,  245, 3609,  245,
     3609,  245,  245, 2711,  245,  245, 3609, 2712, 3609, 3609,
     2713,  245,  245, 3609,  245, 2714,  245,  245,  245,  245,
      245,  245,  245,  245, 3609, 2715,  245, 3609, 3609,  245,
      245,  245, 3609, 3609,  245, 3609,  245, 3609, 2718,  245,
      245, 2716,  245, 2719,  245,  245,  245,  245,  245,  245,

      245,  245, 2722, 2720, 2723,  245,  245, 3609,  245,  245,
     3609, 3609, 3609,  245, 3609, 2721,  245,  245,  245,  245,
      245,  245,  245,  245, 2725, 2726,  245,  245,  245, 3609,
      245, 2727,  245, 3609,  245,  245,  245,  245, 3609,  245,
      245,  245, 3609, 2746,  245,  245,  245,  245, 2745,  245,
     3609,  245,  245, 2747, 3609,  245, 3609,  245,  245,  245,
     2748,  245, 2753,  245, 2749,  245,  245,  245,  245,  245,
      245, 2750,  245,  245,  245, 3609,  245, 2751,  245, 2752,
      245,  245,  245,  245,  245, 3609,  245, 3609,  245,  245,
      245,  245,  245,  245, 3609,  245, 2765,  245, 2754,  245,

      245,  245,  245,  245, 2756,  245, 3609,  245,  245,  245,
     3609,  245,  245,  245, 2755,  245,  245,  245, 3609, 3609,
     2758,  245, 2757, 3609,  245,  245,  245, 2759,  245, 2760,
      245, 3609,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  245, 3609,  245,  245,  245,
     3609, 2761, 3609,  245,  245, 2762, 2766,  245, 2763,  245,
      245, 3609, 2768, 2764, 3609,  245, 3609, 3609, 3609, 3609,
      245,  245,  245,  245,  245,  245,  245, 2767,  245,  245,
      245,  245,  245, 2769, 3609,  245,  245,  245, 2770,  245,
      245, 3609, 3609,  245,  245, 3609, 3609,  245,  245,  245,

      245,  245,  245,  245,  245,  245,  245,  245, 2774, 2772,
     3609,  245,  245, 2771,  245,  245, 3609, 3609, 3609,  245,
     2777,  245, 2773, 3609, 3609, 2775,  245,  245,  245,  245,
      245,  245, 2776,  245,  245,  245,  245,  245, 2778, 3609,
      245, 2780,  245, 3609,  245,  245, 3609, 2779, 3609,  245,
     3609, 3609,  245, 2781,  245,  245,  245,  245,  245, 3609,
      245, 2782,  245, 3609,  245,  245,  245,  245, 3609,  245,
     3609, 3609, 3609,  245,  245, 3609,  245,  245,  245, 2783,
     2785,  245,  245, 2784, 3609,  245,  245, 3609, 2786,  245,
      245, 3609, 3609,  245,  245,  245,  245,  245, 2788, 3609,

     3609,  245, 2789, 3609, 3609,  245, 3609,  245,  245,  245,
     3609, 2790,  245, 2791, 3609, 3609,  245, 3609, 3609,  245,
      245, 3609, 3609, 2792,  245,  245,  245, 3609, 2793, 3609,
      245,  245,  245, 2794, 2795, 3609,  245,  245,  245, 3609,
      245, 3609,  245,  245,  245,  245,  245, 2796,  245,  245,
      245, 2797,  245,  245,  245,  245, 3609, 2798, 3609,  245,
      245,  245,  245,  245,  245,  245,  245,  245, 3609,  245,
     3609,  245,  245,  245, 2799,  245, 3609,  245, 3609, 2800,
      245,  245, 3609,  245, 3609,  245,  245,  245,  245, 2801,
      245, 2803, 2802,  245,  245,  245, 2805,  245,  245,  245,

      245,  245, 2804,  245,  245,  245, 3609,  245,  245, 3609,
     3609, 3609,  245, 3609, 2719,  245, 3609,  245,  245,  245,
     2806, 2808,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  245, 3609,  245, 3609,  245, 2807,  245,
      245, 3609,  245,  245, 2809, 2810,  245,  245,  245,  245,
      245,  245, 2811,  245,  245,  245,  245, 2812, 3609,  245,
     3609,  245, 3609, 3609,  245,  245,  245,  245, 3609,  245,
      245,  245, 2813, 2814,  245, 2815, 3609,  245,  245,  245,
      245,  245, 2816,  245, 2817, 3609, 3609,  245, 3609,  245,
     3609,  245,  245,  245,  245, 2818,  245,  245, 3609,  245,

      245, 2820, 2819,  245,  245,  245, 3609,  245, 2821,  245,
     3609,  245,  245, 2823,  245,  245,  245, 2822,  245,  245,
      245,  245,  245,  245, 3609,  245, 3609,  245, 3609,  245,
      245,  245,  245,  245,  245,  245, 2824,  245,  245,  245,
      245, 3609,  245,  245,  245, 3609,  245,  245,  245,  245,
      245,  245, 2825, 2828,  245,  245, 3609, 3609,  245, 2829,
     2827, 2826,  245,  245,  245,  245,  245,  245,  245, 3609,
      245,  245,  245, 3609, 3609,  245,  245,  245, 3609,  245,
      245,  245, 2831, 2830, 3609, 3609,  245,  245, 3609,  245,
      245, 3609,  245, 3609,  245, 3609, 2832, 3609,  245, 2833,

      245,  245,  245,  245, 2834,  245,  245, 3609,  245, 3609,
     3609, 3609,  245,  245,  245, 3609, 3609, 2837, 3609,  245,
     3609,  245,  245, 3609,  245,  245,  245,  245,  245, 2839,
     2838, 2841, 2842,  245,  245,  245,  245, 2843,  245,  245,
      245,  245,  245,  245, 3609, 3609, 3609, 3609,  245,  245,
      245,  245,  245,  245,  245, 2844,  245, 3609, 2845,  245,
     2846,  245,  245,  245,  245,  245,  245, 3609, 2847, 3609,
     2849,  245,  245,  245, 3609,  245,  245, 2848,  245, 3609,
      245, 3609, 2850,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245, 3609,  245,  245,  245, 2852,  245,  245,

      245,  245, 2855, 2853,  245, 3609, 2851,  245,  245,  245,
     3609,  245,  245,  245,  245,  245, 2856, 3609, 2857,  245,
     3609, 3609, 3609, 3609,  245, 2854,  245, 3609,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 3609, 2858, 3609,
     3609, 3609,  245,  245, 3609, 3609,  245,  245,  245,  245,
      245,  245, 2859,  245,  245,  245,  245, 2860, 2861, 2862,
      245, 2863, 3609, 3609, 3609,  245, 3609, 3609,  245, 3609,
      245,  245,  245,  245,  245,  245,  245, 2864,  245, 2878,
      245,  245,  245,  245, 3609, 2879, 3609,  245,  245, 3609,
     3609, 3609, 2880,  245,  245,  245, 3609,  245,  245,  245,

      245,  245,  245,  245, 3609, 2881,  245,  245, 3609,  245,
     3609, 2882,  245,  245, 3609,  243,  243,  245,  245,  245,
     3609,  245, 3609,  245,  245,  245,  245,  245,  245,  245,
      245,  245, 2885, 2883, 2886, 3609,  245, 3609,  245, 3609,
      245,  245,  245, 2884,  245,  245, 3609,  245, 3609, 3209,
      245, 3609,  245,  245,  245,  245, 3609,  245,  245, 2887,
      245,  245,  245,  245, 3609, 2888,  245, 2889,  245,  245,
      245,  245, 2892, 3609,  245, 3609,  245, 3609, 3609,  245,
     3609,  245, 2890,  245,  245, 2891,  245,  245, 3609,  245,
     2893,  245, 3609, 3609, 3609,  245, 3609, 3609, 3609, 3609,

      245,  245,  245, 2895, 2894,  245,  245,  245,  245,  245,
      245,  245, 3609,  245, 3609,  245,  245,  245, 2899, 3609,
     3609, 3609,  245, 2896, 3609,  245,  245,  245,  245, 2897,
      245, 2898,  245,  245,  245,  245,  245, 2900, 3609, 3609,
     3609,  245,  245, 3609, 3609, 2901,  245,  245,  245,  245,
      245,  245,  245,  245, 3609,  245,  245,  245, 2903,  245,
      245,  245, 3609,  245, 2904,  245, 3609,  245, 3609,  245,
     2902,  245, 2905,  245,  245, 2906,  245,  245, 3609,  245,
      245,  245,  245,  245, 3609, 3609,  245, 3609, 3609,  245,
      245, 2907,  245,  245, 2908,  245,  245,  245,  245,  245,

     2909, 2910,  245, 2912, 3609,  245,  245,  245, 2911, 2926,
      245, 3609, 3609, 2913, 2914,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  245, 3609,  245,  245,  245,
     2915, 3609,  245, 2916, 3609, 3609,  245,  245, 3609,  245,
      245, 3609, 3609, 3609,  245, 3609, 2917, 2918,  245, 2919,
      245,  245,  245, 2921, 3609,  245,  245,  245, 3609,  245,
     2922,  245,  245, 3609,  245, 2920, 3609, 3609,  245,  245,
     3609,  245,  245,  245,  245, 3609, 2923,  245, 2924,  245,
     3609,  245, 3609,  245, 3609, 2925,  245,  245,  245,  245,
     3609,  245, 3609, 3609, 2928,  245, 3609,  245,  245,  245,

      245,  245,  245,  245,  245, 2927,  245, 2929,  245,  245,
      245,  245, 2930,  245,  245,  245,  245,  245,  245, 2934,
      245,  245,  245,  245,  245,  245,  245,  245,  245, 3609,
      245, 3609, 2931, 3609, 2932,  245, 2933,  245,  245, 3609,
      245, 3609,  245, 2936,  245, 3609,  245, 2941,  245, 3609,
      245,  245, 2948, 2937, 2943, 2938,  245,  245, 2935, 2939,
     2940,  245,  245,  245, 3609,  245,  245, 2942,  245, 3609,
      245, 3609,  245,  245,  245, 3609, 3609,  245, 3609,  245,
      245,  245, 3609, 2944,  245,  245,  245,  245,  245,  245,
      245,  245, 3609, 2945,  245,  245, 2947, 3609,  245, 2949,

      245,  245,  245,  245,  245, 2946, 2950,  245,  245,  245,
      245,  245,  245,  245,  245,  245, 3609,  245,  245,  245,
     3609, 2951,  245, 2952,  245, 3609,  245, 3609,  245, 3609,
      245,  245,  245,  245,  245, 3609, 2956, 3609, 2958, 2953,
     2954, 2955,  245,  245, 3609,  245,  245,  245, 3609,  245,
     2957,  245,  245,  245, 3609, 2959,  245,  245,  245,  245,
     2960,  245, 3609, 3609, 3609, 3609,  245,  245, 3609,  245,
      245, 3609,  245, 3609,  245, 3609, 2961,  245, 2962,  245,
      245,  245,  245,  245,  245, 3609,  245, 3609, 2963, 3609,
     3609,  245,  245, 3609,  245, 3609,  245,  245,  245,  245,

     2965, 2964,  245,  245,  245,  245,  245,  245, 2969, 2968,
     2970,  245,  245,  245,  245,  245,  245,  245,  245,  245,
     3609,  245,  245, 2972, 3609, 2973,  245, 3609,  245,  245,
      245,  245,  245,  245, 2975,  245, 3609, 2974,  245,  245,
     3609, 3609, 3609,  245, 3609,  245, 3609, 2976,  245,  245,
      245,  245,  245,  245,  245,  245, 2980, 2978, 2977,  245,
      245, 3609,  245, 3609,  245, 2979,  245,  245,  245,  245,
      245,  245,  245, 3609,  245,  245,  245, 3609, 3609,  245,
      245, 2981, 3609, 3609,  245, 3609,  245, 2982,  245,  245,
      245, 3609,  245, 2983,  245,  245,  245,  245,  245, 2985,

     3609, 3609, 3609,  245, 3609, 3609,  245, 2986,  245, 2984,
      245,  245,  245, 3609, 2987,  245, 2988, 3609,  245,  245,
      245,  245, 3609,  245,  245,  245, 3609, 3609,  245, 2989,
      245, 3609, 3609,  245, 3609,  245,  245,  245,  245, 2990,
     2991,  245,  245,  245, 3609, 2992, 2993,  245, 3609,  245,
      245,  245, 3009, 3609, 3010,  245, 3609, 3609,  245,  245,
      245,  245,  245,  245, 2994,  245,  245,  245,  245, 3609,
      245, 3012,  245, 3011,  245,  245, 3013,  245,  245,  245,
      245,  245,  245,  245,  245,  245, 3609,  245, 3609,  245,
     3609,  245,  245, 3609,  245,  245,  245, 3609, 3609,  245,

      245,  245, 3014,  245,  245,  245, 3609,  245,  245,  245,
     3609, 3017, 3016,  245,  245,  245,  245,  245, 3609,  245,
      245, 3609, 3609,  245,  245, 3609,  245,  245,  245,  245,
     3609,  245,  245,  245, 3609,  245,  245,  245,  245, 3018,
      245,  245, 3609,  245,  245,  245, 3609, 3609,  245, 3020,
      245,  245,  245,  245, 3029,  245,  245,  245,  245, 3021,
     3609,  245,  245,  245, 3019,  245,  245,  245,  245,  245,
      245, 3609,  245,  245,  245, 3609,  245,  245, 3609,  245,
     3609,  245, 3609, 3609,  245,  245,  245, 3609, 3022, 3024,
     3026, 3025, 3027,  245,  245,  245, 3023,  245,  245,  245,

      245,  245, 3609, 3609, 3609,  245, 3609,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 3030,  245,  245,
     3028, 3609, 3031, 3609,  245, 3609,  245,  245, 3609,  245,
      245, 3032, 3609,  245, 3033,  245,  245,  245,  245,  245,
     3609,  245,  245,  245, 3034,  245,  245,  245,  245,  245,
      245, 3035,  245,  245,  245,  245,  245, 3036,  245, 3609,
     3038, 3609, 3609, 3609,  245,  245, 3609,  245,  245,  245,
     3037, 3609,  245,  245,  245, 3609,  245,  245,  245, 3609,
      245, 3609,  245, 3609,  243,  243,  245,  245, 3609, 3039,
      245, 3609, 3609, 3040,  245, 3609, 3041,  245,  245, 3042,

     3043,  245,  245,  245, 3609,  245, 3044, 3045, 3046,  245,
      245,  245,  245,  245,  245,  245, 3609,  245,  245, 3609,
     3214,  245,  245,  245, 3047, 3048,  245,  245,  245,  245,
      245,  245,  245,  245,  245, 3049,  245,  245,  245,  245,
      245, 3609,  245, 3609,  245, 3609,  245,  245, 3052,  245,
     3050, 3609, 3609,  245, 3609, 3609,  245, 3051,  245,  245,
     3609,  245, 3609,  245,  245, 3053,  245, 3054,  245,  245,
      245,  245, 3056,  245, 3609, 3609,  245, 3609, 3058, 3609,
      245,  245,  245,  245, 3609, 3055,  245,  245,  245, 3060,
      245, 3059, 3057,  245,  245,  245,  245,  245, 3063,  245,

     3609,  245,  245, 3061, 3609,  245,  245,  245, 3609, 3065,
      245, 3066,  245,  245,  245,  245, 3609,  245, 3064,  245,
      245, 3609, 3067, 3609,  245, 3609,  245,  245,  245,  245,
      245, 3069, 3068,  245,  245,  245,  245,  245, 3609, 3609,
      245, 3609,  245, 3070, 3609,  245,  245,  245,  245,  245,
      245, 3072,  245,  245, 3071,  245,  245,  245, 3609,  245,
     3609, 3609,  245, 3609, 3609, 3073, 3609,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245,  245, 3075,  245,
      245,  245,  245,  245,  245, 3609,  245, 3074,  245,  245,
      245,  245,  243,  243,  243,  243,  245, 3609,  245, 3076,

     3078,  245,  245,  245,  245, 3077, 3079,  245,  245,  245,
      245,  245, 3609, 3081, 3609,  245, 3609,  245,  245, 3609,
      245, 3087, 3609, 3088,  245,  245, 3609,  245, 3080,  245,
      245,  245,  245,  245, 3609,  245, 3609,  245, 3609, 3089,
      245,  245,  245,  245, 3090,  245, 3609, 3092, 3609, 3091,
      245,  245, 3609, 3093,  245, 3609,  245, 3609,  245,  245,
      245,  245, 3094, 3095,  245, 3096,  245, 3099,  245, 3609,
     3097,  245, 3609, 3609,  245,  245, 3609,  245,  245,  245,
      245, 3098,  245, 3101,  245,  245,  245,  245,  245, 3609,
     3100,  245,  245, 3103,  245, 3609, 3609, 3609, 3102,  245,

      245,  245,  245, 3609,  245,  245,  245,  245,  245, 3105,
      245, 3104,  245,  245,  245,  245, 3609,  245, 3609,  245,
     3609,  245, 3609, 3107,  245, 3108,  245,  245,  245, 3109,
     3110, 3111, 3106,  245, 3609,  245, 3609,  245,  245, 3609,
      245, 3115,  245, 3609, 3609,  245,  245, 3112,  245, 3609,
      245, 3609,  245, 3126,  245,  245,  245,  245,  245, 3113,
      245,  245, 3114, 3609,  245,  245,  245, 3609,  245,  245,
     3127,  245,  245,  245,  245, 3609,  245,  245, 3129, 3609,
      245,  245,  245,  245,  245,  245,  245, 3128,  245,  245,
     3609, 3609,  245,  245, 3609,  245, 3130,  245, 3131, 3609,

     3609,  245, 3133, 3609, 3609,  245, 3609,  245, 3132,  245,
      245, 3134,  245, 3609,  245, 3609,  245, 3609,  245,  245,
      245,  245, 3609, 3609, 3609,  245, 3609, 3609,  245, 3137,
      245, 3135,  245,  245, 3136, 3609,  245, 3138,  245, 3609,
      245,  245,  245,  245,  245,  245,  245, 3609,  245, 3139,
     3609, 3609, 3609,  245, 3140,  245,  245,  245,  245,  245,
     3609,  245, 3609,  245, 3141,  245,  245,  245,  245, 3609,
      245,  245, 3144, 3142,  245,  245,  245,  245,  245,  245,
     3143,  245,  245,  245, 3148, 3609,  245, 3145,  245, 3609,
      245, 3147, 3146,  245,  245,  245,  245,  245,  245, 3149,

      245, 3609,  245, 3609,  245,  245,  245,  245, 3609,  245,
      245,  245, 3609,  245,  245,  245,  245, 3609, 3609,  245,
      245, 3151, 3609,  245,  245,  245, 3152, 3609,  245,  245,
     3150, 3153,  245,  245,  245,  245, 3154,  245,  245,  245,
      245, 3156,  245,  245, 3155,  245, 3609,  245,  245, 3609,
      245, 3609,  245, 3609,  245,  245, 3158,  245, 3157, 3159,
      245,  245, 3609,  245,  245,  245,  245,  245, 3609,  245,
     3609, 3160, 3609,  245,  245, 3609, 3162,  245, 3161,  245,
     3166,  245, 3163,  245,  245,  245, 3164, 3609,  245,  245,
     3609, 3165, 3609, 3167,  245, 3609,  245, 3168,  245, 3609,

     3169,  245, 3609,  245,  245,  245,  245, 3609,  245, 3172,
      245, 3170,  245,  245,  245,  245,  245,  245,  245, 3609,
      245,  245,  245, 3609,  245,  245, 3171,  245,  245, 3173,
      245, 3609,  245, 3174,  245,  245,  245,  245,  245,  245,
      245, 3609, 3178,  245,  245, 3176, 3175,  245,  245, 2311,
     3609,  245,  245,  245, 3177,  245, 3180,  245,  245, 3609,
      245,  245, 3609, 3609,  245,  245,  245,  245, 3179, 2313,
      245,  245, 3609,  245,  245,  245,  245, 3609,  245,  245,
     3182,  245, 3609,  245,  245, 3609,  245, 3184,  245, 3181,
     3183,  245,  245, 3113,  245,  245,  245, 3609,  245,  245,

      245,  245,  245, 3185,  245, 3609,  245,  245,  245, 3609,
     3609,  245, 3609,  245, 3609,  245,  245, 3609,  245, 3186,
      245, 3609, 3609, 3609, 3188,  245, 3187,  245,  245, 3190,
     3189,  245, 3191,  245, 3609,  245,  245,  245,  245, 3609,
      245, 3609, 3609, 3609,  245,  245, 3609,  245,  245,  245,
      245,  245,  245,  245, 3609, 3193, 3192,  245, 3609,  245,
      245,  245,  245, 3609, 3609, 3609, 3609,  245, 3609,  245,
     3609,  245,  245,  245,  245, 3194,  245,  245,  245,  245,
      245, 3197,  245,  245,  245,  245,  245,  245,  245, 3609,
     3609,  245, 3609, 3609, 3609,  245,  245,  245,  245,  245,

     3198, 3199,  245,  245,  245,  245, 3201, 3200,  245, 3202,
      243,  243,  243,  243,  245, 3609,  245,  245,  245,  245,
     3203,  245,  245,  245,  245,  245, 3204,  245, 3609, 3205,
      245,  243,  243,  243,  243,  245, 3210,  245, 3609, 3215,
      245, 3609, 3609,  245, 3609, 3609, 3211, 3609,  245,  245,
      245,  245, 3212,  245,  245,  245,  245,  245, 3225, 3216,
     3217,  245, 3234,  245,  245,  245,  245, 3213,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 3218,  245,  245,
      245,  245,  245,  245,  245, 3224, 3609,  245, 3609,  245,
     3609,  245,  245, 3609,  245, 3235, 3222,  245, 3609,  245,

     3223,  245,  245,  245,  245, 3236,  245,  245,  245,  245,
      245,  245,  245, 3609,  245, 3609,  245, 3609,  245,  245,
     3609,  245, 3609,  245, 3609, 3609,  245, 3238,  245, 3237,
      245,  245,  245, 3609,  245,  245,  245, 3609,  245,  245,
      245,  245, 3609,  245, 3609, 3609, 3609, 3609,  245, 3609,
      245, 3239,  245,  245, 3240,  245, 3241, 3609, 3609,  245,
      245,  245, 3609,  245,  245, 3609,  243,  243, 3609,  245,
      245, 3609, 3243, 3242,  245,  245,  245, 3244, 3245,  245,
      245,  245,  245, 3609,  245, 3609,  245, 3609,  243,  243,
      243,  243,  245, 3609, 3246, 3247,  245,  245, 3609,  245,

     3249,  245, 3250, 3609,  245,  245,  243,  243,  243,  243,
      243,  243,  243,  243,  243,  243, 3609, 3252, 3609, 3609,
     3251,  243,  243, 3257, 3254, 3609,  245,  245,  245,  245,
     3253, 3609, 3255, 3609,  245, 3609,  245, 3609,  245, 3609,
      243,  243, 3609,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245, 3256,  245,  245, 3258,  245,
      245, 3609,  245,  245, 3609, 3609, 3609,  245,  245,  245,
      245,  245,  245,  245, 3260,  245, 3609, 3259,  245, 3263,
      245, 3261,  245,  245,  245,  245, 3262,  245, 3609, 3265,
     3609,  245, 3609,  245, 3609,  245,  245, 3266,  245,  245,

     3264,  245,  245, 3267,  245, 3609,  245,  245, 3609, 3609,
      245, 3270,  245,  245, 3609, 3269, 3268,  245,  245,  245,
      245,  245, 3609,  245,  245,  245, 3609,  245, 3609,  245,
     3609,  245,  245,  245,  245,  245,  245,  245, 3272, 3273,
     3274, 3271,  245, 3609, 3609, 3609, 3276, 3609, 3609, 3609,
      245,  245, 3275,  245,  245,  245, 3279,  245,  245, 3609,
      245,  245,  245, 3609, 3609,  245,  245,  245, 3278,  245,
      245,  245,  245, 3277,  245,  245, 3609,  245,  245,  245,
     3609,  245,  245,  245, 3280,  245,  245,  245, 3609,  245,
     3289,  245,  245,  245,  245,  245,  245,  245, 3281, 3609,

     3609,  245, 3282, 3609, 3609,  245,  245,  245, 3283,  245,
      245, 3286, 3609,  245,  245,  245, 3285,  245, 3609,  245,
     3609, 3287,  245, 3284,  245,  245, 3290, 3288,  245,  245,
      245, 3609,  245,  245, 3609,  245,  245, 3291, 3609,  245,
      245,  245, 3292,  245,  245,  245,  245,  245, 3293, 3609,
     3609,  245,  245,  245,  245, 3609,  245,  245,  245,  245,
     3294, 3609,  245, 3295,  245,  245,  245,  245,  245,  245,
      245,  245,  245, 3609, 3296,  245,  245,  245, 3609, 3299,
     3609, 3300,  245,  245,  245,  245, 3297,  245,  245,  245,
     3609,  245,  245,  245,  245,  245, 3302, 3301,  245,  245,

      245, 3609,  245, 3303, 3609,  245,  245,  245, 3609, 3609,
     3609,  245,  245,  245, 3609, 3304,  245,  245,  245, 3305,
      245,  245,  245,  245,  245,  245, 3308,  245, 3309,  245,
      245, 3609,  245,  245, 3609, 3609, 3609,  245, 3609,  245,
      245,  245,  245, 3312,  245, 3310,  245,  245, 3311,  245,
      245,  245,  245, 3609, 3313, 3609,  245, 3609,  245,  245,
     3314,  245,  245,  245, 3609, 3609, 3609, 3316,  245, 3609,
      245,  245,  245,  245, 3609,  245, 3317, 3315,  245, 3318,
      245,  245,  245,  245, 3320, 3609,  245, 3319, 3609,  245,
      245,  245,  245, 3609, 3609,  245,  245,  245, 3609,  245,

      245,  245,  245,  245, 3321, 3328,  245,  245, 3329,  245,
     3609, 3330, 3609, 3609,  245,  245, 3609,  245, 3609,  245,
      245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
      245,  245,  245, 3333,  245, 3332,  245,  245, 3331,  245,
      245,  245,  245,  245,  245,  245,  245, 3341,  245,  245,
      245,  245, 3609, 3609, 3609,  245, 3609, 3609,  245,  245,
      245, 3334, 3335,  245,  245, 3609, 3609,  245,  245, 3609,
     3609,  245,  245,  245, 3337,  245,  245, 3609, 3336,  245,
      245, 3609,  245,  245,  245,  245, 3609,  245,  245, 3609,
     3338, 3609,  245, 3609,  245, 3339,  245,  245,  245,  245,

     3371, 3372, 3343,  245, 3340,  245,  245,  245, 3344,  245,
     3342,  245, 3609,  245, 3609, 3609,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 3609,  245,  245,
     3345, 3346,  245,  245, 3609, 3609, 3347,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 3609, 3348,  245,
      245, 3609,  245,  245,  245,  245, 3349,  245, 3609,  245,
     3350,  245,  245, 3609,  245,  245, 3609,  245, 3609,  245,
      245, 3609, 3351, 3609,  245,  245, 3352, 3609, 3353,  245,
     3609, 3609, 3609,  245,  245, 3609,  245, 3609,  245,  245,
      245,  245, 3354,  245,  245, 3355,  245,  245,  245,  245,

      245,  245,  245,  245,  245,  245,  245, 3359, 3356, 3357,
     3358,  245, 3609, 3609, 3609, 3609, 3609, 3609,  245,  245,
      245,  245,  245,  245,  245,  245, 3360, 3361,  245,  245,
      245, 3609,  245,  245, 3363,  245,  245,  245,  245, 3362,
      245, 3364,  245,  245, 3609,  245,  245, 3609,  245,  245,
      245, 3609,  245,  245, 3609,  245,  245,  245,  245, 3609,
      245,  245, 3366, 3365,  245, 3367,  245,  245,  245,  245,
      245, 3609,  245,  245, 3609, 3609,  245,  245, 3609,  245,
     3368,  245,  245, 3609,  245,  245, 3609, 3609,  245,  245,
     3609,  245,  245,  245, 3369, 3609,  245, 3609, 3609, 3609,

      245,  245,  245,  245,  245,  245, 3609,  245,  245,  245,
      245, 3609, 3373, 3609,  245, 3370,  245,  245,  245,  245,
      245,  245, 3374,  245,  245, 3375,  245,  245,  245, 3609,
      245, 3377,  245,  245,  245,  245, 3609,  245,  245, 3376,
      245, 3609,  245, 3609,  245,  245,  245,  245,  245, 3378,
      245,  245,  245,  245,  245, 3609, 3609, 3382, 3379, 3609,
     3609,  245,  245,  245,  245,  245, 3380, 3381,  245,  245,
      245,  245, 3383,  245,  245,  245, 3609,  245,  245,  245,
     3609,  245,  245, 3384, 3609,  245,  245,  245,  245,  245,
      245, 3609, 3609,  245, 3385, 3609, 3609,  245,  245,  245,

      245,  245,  245, 3386, 3609,  245,  245,  245, 3609,  245,
     3609,  245,  245,  243,  243,  245,  245,  245, 3389, 3609,
     3387,  245,  245,  245,  245,  245,  245, 3388,  245,  245,
      245, 3609,  245, 3609,  245, 3609, 3609,  245, 3609,  245,
      245, 3390,  245, 3609,  245,  245,  245,  245,  245,  245,
     3391, 3461,  245, 3609,  245,  245, 3609, 3609, 3609,  245,
     3609,  245, 3609, 3392,  245,  245,  245,  245,  245,  245,
      245,  245, 3393, 3394, 3400,  245,  245,  245,  245, 3609,
      245, 3609, 3401,  245,  245,  245,  245, 3402,  245,  245,
      245,  245, 3403, 3609,  245,  245,  245, 3609, 3405, 3406,

      245,  245,  245,  245,  245,  245, 3404,  245,  245, 3609,
     3609, 3609,  245, 3609,  245, 3609,  245,  245, 3408,  245,
      245,  245,  245, 3407, 3609, 3609,  245,  245,  245, 3609,
     3609,  245, 3609,  245, 3609, 3409,  245, 3609,  245,  245,
      245,  245,  245,  245,  245, 3413, 3410,  245, 3411, 3414,
     3412,  245,  245,  245, 3609,  245,  245,  245,  245,  245,
      245, 3416,  245, 3609,  245,  245, 3609,  245, 3609, 3609,
     3415,  245,  245, 3609,  245,  245,  245,  245, 3609,  245,
     3419, 3417,  245,  245,  245, 3609,  245, 3418, 3420,  245,
     3609,  245, 3609, 3609,  245, 3609,  245, 3609,  245,  245,

      245,  245, 3609,  245, 3421, 3422,  245,  245,  245,  245,
      245,  245, 3609,  245,  245,  245, 3609,  245,  245, 3609,
     3424, 3609,  245, 3609,  245,  245, 3423,  245,  245,  245,
      245, 3609, 3425, 3426, 3609,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245, 3427,  245,  245,
      245,  245,  245,  245,  245, 3428,  245, 3609,  245,  245,
      245,  245, 3430,  245,  245, 3609,  245,  245,  245,  245,
     3609,  245, 3609, 3609, 3609, 3429,  245,  245,  245, 3609,
     3431,  245, 3432,  245,  245,  245, 3609,  245,  245, 3434,
      245,  245,  245, 3609,  245,  245, 3433, 3609,  245,  245,

     3609,  245,  245,  245, 3609,  245, 3438,  245,  245, 3435,
      245,  245,  245,  245,  245,  245,  245,  245, 3609,  245,
      245, 3609, 3609,  245,  245, 3609, 3439,  245,  245,  245,
      245,  245, 3440,  245, 3609,  245,  245,  245, 3609,  245,
     3609, 3441, 3442,  245, 3609,  245,  245,  245,  245,  245,
     3609,  245, 3609, 3609,  245, 3609, 3609,  245, 3609,  245,
      245,  245,  245, 3443, 3444,  245,  245,  245,  245,  245,
     3445, 3446,  245,  245,  245,  245,  245,  245, 3609,  245,
     3609,  245, 3609,  245,  245, 3609,  245, 3447,  245,  245,
     3609,  245,  245,  245, 3448,  245,  245,  245, 3609, 3450,

      245,  245,  245,  245, 3449, 3451,  245,  245,  245, 3609,
     3609, 3609,  245,  245, 3609,  245,  245, 3453,  245, 3609,
      245,  245, 3452, 3462,  245,  245,  245, 3454,  245, 3460,
      245, 3609,  245,  245,  245,  245,  245,  245,  245,  245,
      245, 3463,  245,  245, 3464,  245, 3465,  245, 3609,  245,
      245,  245,  245,  245,  245,  245,  245,  245, 3609,  245,
      245,  245,  245,  245,  245, 3609,  245,  245, 3609,  245,
     3609,  245, 3609, 3609,  245, 3609,  245, 3466,  245,  245,
      245,  245,  245, 3469,  245, 3609, 3468,  245,  245, 3609,
      245,  245,  245,  245, 3609, 3609, 3609, 3471, 3467,  245,

      245,  245, 3474,  245,  245, 3470,  245,  245,  245,  245,
      245, 3472,  245,  245,  245,  245, 3475,  245, 3609, 3609,
      245, 3473,  245, 3609,  245, 3609, 3476,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245,  245, 3609,  245,
     3609,  245, 3609,  245,  245, 3609,  245, 3477,  245, 3478,
      245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
     3609,  245, 3609,  245, 3609,  245,  245, 3609,  245, 3609,
     3609, 3609,  245,  245, 3479, 3480,  245,  245,  245,  245,
      245, 3481,  245, 3482, 3609,  245,  245,  245, 3609, 3609,
      245, 3609, 3609, 3609,  245,  245,  245,  245,  245, 3484,

      245, 3609,  245,  245, 3609,  245, 3483,  245, 3485, 3609,
      245,  245,  245,  245, 3609,  245,  245,  245, 3486,  245,
      245,  245,  245,  245, 3609, 3487, 3609,  245, 3490, 3609,
      245, 3488,  245,  245,  245,  245, 3609,  245,  245, 3489,
      245,  245,  245,  245,  245, 3491,  245,  245,  245,  245,
      245, 3492, 3493, 3609,  245, 3609, 3609, 3609, 3609,  245,
     3609,  245,  245,  245,  245,  245,  245, 3494,  245,  245,
      245,  245,  245,  245,  245, 3609, 3496, 3495, 3609, 3609,
     3609,  245, 3609,  245,  245,  245,  245,  245,  245,  245,
     3497,  245,  245,  245, 3609,  245, 3498,  245, 3609, 3609,

     3609, 3609, 3609,  245, 3609,  245,  245,  245, 3499,  245,
      245, 3500,  245,  245,  245,  245,  245,  245,  245, 3609,
      245, 3609,  245, 3609,  245,  245, 3609,  245, 3609, 3609,
     3609, 3609,  245, 3506,  245, 3507,  245,  245,  245, 3609,
      245,  245,  245, 3609,  245,  245,  245, 3510, 3508,  245,
     3609, 3609, 3509, 3511,  245,  245,  245,  245,  245,  245,
      245,  245,  245, 3609, 3609,  245, 3609,  245, 3609,  245,
      245,  245, 3512, 3513,  245, 3609,  245,  245, 3609,  245,
     3514, 3609,  245, 3609,  245,  245,  245,  245,  245,  245,
      245,  245,  245,  245, 3515,  245,  245, 3517, 3518, 3516,

      245,  245, 3609,  245,  245,  245,  245,  245,  245, 3609,
      245, 3609, 3609,  245, 3609,  245,  245,  245,  245, 3609,
      245,  245, 3519,  245,  245, 3520, 3609,  245,  245,  245,
      245,  245,  245,  245, 3523,  245, 3609,  245,  245, 3521,
     3609,  245,  245, 3525,  245,  245, 3522,  245,  245,  245,
     3526,  245,  245, 3609,  245, 3609,  245, 3609,  245, 3524,
      245,  245,  245, 3527,  245,  245,  245,  245,  245,  245,
      245, 3528, 3609,  245,  245,  245, 3609, 3609,  245, 3609,
      245, 3609,  245,  245,  245,  245,  245, 3529,  245, 3609,
      245,  245,  245, 3530,  245,  245,  245,  245,  245,  245,

     3609, 3531,  245,  245, 3609,  245, 3532,  245,  245,  245,
      245,  245, 3609, 3609, 3533,  245,  245, 3609,  245, 3534,
      245,  245,  245,  245,  245, 3609,  245,  245,  245, 3535,
      245,  245, 3609, 3609,  245,  245,  245, 3609,  245,  245,
      245,  245,  245,  245, 3609, 3609,  245,  245,  245, 3541,
     3609,  245, 3609,  245,  245,  245,  245, 3542, 3609,  245,
      245,  245, 3609,  245, 3609,  245,  245,  245,  245,  245,
      245,  245, 3543,  245, 3609,  245, 3544,  245,  245,  245,
     3609, 3545, 3609, 3546, 3609, 3609, 3609,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245,  245,  245, 3609,

     3609, 3609,  245, 3609, 3609, 3609,  245,  245, 3547,  245,
      245,  245,  245,  245,  245, 3549,  245,  245,  245,  245,
      245, 3548,  245,  245,  245, 3609, 3609, 3609, 3609, 3609,
     3609,  245,  245,  245,  245, 3550,  245,  245,  245, 3609,
      245,  245,  245, 3609,  245,  245, 3553, 3552,  245,  245,
     3609, 3609, 3609,  245, 3551,  245,  245,  245,  245,  245,
      245,  245,  245, 3582,  245, 3609,  245, 3554,  245, 3555,
     3609,  245, 3588,  245, 3609, 3556,  245, 3557,  245,  245,
      245,  245,  245,  245,  245,  245, 3558,  245,  245,  245,
      245,  245, 3609,  245, 3609,  245, 3609,  245,  245, 3559,

      245,  245,  245,  245,  245, 3609,  245, 3609,  245, 3565,
      245,  245,  245,  245, 3609, 3560, 3609,  245, 3609,  245,
      245,  245,  245,  245,  245,  245,  245,  245,  245, 3609,
      245, 3566,  245, 3609,  245,  245, 3609,  245, 3567,  245,
      245,  245,  245,  245, 3568,  245,  245,  245, 3609,  245,
      245,  245, 3569,  245,  245,  245, 3609,  245, 3609,  245,
     3609,  245, 3609, 3609,  245,  245,  245, 3570,  245,  245,
      245, 3609,  245, 3571,  245, 3609,  245,  245, 3572,  245,
     3609,  245, 3609,  245,  245,  245,  245,  245,  245,  245,
     3609,  245,  245, 3575, 3573,  245,  245,  245,  243,  243,

      245,  245, 3609, 3609,  245,  245, 3574,  245,  245,  245,
     3609,  245,  245,  245, 3609,  245,  245,  245,  245,  245,
      245, 3576, 3609,  245, 3581,  245, 3609, 3609,  245,  245,
      245, 3609,  245, 3609, 3609,  245, 3583,  245, 3609,  245,
      245,  245,  245, 3584,  245, 3586,  245,  245, 3585,  245,
      245, 3587,  245, 3609,  245, 3609,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  245, 3609,  245, 3609,  245,
      245,  245,  245,  245, 3609,  245, 3609,  245,  245,  245,
     3609,  245, 3598,  245,  245,  245,  245,  245, 3609,  245,
      245,  245,  245,  245, 3609,  245, 3609,  245,  245,  245,

      245, 3591, 3599, 3592, 3609,  245,  245,  245, 3609,  245,
      245,  245,  245,  245, 3609, 3593, 3609,  245,  245, 3609,
      245, 3609, 3609,  245,  245, 3594, 3609,  245,  245,  245,
      245,  245,  245,  245, 3595,  245,  245,  245,  245,  245,
      245,  245,  245,  245,  245,  245, 3603,  245, 3609,  245,
     3609,  245, 3609, 3609, 3600, 3609,  245, 3609,  245, 3604,
      245,  245,  245,  245,  245, 3609,  245,  245,  245, 3606,
     3609,  245, 3609, 3609, 3609,  245,  245, 3609, 3607,  245,
     3609,  245, 3609,  245, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609,  245,   85,   85,   85,   85,   85,   85,

       85,   85,   85,   85,   85,   85,  101,  101,  101,  101,
      101,  101,  101,  101,  101,  101,  101,  101,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  127,  127,  127,  127,  127,  127,
      127,  127,  127,  127,  127,  127,  241,  241,  245,  245,
      245,  245, 3609,  245,  245,  331, 3609, 3609,  331,  331,
      331,  331,  331,  331,  331,  331,  331,  334,  334, 3609,
      334, 3609,  334,  334,  334,  334,  334,  334,  334,  335,

      335, 3609,  335,  335,  335,  335,  335,  335,  335,  335,
      335,  338,  338, 3609,  338,  338,  338,  338,  338,  338,
      338,  338,  338,  339,  339, 3609, 3609,  339,  339,  339,
      339,  339,  339,  339,  339,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  352,  352,  352,
      352, 3609,  352,  352,  368,  368, 3609,  368,  368,  368,
      368,  368,  368, 3609,  368,  368,  487, 3609, 3609, 3609,
      487,  489, 3609, 3609,  489,  489,  243,  243,  243,  243,
     3609,  243,  243,  350,  350,  350,  350, 3609,  350,  350,
      739,  739,  739, 3609, 3609,  739,  739,  857,  857,  857,

     3609, 3609,  857,  857,   43, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609
    } ;

static yyconst short int yy_chk[16961] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,

        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        5,   11,   11,   11,   13,   95,    6,   13,    5,    5,
       14,   95,    5,   14,    6,    6,   49,    5,    6,   49,
        7,   11,    7,    6,   50,   96,    7,   48,    7,    7,
      120,   48,    5,   51,    5,   96,  138,  120,    6,    7,
        6,    8,   21,    8,    7,    9,  138,    8, 3633,    8,
        8,    9,    9,    7,    9,    9,   12,   12,   12,  102,
        8,  102,   10,    9,   21,    8,   50,    9,   10,   10,
     1247,   10,   10,  100,    8,   51,   12,   17,   17,  102,
       10,   18,   18,   17,   10,  287,   59,   18,   59,  287,

      100, 3630,   21,  106,   21,   59,  106,   59,   17,   59,
     1247,   59,   18,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   22,   41,
      112,  200, 3629,  112,   73,   41,  116,  241,   73,  116,
       41,  288,   73,   41,   41,   42,  116,  200,   41,  288,
       22,   42,   73,  200,   55,   41,   42,   41,  117,   42,

       42,  117,  553,   55,   42,   55,   55,   55,  117,   55,
      553,   42,   55,   42,   54,  343,  343,   57,   22,  241,
       22,   23, 3605,   54,   62,   54,   54,   54,   57,   54,
       57,  178,   57,   54,  178,   62,   62,   62,   57,   62,
      178, 3601,   62,   23,   23,   23,   23,   23,   23,   23,
       23,   23,  323,  118,   23,   23,   23,   23,   23,  118,
       23,   23,   23,   23,   23,   23,  118,  323,  103,   23,
      103,   23,   25,   25,  119,  119, 3597,   25,   25,   25,
       25,   64,  119,   25,   25,   64,   25,   25,  103,   64,
       25,   25,   25,   25,  335,   64,  122,  335,   25,   64,

       25,   27,   27,   27,   27,   27,   27,   27, 3596,   27,
      122,   27,   27,   27,   27,   27,   27,  122,   27,   27,
       27,   27,   27,   27,   27,  195,   27,   27,  195,   27,
       29,   56,   60,   56,  195,  546,  336,   56,   60,  336,
     3590,   60,   56,   60,   56,   60,   56,   60,  121, 1095,
      546, 1095,  121,   29,   29,   29,   29,   29,   29,   29,
      207,   29,  121,  207,   29,   29,   29,   29,   29,  121,
       29,   29,   29,   29,   29,   29,   78,  207,  123,   29,
       78,   29,   31,   31,   78,  552,  597,  597,  123,  552,
       70,   31,   31,   31,   78,  123,   82,   31,   31,   31,

       82,   70,   61,   70,   82,   70,   31,   82,   31,   32,
       32, 3589,   61,   61,   82,   61,   65,   61,   32,   32,
       32,   61,  798,  801,   32,   32,   32,   65,   69,   65,
       69,   65,  814,   32,   65,   32,   33,  798,  801,   69,
      814,   69,   66,   69,   66,   33,   33,   33, 3580,   33,
       71,   33,  811,   33,   71,   66,   66,   66,   71,   66,
       33,   66,   33,   34,   71,  125,   72,  811,   71, 3579,
     1093, 1060,   34,   34,   34,  125,   34,   72,   34,   72,
       34,   72,  125, 1093,  289,  209, 1060,   34,  209,   34,
       35,   35,   35,   35,  209,   35,   77,  124,  124,  289,

       77,   35,   35,   35,   77,  124,  352,   35,   35,   35,
       77,  289,  217,  352,   77,  217,   35,  353,   35,   37,
     2584,  217,   37, 1256,  353, 2584,  355,   75,   37,   37,
       37,   75,   37,  355,   37,   75,   37, 1063,  813,  903,
       75,   75,  813,   37,   75,   37,   38,  903, 1256,   38,
       83, 1473, 1063,  356,   83,   38,   38,   38,   83,   38,
      356,   38, 1070,   38,   83, 1473,  133,   63,   83,   63,
       38,   63,   38,   39,  332,   63,  332,  133, 1066,  133,
       63,  133,   63,  176,   63,   63,  176,  132, 3564, 1070,
     1066,  132,  176,  190,  332,  132,   39,   39,   39,   39,

      176,   39,  131,  357,   39,  132,  131,   39,   39,  190,
      131,  357,  190,   39,   39,  190,  131, 1310,  357, 1310,
      131, 1058,   39,  131,   39,   52,   52, 1058,   52,   52,
       52,   52,   52,   52,   52,   52,   52,   52,   52,   53,
       53, 3563,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,  137,  230,  554, 1248, 1067,  230, 1257,
      230,   53,  230,  135,  137,  137,  137,  135,  137, 1067,
      554,  135,   53,   67,   53,   67,   53,   58,   58,   58,
       67,  135,  554, 1068, 1257,   58, 1248, 1068,   58,   67,
       58,   58,   58,   67,   58,   67,   68,   67,  134,  363,

       68,  363,  134, 1737,   68, 1061,  134,   67,  363,  134,
      333, 1061,  333, 1737,   68,   68,  134,   68,   68,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  136,
      333, 1292,  142, 1099, 1099, 3562, 3561,  113,  165,  165,
      136,  113,  136,  142,  136,  142, 1292,  142,  136,  113,
      165,  858,  165,  113,  165,  113,  114,  114,  858,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      115,  115, 1474,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  139,  140, 1474,  364,  139,  140,
      354,  141,  139,  140,  364,  141,  364,  146,  139,  141,

      354,  146,  139,  140,  115,  146,  143,  354,  141,  141,
      143,  115, 1503,  147,  143,  146,  146,  147,  148,  613,
      143,  147,  148,  148,  143,  149,  148, 3540,  613,  149,
      150,  147,  358,  149,  150,  613,  148,  358,  150,  358,
     1503,  153,  153,  149,  153, 1032, 1032,  150,  150,  154,
      153,  160,  153,  154,  153, 1032,  153,  154,  153,  155,
      154,  160,  160,  154,  160,  156,  160,  154,  155,  156,
      155,  155,  155,  156,  155,  157, 3538,  155,  367,  155,
      608,  608,  362,  156,  367,  158,  157,  608,  157,  157,
      157,  367,  158,  362,  159,  158,  159,  157,  158, 1504,

      362,  158,  161, 1922,  158,  159,  161,  159,  162,  159,
      161,  163,  162,  229, 1922,  163,  162,  229, 2693,  163,
      161,  229,  162,  366,  214,  163,  162, 1504,  162,  163,
      164,  163, 1692,  229,  164,  366, 2693,  166,  164,  166,
      214,  167,  366,  214,  164,  167,  214,  167,  164,  167,
      166,  166,  166,  168,  166,  167, 1069,  168, 1692,  167,
      868,  168, 1238,  169, 1069,  169,  170,  868, 1238,  168,
      168,  168,  168,  601,  169,  168,  169,  170,  169,  170,
      171,  170,  172,  173,  171,  601,  172,  173,  171,  179,
      172,  173,  601,  179, 1239,  177,  172,  179,  171,  177,

      172,  173, 1239,  177,  180, 2872,  177,  179,  181,  183,
     2872,  600,  181,  177,  600,  180,  181,  180,  180,  180,
      183,  600,  183,  182,  183,  181,  181,  182,  181,  184,
      185,  182,  867,  184,  185,  867,  359,  184,  185, 1552,
      182,  182,  867,  184,  603,  187,  359,  184,  185,  184,
      185,  186, 1552,  359, 2348,  186,  187,  603,  187,  186,
      187,  188,  189, 2348,  603,  186,  189,  191,  189,  186,
      189,  191,  188,  188,  188,  191,  188,  192,  196,  197,
      189, 1283,  196,  197,  191,  191,  196,  197,  192, 1468,
      192, 1458,  192,  197,  198, 1468,  196,  197,  198,  197,

      199, 1283,  198,  204,  199, 3537,  199,  204,  199,  201,
     3536,  204,  198,  606,  198,  208, 1458,  204,  199,  208,
      201,  204,  201,  208,  201,  606,  208,  210,  224,  224,
      211,  210,  606,  208,  211,  210,  213,  224,  211,  224,
      213, 1100, 1100,  224,  213,  210, 1100,  211,  211,  212,
      211, 3505, 1290,  212,  213,  365,  213,  212,  218,  220,
     1923,  365,  218,  212, 1290,  365,  218,  212,  365,  212,
      220,  220,  220,  219,  220,  218,  218,  219,  218,  873,
      221,  219,  873,  604,  221, 1923,  221,  219,  221,  873,
      604,  219,  225,  219,  361,  226,  225,  604,  221,  361,

      225,  361,  226, 1555,  227,  226,  611,  611,  226, 1555,
      225,  226,  228,  611,  226,  227,  228,  227, 1693,  227,
      228,  231,  248,  245, 1693,  231,  228,  245, 2531,  231,
      228,  245,  228,  248, 1249,  248,  246,  248,  231,  231,
      246,  245,  247, 2531,  246,  610,  247,  249,  249,  250,
      247,  610, 1285,  250,  246,  246,  251,  250,  610,  249,
      247,  249, 1466,  249, 1249,  251,  247,  250,  251,  252,
     1466,  253, 1285,  252,  251,  253,  251,  252, 2536,  253,
     1553,  254,  255,  255, 2536,  253, 1327,  252, 1553,  253,
      254,  254,  254,  255,  254,  255,  254,  255,  256,  257,

      258,  256, 1291,  257,  258,  862,  862,  257,  258,  256,
      259,  256,  862,  256, 1291,  260, 1327,  257,  258,  258,
      261,  259, 1311,  259,  260,  259,  260,  262,  260,  543,
      260,  261,  261,  261,  263,  261,  262,  264,  262, 1311,
      262,  543,  262, 2155,  543,  263,  263,  263,  264,  263,
      264,  265,  264,  266, 2155,  265,  543,  266,  269,  265,
     1738,  266,  269,  267,  267, 3504,  269,  266,  267,  265,
     1738,  266,  267,  268, 1459,  360,  269,  268,  267,  268,
      270,  268,  267,  875,  270,  271, 1459,  360,  270,  271,
      875,  268,  272,  271,  360,  360,  272,  273,  270, 3503,

      272, 1328, 2156,  271,  271, 3502,  273, 2161,  274,  273,
      272, 2161,  274, 2156,  275,  273,  274,  273,  275,  277,
      274,  276,  275,  277,  276,  276,  274,  277,  880,  276,
      278, 1328,  275,  275,  278,  880,  280,  277,  278,  276,
      280,  279,  281,  602,  280,  279,  281,  282,  278,  279,
      281,  282, 1739,  279,  280,  282, 1962,  602, 2146,  279,
      281,  281, 1739,  283,  602,  282,  282,  283,  284,  285,
      286,  283,  284,  285,  286,  607,  284,  285,  286,  614,
     1962,  283,  283,  285, 2146,  614,  284,  285,  286,  607,
      290,  291,  614,  286,  290,  291,  607, 2353,  290,  291,

      292, 2353,  292, 3501,  291,  612,  860,  292,  290,  291,
      612,  860,  612,  860,  290,  292,  292,  292,  876,  293,
      292,  294,  292,  293,  295,  294,  876,  293,  295,  294,
      296,  293,  295,  876,  296, 3459,  296,  293,  296,  294,
     3458,  297,  295,  298,  768,  297,  294,  298,  296,  297,
      299,  298,  299, 1750,  299,  768,  300,  768,  299,  297,
      300,  298,  301, 1750,  300, 1107,  301, 1975,  299, 2381,
      301,  302, 1107,  299,  300,  303,  300,  304, 2381,  303,
      301,  304,  302,  303,  302,  304,  302, 3457,  305,  314,
      306, 1975,  305,  303,  306,  304,  305,  861,  306,  313,

      314,  315,  314,  313,  314, 1329,  305,  313,  306,  316,
      313,  861,  315,  315,  315,  369,  315,  313,  861, 3095,
      316,  370,  316, 3095,  316,  370,  369,  369,  369,  370,
      369, 1111,  371,  372,  373, 1329,  371,  372, 1111,  370,
      371,  372, 1561, 1561, 1561,  373,  371,  373,  374,  373,
      371,  372,  372,  375,  373,  556, 3456,  556,  374,  374,
     2003,  374,  556,  374,  375,  376,  375,  377,  375,  376,
      556,  556,  556,  376,  375,  378,  379,  380,  377,  379,
      377,  380,  377,  376, 2003,  380,  378,  379,  378,  379,
      378,  379,  378,  381,  382,  380,  872, 2145, 3455,  383,

      383, 2007,  872,  872,  381,  382,  381,  382,  381,  382,
      383,  382,  383,  384,  383,  874,  384, 2145,  385,  386,
      386,  874,  874, 2532,  384, 2007,  384, 1113,  384,  385,
      386,  385,  386,  385,  386,  387,  388, 1113,  385,  605,
      605,  605, 2356, 2532, 1113, 2698,  387,  388,  387,  388,
      387,  388,  389,  390,  391,  388,  389,  390,  391,  392,
      389,  390,  391,  392, 1751, 2698, 2356,  392,  605,  393,
      389,  390,  391,  390, 1751,  605,  391,  392,  393,  393,
      393, 1112,  393, 1112,  393,  394,  394,  393,  395,  397,
     1112,  396, 2840,  397,  394, 2561,  394,  397,  394,  395,

      394,  395,  396,  395,  396,  398,  396,  397,  397,  398,
      399,  400, 1752,  398,  399,  400, 1783, 2162,  399,  400,
     2840, 2561, 1752,  398,  398, 2162, 1783,  401,  399,  400,
      399,  401,  402,  403,  544,  401,  402,  403,  401,  403,
      402,  403,  405, 3437,  404,  401,  544, 2363,  404,  544,
      402,  403,  404,  405,  406,  405,  407,  405,  404, 2363,
      407,  544,  404, 1784,  407,  406,  406,  406,  406,  406,
      408,  411,  409, 1784,  407, 2835,  409, 2835, 3436, 3399,
      409,  408,  411,  408,  411,  408,  411,  408,  410,  408,
      409,  412,  410,  410,  414,  412,  410,  412,  414,  412,

     1116, 1116,  414,  413,  410,  412,  410,  413, 1116,  412,
     1785,  413,  414,  412,  415,  413, 1330,  414, 1787,  416,
     1785,  413, 3398, 1330,  417,  415, 2967,  415, 1787,  415,
      416,  415,  416,  417,  416,  417,  418,  417,  416,  417,
     1106,  419, 2184, 1106, 2967, 3397,  420,  418, 2357,  418,
     1106,  418,  419, 2184,  419,  421,  419,  420,  420,  420,
      419,  420,  421,  420, 3396,  422,  421,  423,  421,  422,
      421,  423, 2357,  422,  425,  423,  616, 2364,  425,  424,
      424, 2389,  425,  422,  424,  423,  423,  616,  424, 2364,
     2389,  426,  425,  425,  616,  426,  427,  428,  424,  426,

      427,  428,  426, 3395,  427,  428,  429,  431,  429,  426,
      427,  431,  430,  430,  427,  428,  432, 3327,  431,  429,
      431,  429,  431,  429,  430,  429,  430,  432,  430,  432,
      433,  432, 1114,  434,  432, 1114,  435, 3326, 3325, 1114,
      433,  433,  436,  433,  434,  433,  434,  435,  434,  435,
      434,  435,  437,  436,  435,  436,  437,  436,  438,  439,
      437, 1333,  438,  439,  440, 1788,  438,  439,  440, 3324,
      437, 1333,  440,  441,  442, 1788,  438,  439, 1333,  439,
      443,  438,  440,  444,  441,  442,  441,  442,  441,  442,
      445,  443, 3084,  443,  444,  443,  444,  446,  444, 1115,

     3084,  445, 1115,  445, 3323,  445, 1115,  447,  446, 1789,
      446,  447,  446,  449,  448,  447,  450,  446,  448, 1789,
     3307, 3306,  448,  451,  449,  447,  449,  450,  449,  450,
      452,  450,  448, 1467,  451,  451,  451,  453,  451, 2836,
     1467,  452, 2193,  452,  452,  452,  455,  454,  453,  456,
      453,  454,  453, 2193, 2836,  454, 1335,  455,  456,  455,
      456,  455,  456,  457,  456,  454, 1335,  457,  458,  454,
     1794,  457,  458, 1335,  459,  461,  458,  460, 2568,  461,
     1794,  457, 3298,  461,  457,  459,  458,  459,  460,  459,
      460,  459,  460,  461,  462,  463, 1331, 1331,  460, 2587,

      464,  465, 3232, 1331, 2568,  462,  463,  462,  463,  462,
      463,  464,  465,  464,  465,  464,  465,  466,  465,  467,
      468, 3231, 3083,  467, 3083, 2587,  808,  467,  466,  468,
      466,  468,  466,  468,  466,  468,  469,  467,  808,  470,
      469,  808, 1554,  470,  469,  470, 3229,  470,  471, 1554,
      469,  472,  471,  808,  469,  472,  471,  470, 1556,  472,
      471,  470,  472,  473,  474, 1556,  471,  473,  474,  472,
     3228,  473,  474,  476, 3227,  475,  476,  473,  474,  475,
     1559,  473,  474,  475,  476,  477,  476, 1559,  476, 2588,
      478,  479, 3226,  475, 3221, 3220,  477,  477,  477,  809,

      477,  478,  479,  478,  479,  478,  479,  480,  479, 1706,
      479,  809,  481, 3219,  809, 2588, 1706,  480,  480, 2221,
      480,  483,  480,  481,  484,  481,  809,  481,  481,  481,
     2221,  483,  483, 1795,  483,  484,  483,  484,  491,  484,
      495,  492,  491, 1795, 3096,  492,  491,  484,  492,  492,
      493,  495, 3096,  495,  493,  495,  491, 2412,  493,  492,
     1932,  493,  494,  494,  497,  496, 2412,  494,  493, 3195,
     1932,  494,  498,  497, 3125,  497,  496,  497,  496,  497,
      496,  494,  496,  498,  499,  498,  500,  498,  501, 1334,
      500, 1334,  501, 1707,  500,  499,  501,  499, 1334,  499,

     1707,  502, 2414,  503,  500,  502,  501, 3124, 3123,  502,
     3122, 2414,  506,  504,  503,  502,  503,  504,  503,  502,
      505,  504,  507,  506,  505,  506,  507,  506,  505,  508,
      507,  504, 3121,  508, 3120,  509, 3119,  508,  505,  509,
      507,  510,  510,  509, 1791,  510, 1560,  508,  508,  510,
      511, 1791,  512,  509,  513, 2223,  512, 1560,  513,  510,
      512,  511,  513,  511, 1560,  511, 2223,  514,  527,  515,
      512,  514,  513,  515,  516,  514,  517,  515,  516,  527,
      517,  527,  516,  527,  517,  514, 3118,  515,  517,  518,
      529, 3097,  516,  518,  517,  518,  519,  518,  520, 3008,

      519,  529,  520,  529,  519,  529,  520,  518,  519,  521,
      521,  522, 2694,  521,  519,  522,  520,  521, 3006,  522,
     3005, 2694,  522, 1933,  523,  530,  524,  521,  523,  522,
      524,  523,  523, 1933,  524,  525,  530,  524,  530,  525,
      530,  525,  523,  525,  524,  526,  526,  526,  528, 3004,
     2413,  531,  528,  525, 2349,  531,  528, 2413, 3196,  531,
      526,  532,  532,  532,  526, 2349,  528,  533,  526,  531,
     3196,  533, 3003,  534, 3002,  533,  532,  534,  526,  535,
      532,  534,  536,  535,  532,  533,  536,  535,  537, 3001,
      536,  534,  537, 2505,  532, 1786,  537,  535,  538,  539,

      536, 1786, 1786, 2505,  539,  540,  537, 2506, 2997,  538,
      539,  538,  539,  538,  539,  542,  540, 2506,  540, 2941,
      540,  541,  540, 2941,  541,  555,  542,  547,  542,  555,
      542, 3109,  541,  555,  541,  548,  541, 2941,  547,  548,
      547, 3109,  547,  555,  547,  551,  548, 2996,  548, 2995,
      548,  549,  549, 2971,  550,  550,  551,  551,  551,  557,
      551,  734,  549,  734,  549,  550,  549,  550,  734,  550,
      557,  558,  557,  559,  557,  558,  734,  734,  734,  558,
      560,  561, 2966, 2877,  559, 3206,  559,  562,  559,  558,
      564,  560,  561,  560,  561,  560,  561, 3206,  562,  563,

      562,  564,  562,  564,  563,  564,  565,  566, 3110, 2876,
      563,  566,  563, 2875,  563,  566,  568,  565, 3110,  565,
      568,  565,  567,  565,  568,  566,  567,  567, 2874, 2005,
      567,  569,  569,  569,  568,  571, 2873,  570, 2009,  571,
      567,  570, 2005,  571,  572,  570,  569,  572,  572, 2005,
      569, 2009,  572,  571,  569,  570,  570,  571, 2009,  573,
      619,  574,  572,  573,  569,  574,  580,  573,  581,  574,
      580,  619,  581,  619,  580,  619,  581,  573,  573,  574,
      580,  609,  609,  609,  580, 2871,  581,  581,  617,  615,
      615,  615,  617,  618,  618,  618,  617, 1790,  620, 2870,

      859,  859,  859, 1790, 1790, 2869,  617, 2415,  618,  620,
      609,  620,  618,  620, 2415,  620,  618,  609,  615,  621,
      622, 1332,  621, 2868, 1332,  615,  618,  623, 1332,  859,
      621,  622,  621,  622,  621,  622,  859,  624,  623,  625,
      623,  624,  623,  625,  626,  624,  625,  625,  626, 2867,
      627, 3111,  626, 2866,  627,  624, 2865,  625,  627,  628,
     2744, 3111,  626,  628,  626,  629,  630,  628,  627,  629,
      630, 2743,  629,  629,  630, 2742, 2741,  628,  632,  634,
      631,  631,  632,  629,  630,  631,  632,  633,  632,  631,
      634,  633,  634,  635,  634,  633,  632, 3371,  636,  631,

     1990, 1990, 1990, 1990,  635,  633,  635, 3371,  635,  636,
      637,  636,  638,  636,  637,  639,  638,  640,  637,  639,
      638,  640, 3207,  639, 2740,  640,  638,  641,  637, 2739,
      638, 2738, 2737,  639, 3207,  640,  639, 2736,  641,  642,
      641,  640,  641,  642,  643,  644, 2735,  642,  643, 2734,
      645, 2733,  643, 2731, 2729,  643,  644,  642,  644,  646,
      644,  645,  643,  645,  646,  645,  647,  645, 3372,  647,
      646,  648,  646, 2728,  646,  648,  649,  649, 3372,  648,
      647,  649,  647,  650,  647,  649, 2724,  650,  651,  648,
     2717,  650,  651, 2222,  650,  649,  651, 2670, 2669,  652,

      652,  650, 2224, 2222,  652,  653,  651,  651,  652,  653,
     2222,  653, 2224,  653,  654,  655, 2586,  653,  652, 2224,
      656, 2585, 2583,  653, 2582,  654,  655,  654,  655,  654,
      655,  656,  657,  656,  658,  656,  657, 2581,  656, 2580,
      657, 2579, 2578,  661,  659,  658, 2577,  658,  659,  658,
      657,  660,  659,  662,  661,  660,  661, 2576,  661,  660,
      663, 2575,  659, 2574,  662, 2573,  662, 2547,  662,  660,
      662,  663,  664,  663, 2546,  663,  664,  665,  663,  666,
      664,  665,  666,  666,  667,  665, 2540,  666,  667, 2539,
      664, 2411,  667, 2410, 2409,  665,  668,  666, 2408,  669,

      668,  670,  667,  669,  668,  670, 2407,  669,  671,  670,
     2405, 2403,  671, 2402,  668, 2401,  671,  669, 2400,  670,
      672,  673, 2399,  674,  672,  673,  671,  674,  672,  673,
     2398,  674,  675,  677, 2397,  675,  675, 2395,  672,  673,
      675,  674,  674,  676,  677,  678,  677,  676,  677,  679,
      675,  676, 2220,  679, 2219,  680,  678,  679,  678,  680,
      678,  676, 2218,  680,  682,  681,  681,  679,  682, 2217,
      681,  683,  682,  680,  681,  683, 2216, 2215, 2214,  683,
     2213,  685,  682,  684,  681, 2212, 2211,  684,  683,  683,
      684,  684,  685,  686,  685, 2206,  685, 2205,  690,  687,

     2204,  684,  687,  687,  686,  688,  686,  690,  686,  690,
      687,  690,  687,  690,  687,  686,  688,  691,  688, 2203,
      688,  692,  688,  689,  689,  692, 2202, 2201,  691,  692,
      691,  694,  691,  693,  689,  691,  689,  693,  689,  692,
      693,  693,  694,  695,  694,  816,  694,  816,  696,  697,
     2200,  693,  816,  697,  695,  699,  695,  697,  695,  696,
      816,  696,  816,  696,  698,  698,  699,  697,  699,  698,
      699,  700,  702,  698,  701, 2163,  702, 2013, 2012, 2008,
      702, 2006,  700,  698,  700,  701,  700,  701,  700,  701,
      702,  703,  708,  704,  705,  703,  703,  704,  705,  703,

      706,  704,  705,  708,  706,  708, 2004,  708,  706,  703,
     2002,  704,  705,  707,  706,  709, 2001,  707,  706,  710,
      707,  707, 2000,  710, 1999,  709,  709,  710,  709, 1998,
      709,  707,  711,  712,  713, 1997,  711,  710,  713, 1996,
      711, 1995,  713,  714,  712, 1994,  712,  721,  712,  715,
      711,  721,  713, 1993,  714,  721,  714,  716,  714, 1991,
      715, 1989,  715,  717,  715,  721,  715,  719,  716,  718,
      716,  719,  716,  718,  717,  719,  717,  718,  717, 1988,
      718, 1987, 1986, 1985,  720,  719,  719,  718,  720,  722,
      723, 1984,  720,  722,  723, 1983,  722,  722,  723,  725,

     1976,  724,  720,  720,  723,  724, 1974,  722,  723,  724,
      725,  726,  725,  724,  725,  726,  727,  728, 1963,  724,
     1961,  728,  726, 1901,  726,  728,  726,  727,  729,  727,
      730,  727,  729,  727,  730,  728,  729,  731,  730, 1782,
     1781,  731, 1780, 1779, 1778,  731,  729,  729,  730,  731,
      732,  735,  733,  736,  732,  731,  733,  736,  732,  740,
      733,  736,  735,  740,  735,  741,  735,  740,  732,  741,
      733,  736, 1777,  741,  742, 1776, 1775,  740,  742, 1774,
      740,  743,  742,  741, 1773,  743, 1772,  744, 1771,  743,
      744,  744,  742,  745, 1770,  744,  746,  745,  745,  743,

      746,  745, 1769, 1768,  746,  744,  748,  748,  748,  747,
     1767,  745,  747,  747,  746,  749,  750,  747, 1766, 1765,
      750,  748,  751, 1764,  750,  748,  749,  747,  749,  748,
      749,  752,  761,  751,  750,  751, 1763,  751, 1762,  748,
      753, 1761,  752,  761,  752,  761,  752,  761,  755,  752,
     1735,  753,  755,  753, 1734,  753,  755,  753,  754,  754,
      756, 1701, 1700,  754,  756, 1699,  755,  754,  756,  754,
      754, 1668,  754, 1551,  754,  754, 1550,  757,  756, 1549,
      756,  757,  758,  758,  757,  757,  758, 1548,  759,  760,
      758, 1547,  759,  760,  762,  757,  759,  760,  762,  759,

      758, 1546,  762,  763,  764, 1545,  759,  760, 1544, 1543,
     1542, 1531,  762,  760,  763,  764,  763,  764,  763,  764,
      765,  764,  766,  767,  765,  769,  766,  767,  765,  769,
      766,  767, 1530,  769,  766,  772,  771, 1529,  765, 1528,
      766,  767,  770,  769,  773, 1527,  770,  771,  773,  771,
      770,  771,  773,  772,  777,  778,  778,  778, 1526, 1525,
      770, 1055,  773,  780,  772,  777,  772,  777,  772,  777,
     1055,  779,  778, 1055,  780, 1508,  780,  781,  780, 1055,
      779, 1055,  779,  778,  779,  778,  779,  778,  781,  782,
      781, 1507,  781,  789,  786,  787, 1506,  789, 1437, 1436,

      782,  789,  782,  788,  782,  786,  787,  786,  787,  786,
      787,  789,  786,  790,  788,  791,  788,  790,  788,  791,
      792,  790,  793,  791,  792, 1326,  793, 1325,  792, 1324,
      793,  790, 1323,  791, 1322,  791,  790,  792,  792,  794,
      793,  795,  803,  794, 1321,  804,  803,  794, 1320,  804,
      803,  806,  795,  804,  795,  806,  795,  794, 1319,  806,
      803,  805,  805,  804,  807, 1318,  805, 1317,  807,  806,
      805, 1316,  807,  812,  817,  807, 1314, 1313, 2427, 2427,
      805, 1312,  807,  817,  812,  817,  812,  817,  812,  817,
      818,  819,  820,  818, 1307, 1289,  820, 1288,  821,  819,

      820,  818,  819,  818,  819,  818,  819,  822,  823,  821,
      820,  821, 1286,  821,  824,  825, 2427, 2427,  822,  823,
      822,  823,  822,  823,  826,  824,  825,  824,  825,  824,
      825,  827,  832,  825,  828,  826,  832,  826,  828,  826,
      832,  833,  827,  827,  827,  828,  827,  828,  834,  828,
      832, 1284,  833, 1216,  833, 1215,  833,  840,  835,  834,
      841,  834,  835,  834, 1204,  841,  835, 1110,  840,  881,
      840,  841,  840,  841,  882,  841,  835,  866,  866,  866,
      881,  883,  881,  882,  881,  882,  881,  882, 1109,  882,
      884, 1108,  883, 1104,  883, 1103,  883, 1102, 1101,  883,

      885,  884,  884,  884,  885,  884,  866,  886,  885,  887,
     1098,  886, 1097,  866, 1096,  886,  888,  889,  885, 1094,
      887, 1092,  887, 1091,  887,  886,  888,  888,  889,  888,
      889,  888,  889,  890,  891, 1090,  892,  890,  891,  894,
      892,  890,  891,  894,  892, 1087, 1086,  894, 1064, 1062,
      894,  890,  891,  892,  892,  893,  893,  894,  891,  895,
      893, 1059,  895,  895,  893,  896, 1052,  895,  896,  896,
     1051,  897, 1038,  896,  893, 1037,  898,  895, 1036,  899,
     1004, 1003,  897,  896,  897, 1002,  897,  898,  994,  898,
      899,  898,  899,  900,  899,  993,  899,  900,  901,  901,

      902,  900,  879,  901,  902,  904,  904,  901,  902,  878,
      904,  900,  905,  877,  904,  871,  905,  901,  902,  902,
      905,  906,  914,  907,  904,  906,  870,  907,  906,  906,
      905,  907,  908,  914,  908,  914,  908,  914,  909,  906,
      908,  907,  909,  910,  911,  869,  909,  910,  911,  909,
      908,  910,  911,  865,  864,  911,  909,  863,  855,  912,
      854,  910,  911,  912,  910,  913,  853,  912,  852,  913,
      916,  915,  917,  913,  916,  851,  917,  912,  916,  850,
      917,  915,  915,  913,  915,  849,  915,  848,  916,  846,
      917,  917,  918,  918,  919,  920,  845,  918,  919,  920,

      921,  918,  919,  920,  921,  843,  922,  842,  921,  923,
      838,  918,  919,  920,  920,  924,  925,  922,  921,  922,
      923,  922,  923,  837,  923,  836,  924,  925,  924,  925,
      924,  925,  926,  927,  928,  928,  926,  927,  929,  928,
      926,  927,  929,  928,  930,  831,  929,  931,  830,  829,
      926,  927,  932,  928,  815,  930,  929,  930,  931,  930,
      931,  933,  931,  932,  810,  932,  934,  932,  802,  934,
      800,  935,  933,  936,  933,  935,  933,  936,  799,  935,
      934,  936,  934,  937,  934,  797,  938,  796,  785,  935,
      784,  936,  939,  783,  937,  776,  937,  938,  937,  938,

      940,  938,  775,  939,  774,  939,  939,  939,  941,  942,
      738,  940,  737,  940,  943,  940,  596,  595,  941,  941,
      942,  941,  942,  941,  942,  943,  594,  943,  944,  943,
      942,  946,  944,  945,  945,  946,  944,  947,  945,  946,
      593,  947,  945,  947,  592,  947,  944,  948,  591,  946,
      946,  590,  945,  949,  589,  947,  588,  949,  948,  950,
      948,  949,  948,  950,  951,  952,  587,  950,  951,  586,
      953,  949,  951,  954,  585,  584,  952,  950,  952,  583,
      952,  953,  951,  953,  954,  953,  954,  579,  954,  578,
      954,  955,  955,  577,  956,  575,  545,  957,  958,  487,

      958,  486,  955,  956,  955,  956,  955,  956,  957,  956,
      957,  958,  957,  958,  959,  958,  961,  960,  485,  482,
      961,  351,  350,  330,  961,  959,  962,  959,  960,  959,
      960,  963,  960,  329,  961,  960,  964,  962,  328,  962,
      327,  962,  963,  963,  963,  965,  963,  964,  326,  964,
      325,  964,  324,  966,  322,  968,  965,  966,  965,  967,
      965,  966,  967,  967,  321,  969,  968,  967,  968,  320,
      968,  966,  970,  319,  318,  317,  969,  967,  969,  312,
      969,  310,  971,  970,  972,  970,  971,  970,  972,  970,
      971,  973,  972,  974,  309,  973,  308,  974,  972,  973,

      971,  974,  972,  307,  975,  981,  976,  244,  975,  973,
      976,  974,  975,  977,  976,  243,  981,  977,  981,  240,
      981,  977,  975,  975,  976,  237,  979,  236,  978,  235,
      979,  977,  978,  977,  979,  978,  978,   99,  980,  980,
      982,   98,   97,  980,  979,   92,  978,  980,  983,  982,
      984,  982,  983,  982,  984,  982,  983,  980,  984,  986,
       91,   90,   89,  986,   88,  985,  983,  986,  984,  985,
      984,  987,  985,  985,   45,  987,   43,  986,  986,  987,
      988,  989,  995,  985,   16,   15,  995,    0,    0,  987,
      995,  988,  989,  988,  989,  988,  989,  990,  991,  990,

      995,    0,    0,    0,  990,  992,    0,  991,  992,  991,
        0,  991,  990,  991,  990,  996,  992,  997,  992,  996,
      992,  998,    0,  996,    0,  998,    0,  999,  997,  998,
      997,  999,  997,  996,  996,  999, 1000, 1000, 1001,  998,
     1000,    0, 1001,    0, 1000,  999, 1001, 1005,    0,    0,
        0, 1006,    0,    0, 1000, 1006, 1001, 1005, 1005, 1006,
     1005,    0, 1005, 1007, 1008, 1012, 1009, 1007, 1008, 1006,
     1009, 1007, 1008,    0, 1009,    0, 1012,    0, 1012,    0,
     1012, 1007, 1008, 1008, 1009, 1010, 1011, 1013,    0, 1010,
     1011, 1013,    0, 1010, 1011, 1013, 1010,    0, 1014,    0,

     1011,    0, 1014, 1010, 1011, 1013, 1014, 1015, 1016, 1017,
        0, 1015, 1014,    0, 1015, 1015, 1014,    0, 1017, 1016,
     1017, 1016, 1017, 1016, 1017, 1015, 1018, 1018, 1019, 1020,
     1024,    0, 1019, 1020, 1024,    0, 1019, 1020, 1024, 1019,
     1018, 1018, 1021, 1022,    0, 1018, 1019, 1020, 1024, 1018,
     1023,    0,    0, 1021, 1022, 1021, 1022, 1021, 1022, 1018,
     1022, 1023,    0, 1023, 1042, 1023, 1025, 1025, 1025, 1025,
     1026, 1043, 1027, 1025, 1026, 1042, 1027, 1042, 1026, 1042,
     1027, 1025, 1043, 1025, 1043,    0, 1043, 1028, 1026, 1026,
     1027, 1028, 1029,    0, 1030, 1028, 1029,    0, 1030,    0,

     1029, 1030, 1030, 1029,    0, 1028, 1028, 1031, 1048, 1033,
     1029, 1031, 1030, 1033, 1034, 1031,    0, 1033, 1034, 1048,
     1033, 1048, 1034, 1048,    0, 1031, 1033, 1033,    0, 1033,
     1035, 1039, 1034, 1040, 1035, 1039,    0, 1040, 1035, 1039,
        0, 1040, 1041,    0, 1045,    0, 1041,    0, 1035, 1039,
     1041, 1040, 1044, 1044, 1041, 1045,    0, 1045,    0, 1045,
     1041, 1045,    0, 1044, 1044, 1046, 1044, 1047, 1044, 1046,
        0, 1047,    0, 1046,    0, 1047, 1053, 1049,    0,    0,
        0, 1047, 1050, 1046,    0, 1047, 1049, 1053, 1049, 1053,
     1049, 1053, 1049, 1050, 1050, 1050, 1054, 1050,    0, 1056,

        0,    0, 1057,    0,    0, 1065,    0, 1054,    0, 1054,
     1056, 1054, 1056, 1057, 1056, 1057, 1065, 1057, 1065, 1071,
     1065, 1057, 1065, 1071, 1072, 1073, 1074, 1071, 1072, 1073,
     1074, 1075, 1072, 1073, 1074, 1075,    0, 1071,    0, 1075,
        0,    0, 1072, 1073, 1074, 1074, 1076, 1077, 1078, 1075,
     1076, 1077, 1078,    0, 1076, 1077, 1078, 1079, 1080,    0,
     1076,    0, 1078, 1081, 1076, 1077, 1078,    0, 1079, 1080,
     1079, 1080, 1079, 1080, 1081, 1082, 1081,    0, 1081,    0,
     1083, 1089,    0,    0, 1084, 1089, 1082, 1084, 1082, 1089,
     1082, 1083, 1083, 1083, 1088, 1083, 1082,    0, 1084, 1089,

     1084,    0, 1084,    0,    0, 1088,    0, 1088,    0, 1088,
     1105, 1105, 1105, 1118, 1117, 1117, 1117, 1118,    0, 1119,
        0, 1118,    0,    0,    0, 1120,    0,    0,    0, 1117,
     1119, 1118, 1119, 1117, 1119,    0, 1120, 1117, 1120, 1105,
     1120, 1121, 1121,    0, 1122,    0, 1105, 1117, 1122,    0,
     1123,    0, 1122, 1121, 1123, 1121, 1124, 1121, 1123,    0,
     1124, 1126, 1122,    0, 1124, 1126, 1125, 1125, 1123, 1126,
        0, 1125, 1125, 1127, 1124, 1125,    0,    0,    0, 1126,
        0, 1129, 1130, 1128, 1127, 1125, 1127, 1128, 1127,    0,
     1129, 1128, 1129, 1130, 1129, 1130, 1129, 1130, 1131, 1131,

     1142, 1128, 1132, 1131, 1131,    0, 1132, 1131, 1133,    0,
     1132, 1142,    0, 1142,    0, 1142,    0, 1131, 1133, 1133,
     1132, 1133, 1135, 1133, 1134, 1134, 1135, 1136, 1137, 1134,
     1135, 1136, 1137, 1134,    0, 1136, 1137,    0,    0,    0,
     1135,    0,    0, 1134,    0, 1136, 1137, 1138, 1138, 1139,
     1136,    0, 1138, 1139, 1140,    0, 1138, 1139, 1140, 1140,
     1141, 1141, 1140, 1144,    0, 1141, 1138, 1139,    0, 1141,
     1145, 1143, 1140,    0, 1144, 1144, 1144, 1146, 1144, 1141,
     1143, 1145, 1143, 1145, 1143, 1145, 1143, 1147, 1146, 1148,
     1146, 1147, 1146, 1148, 1149, 1147,    0, 1148, 1149,    0,

     1150, 1150, 1149, 1148, 1150, 1147,    0, 1148, 1150, 1152,
     1151, 1151, 1149, 1152,    0, 1151,    0, 1152, 1150, 1151,
     1153,    0,    0,    0, 1153,    0, 1152, 1152, 1153, 1151,
        0, 1153, 1154, 1155, 1169, 1156, 1154, 1155, 1153, 1156,
     1154, 1155,    0, 1156, 1157, 1169,    0, 1169, 1157, 1169,
     1154, 1155, 1157, 1156, 1156, 1157, 1158,    0, 1159, 1159,
     1158,    0, 1157, 1159, 1158,    0,    0, 1159, 1161,    0,
     1160, 1160, 1161, 1159, 1158, 1160, 1161, 1159, 1158, 1160,
     1163,    0, 1162, 1162, 1163,    0, 1161, 1162, 1163, 1160,
        0, 1162, 1164, 2635, 2635,    0, 1164,    0, 1163, 1163,

     1164, 1162,    0, 1165, 1166, 1176,    0, 1165, 1166, 1167,
     1164, 1165, 1166, 1167,    0, 1168, 1176, 1167, 1176, 1168,
     1176, 1165, 1166, 1168, 1166, 1170, 1171, 1167, 1167,    0,
        0, 2635, 2635, 1168,    0,    0, 1170, 1171, 1170, 1171,
     1170, 1171,    0,    0, 1170, 1171, 1172,    0, 1172, 1172,
     1172, 1172, 1173, 1173, 1172, 1172,    0, 1173, 1172, 1174,
     1172, 1173, 1175, 1174, 1172, 1172, 1175, 1174, 1177,    0,
     1175, 1173,    0, 1174, 1178, 1179,    0, 1174,    0, 1177,
     1175, 1177, 1180, 1177,    0, 1178, 1179, 1178, 1179, 1178,
     1179, 1181, 1182, 1180,    0, 1180, 1182, 1180,    0, 1183,

     1182, 1184, 1181, 1183, 1181, 1184, 1181, 1183,    0, 1184,
     1182,    0, 1184,    0, 1185,    0, 1186, 1183, 1185, 1184,
     1186,    0, 1185,    0, 1186, 1187, 1188,    0, 1185,    0,
        0,    0, 1185,    0, 1186, 1188, 1187, 1188, 1187, 1188,
     1187, 1188, 1189, 1190,    0, 1191, 1189,    0, 1191, 1192,
        0,    0,    0, 1189, 1190, 1189, 1190, 1189, 1190, 1191,
     1192, 1191, 1192, 1191, 1192, 1193, 1194,    0, 1193, 1194,
        0,    0, 1196,    0, 1195, 1196,    0,    0,    0, 1193,
     1194, 1193, 1194, 1193, 1194, 1195, 1196, 1195, 1196, 1195,
     1196, 1197, 1198, 1199,    0,    0,    0, 1199, 2889, 2889,

        0, 1199, 1197, 1198, 1197, 1198, 1197, 1198, 1200, 1201,
     1202, 1199, 1200, 1201,    0, 1203, 1200, 1201, 1203,    0,
        0, 1202,    0, 1202,    0, 1202, 1200, 1201, 1201, 1203,
     1207, 1203, 1205, 1203, 1206, 1205, 2889, 2889, 1206,    0,
     1208, 1207, 1206, 1207,    0, 1207, 1205,    0, 1205, 1208,
     1205, 1208, 1206, 1208, 1218, 1208, 1209, 1209, 1209, 1210,
        0, 1210,    0, 1209, 1211, 1218, 1210, 1218,    0, 1218,
        0, 1209,    0, 1209, 1210, 1211, 1210, 1211, 1212, 1211,
     1213, 1211, 1212, 1214, 1213, 1217, 1212, 1214, 1213, 1217,
        0, 1214,    0, 1217, 1220,    0, 1212,    0, 1213, 1221,

     1219, 1214, 1223, 1217, 1219, 1220,    0, 1220, 1219, 1220,
     1221, 1222, 1221, 1223, 1221, 1223, 1221, 1223, 1219, 1224,
        0,    0, 1222, 1222, 1222, 1225, 1222,    0, 1226,    0,
     1224, 1224, 1224,    0, 1224,    0, 1225, 1225, 1225, 1226,
     1225, 1226, 1227, 1226, 1228, 1226, 1227, 1232, 1228,    0,
     1227, 1232, 1228, 1229,    0, 1232,    0,    0, 1230,    0,
     1227,    0, 1228,    0, 1229, 1232, 1229, 1233, 1229, 1230,
     1230, 1230,    0, 1230, 1231, 1231,    0, 1240, 1233,    0,
     1233,    0, 1233, 1234, 1234, 1231,    0, 1231, 1240, 1231,
     1240, 1235, 1240, 1236, 1234, 1235, 1234, 1236, 1234, 1235,

     1237, 1236, 1250,    0, 1237,    0,    0,    0, 1237, 1235,
     1241, 1236, 1236, 1250,    0, 1250, 1242, 1250, 1237, 1237,
     1242, 1241, 1243, 1241, 1242, 1241, 1243, 1241, 1244, 1245,
     1243, 1246, 1244, 1245, 1242, 1246, 1244, 1245,    0, 1246,
     1243, 1251, 1244, 1246, 1252,    0, 1244, 1245,    0, 1246,
     1253, 1254, 1251,    0, 1251, 1252, 1251, 1252,    0, 1252,
        0, 1253, 1254, 1253, 1254, 1253, 1254, 1255, 1258, 1259,
     1260, 1255,    0, 1259, 1260, 1255,    0, 1259, 1260, 1258,
     1261, 1258, 1262, 1258,    0, 1255, 1262, 1259, 1260,    0,
     1262, 1261, 1264, 1261, 1263, 1261,    0,    0, 1263,    0,

     1262,    0, 1263, 1264, 1265, 1264,    0, 1264,    0, 1266,
     1267,    0, 1263,    0, 1267, 1265,    0, 1265, 1267, 1265,
     1266, 1266, 1266, 1268, 1266,    0, 1269, 1268, 1267, 1270,
     1269, 1268,    0, 1270, 1269,    0,    0, 1270, 1271, 1271,
     1269, 1268, 1271, 1268, 1269,    0, 1271, 1270, 1272, 1273,
        0,    0,    0,    0,    0, 1274, 1271,    0,    0, 1272,
     1273, 1272, 1273, 1272, 1273, 1275, 1274, 1273, 1274, 1275,
     1274, 1276, 1277, 1275, 1278, 1276, 1277, 1276, 1278, 1276,
     1277,    0, 1278, 1275, 1279, 1280,    0,    0,    0, 1276,
     1277,    0, 1278,    0,    0, 1279, 1280, 1279, 1280, 1279,

     1280, 1281, 1281, 1282,    0, 1287, 1281, 1282,    0, 1287,
     1281, 1282, 1281, 1287, 1293, 1294, 1295,    0, 1281, 1281,
     1295, 1282,    0, 1287, 1295, 1293, 1294, 1293, 1294, 1293,
     1294, 1296, 1297,    0, 1295, 1296, 1297, 1298, 1296, 1296,
     1297, 1298,    0, 1298, 1299, 1298,    0,    0, 1299, 1296,
     1297,    0, 1299, 1300,    0, 1298,    0, 1300,    0, 1300,
     1299, 1300, 1299,    0, 1301, 1302, 1303,    0, 1301, 1302,
     1303, 1300, 1301, 1302, 1303, 1304, 1305, 1302,    0,    0,
        0, 1306, 1301, 1302, 1303,    0, 1304, 1305, 1304, 1305,
     1304, 1305, 1306, 1306, 1306, 1309, 1306,    0,    0,    0,

        0,    0,    0,    0,    0,    0, 1309,    0, 1309,    0,
     1309,    0, 1309, 1315, 1315, 1315, 1315, 1315, 1315, 1315,
     1315, 1315, 1315, 1336, 1337, 1338,    0, 1339, 1337, 1338,
        0, 1339, 1337, 1338, 1336, 1339, 1336, 1338, 1336,    0,
     1340,    0, 1337, 1338, 1340, 1339,    0, 1339, 1340, 1342,
     1341, 1341,    0, 1342,    0, 1341, 1340, 1342, 1340, 1341,
        0, 1352, 1343,    0,    0,    0, 1343, 1342, 1342, 1341,
     1343, 1344, 1352, 1345, 1352, 1344, 1352, 1345,    0, 1344,
     1343, 1345, 1343,    0, 1346, 1355, 2964, 2964, 1346, 1344,
        0, 1345, 1346, 1347, 1345, 1348, 1355, 1347, 1355, 1348,

     1355, 1347, 1346, 1348, 1349, 1346, 1349, 1349, 1349,    0,
     1350, 1347, 1349, 1348, 1350, 1351,    0,    0, 1350, 1351,
     1353,    0, 1349, 1351, 2964, 2964, 1350,    0, 1350, 1353,
     1353, 1357, 1353, 1351,    0, 1351, 1356, 1354, 1353, 1356,
     1353, 1354, 1357,    0, 1357, 1354, 1357, 1358, 1358,    0,
     1356,    0, 1356, 1359, 1356, 1354,    0,    0, 1358, 1360,
     1358, 1363, 1358, 1360, 1359, 1358, 1359, 1360, 1359,    0,
     1362,    0, 1363, 1364, 1363,    0, 1363, 1360, 1361, 1361,
        0, 1362, 1361, 1362, 1364, 1362, 1364, 1362, 1364, 1361,
     1361, 1365, 1361,    0, 1361,    0, 1361, 1366, 1368, 1361,

     1365,    0, 1365, 1367, 1365,    0, 1365,    0, 1366, 1368,
     1366, 1368, 1366, 1368, 1367, 1367, 1367, 1369, 1367,    0,
     1648, 1648, 1648,    0,    0,    0, 1371, 1371, 1369, 1370,
     1369, 1370, 1369,    0, 1370, 1369,    0, 1371, 1648, 1371,
     1370, 1371, 1370, 1372, 1370, 1373, 1370, 1372, 1374, 1373,
        0, 1372, 1374, 1373, 1648,    0, 1374, 1375,    0,    0,
        0, 1372,    0, 1373,    0, 1373, 1374, 1376, 1375, 1377,
     1375, 1376, 1375, 1377, 1378, 1376, 1379, 1377, 1378,    0,
     1379,    0, 1378,    0, 1379, 1376,    0, 1377, 1379, 1380,
     1382,    0, 1378, 1380, 1379, 1379, 1381, 1380,    0,    0,

     1381, 1382, 1383, 1382, 1381, 1382,    0, 1380, 1384, 1385,
     1381, 1383,    0, 1383, 1381, 1383, 1386, 1383,    0, 1384,
     1385, 1384, 1385, 1384, 1385,    0, 1385, 1386, 1386, 1386,
     1387, 1386, 1388,    0, 1387,    0, 1388,    0, 1387,    0,
     1388, 1390, 1389, 1389, 1557, 1557, 1557, 1389, 1387,    0,
     1388, 1389, 1390, 1391, 1390, 1392, 1390,    0,    0, 1392,
     1394, 1389, 1557, 1392, 1391, 1391, 1391, 1393, 1391, 1394,
        0, 1393, 1394, 1392, 1557, 1393,    0,    0, 1394, 1395,
     1394, 1557, 1396, 1395,    0, 1393, 1396, 1395, 1397,    0,
     1396,    0,    0, 1398, 1399,    0, 1396, 1395, 1399, 1397,

     1396, 1397, 1399, 1397, 1398, 1398, 1398, 1401, 1398, 1400,
     1400, 1401, 1399, 1400, 1402, 1401, 1403, 1400, 1402,    0,
     1403,    0, 1402,    0, 1403, 1401, 1401, 1400, 1404, 1406,
        0, 1402, 1402, 1406, 1403, 1405, 1408, 1406,    0, 1404,
     1408, 1404,    0, 1404, 1408, 1405, 1405, 1406, 1405, 1407,
     1405,    0, 1409, 1407, 1408, 1407, 1409, 1407,    0, 1410,
     1409, 1407, 1410, 1411,    0,    0,    0, 1407, 1412,    0,
     1409, 1413,    0, 1410, 1411, 1410, 1411, 1410, 1411, 1412,
     1413, 1412, 1413, 1412, 1413, 1414, 1413, 1415, 1421, 1416,
        0, 1415,    0, 1416, 1414, 1415, 1414, 1416, 1414, 1421,

     1414, 1421, 1417, 1421, 1418, 1415, 1417, 1416, 1418, 1419,
     1417,    0, 1418, 1419,    0, 1420, 1417, 1419,    0, 1420,
     1417, 1419, 1418, 1420, 1418, 1422, 1420, 1419, 1423,    0,
     1423,    0, 1424, 1420,    0, 1424, 1422,    0, 1422, 1423,
     1422, 1423, 1422, 1423,    0, 1423, 1424, 1425, 1424, 1426,
     1424, 1425, 1427, 1426, 1428, 1425, 1427, 1426, 1428,    0,
     1427,    0, 1428,    0,    0, 1425,    0, 1426, 1426,    0,
     1427, 1430, 1428, 1429, 1429, 1430, 1431,    0, 1429, 1430,
     1431,    0, 1429, 1432, 1431,    0,    0, 1432,    0, 1430,
        0, 1432, 1429,    0, 1431, 1431, 1433, 1434, 1435,    0,

     1433, 1432,    0,    0, 1433, 1438, 1439,    0, 1434, 1435,
     1434, 1435, 1434, 1435, 1433,    0, 1438, 1439, 1438, 1439,
     1438, 1439, 1440, 1439, 1441, 1442, 1440,    0, 1441, 1442,
     1440, 1443, 1441, 1442,    0, 1443,    0, 1443,    0, 1443,
     1440,    0, 1441, 1442, 1442,    0, 1444,    0, 1445, 1443,
     1444, 1445, 1445,    0, 1444, 1446, 1445, 1444,    0, 1446,
        0,    0, 1446, 1446, 1444,    0, 1445, 1447, 1448, 2965,
     2965, 1447, 1448, 1446, 1448, 1447, 1448,    0, 1450, 1447,
     1449,    0,    0, 1448, 1449, 1447, 1448,    0, 1449, 1450,
        0, 1450, 1451, 1450,    0,    0, 1451,    0, 1449, 1449,

     1451, 1452, 1453, 1454, 1452, 1452,    0, 2965, 2965, 1452,
     1451, 1455, 1456, 1453, 1454, 1453, 1454, 1453, 1454, 1452,
     1457, 1454, 1455, 1456, 1455, 1456, 1455, 1456, 1460, 1456,
     1457, 1457,    0, 1457, 1461, 1457,    0,    0, 1461, 1460,
     1460, 1460, 1461, 1460,    0, 1462, 1463, 1464,    0, 1462,
     1463, 1464, 1461, 1462, 1463, 1464,    0,    0, 1465,    0,
        0, 1464, 1465, 1462, 1463, 1464, 1465, 1469,    0, 1475,
     1470, 1469,    0, 1469, 1470, 1469, 1465,    0, 1470, 1471,
     1475,    0, 1475, 1471, 1475, 1469,    0, 1471, 1470, 1470,
     1472, 1476, 1477, 1472, 1472,    0, 1477, 1471, 1472,    0,

     1477, 1478, 1476, 1471, 1476, 1478, 1476, 1479, 1472, 1478,
     1477, 1479,    0, 1476,    0, 1479, 1480, 1481,    0, 1478,
        0,    0, 1482,    0,    0, 1479, 1479, 1480, 1481, 1480,
     1481, 1480, 1481, 1482, 1483, 1482,    0, 1482, 1483, 1484,
     1485,    0,    0, 1485,    0, 1483, 1486, 1483,    0, 1483,
     1484, 1485, 1484, 1485, 1484, 1485, 1487, 1486,    0, 1486,
        0, 1486, 1491, 1488, 1489, 1489, 1491, 1487,    0, 1487,
     1491, 1487, 1490, 1487, 1488, 1489, 1488, 1489, 1488, 1489,
     1491, 1488, 1492, 1490, 1493, 1490, 1492, 1490,    0,    0,
     1492, 1494, 1495,    0,    0, 1493,    0, 1493, 1499, 1493,

     1492,    0, 1494, 1495, 1494, 1495, 1494, 1495, 1496, 1499,
        0, 1499, 1497, 1499, 1494,    0, 1497, 1496, 1498, 1496,
     1497, 1496, 1498, 1496, 2429, 2429, 1498, 1501, 1500, 1502,
     1497, 1501,    0, 1502,    0, 1501, 1498, 1502, 1498, 1500,
     1500, 1500, 1510, 1500,    0, 1501, 1505, 1502, 1502,    0,
     1505, 2429, 1505, 1510, 1505, 1510,    0, 1510, 1511, 1510,
        0, 1512, 2429, 2429, 1505, 1509, 1509, 1509,    0, 1511,
        0, 1511, 1512, 1511, 1512, 1513, 1512,    0, 1514,    0,
        0, 1511,    0, 1509,    0,    0, 1513, 1513, 1513, 1514,
     1513, 1514, 1515, 1514, 1509,    0, 1509,    0, 1509, 1509,

     1509, 1516,    0, 1515,    0, 1515,    0, 1515,    0, 1518,
     1515,    0, 1516,    0, 1516,    0, 1516, 1517, 1517, 1517,
     1518, 1518, 1518,    0, 1518, 1519, 1519,    0, 1520,    0,
        0,    0,    0,    0, 1521, 1517, 1519,    0, 1519, 1520,
     1519, 1520, 1522, 1520,    0, 1521, 1517, 1521, 1517, 1521,
     1517, 1521, 1524, 1522,    0, 1522, 1524, 1522,    0,    0,
     1524, 1558, 1558, 1558,    0, 1563, 1562, 1562, 1562, 1563,
     1524, 1566, 1566, 1563, 1564,    0,    0, 1565, 1564, 1558,
        0, 1565, 1564, 1563, 1562, 1565, 1566,    0,    0,    0,
     1566, 1558, 1564, 1564, 1566, 1565, 1568, 1565, 1558, 1562,

     1562, 1562, 1567,    0, 1566,    0, 1567, 1568, 1569, 1568,
     1567, 1568, 1569, 1570, 1571,    0, 1569, 1570, 1571, 1571,
     1567, 1570, 1571,    0,    0,    0, 1569,    0,    0, 1572,
     1573, 1570, 1571, 1572, 1573, 1572,    0, 1572, 1573,    0,
     1576, 1574, 1575,    0, 1573, 1574, 1575, 1572, 1573, 1574,
     1575, 1576, 1577, 1576,    0, 1576,    0,    0, 1575, 1574,
     1575, 1578, 1579, 1577,    0, 1577, 1579, 1577, 1580,    0,
     1577,    0, 1578, 1579, 1578, 1579, 1578, 1579, 1581, 1580,
     1580, 1580, 1581, 1580, 1582,    0, 1581,    0,    0,    0,
     1583, 1584,    0,    0,    0, 1582, 1581, 1582, 1586, 1582,

     1583, 1583, 1584, 1583, 1584, 1583, 1584, 1585, 1584, 1586,
        0, 1586, 1585, 1586, 1587,    0,    0, 1586, 1585, 1588,
     1585,    0, 1585,    0, 1589, 1587, 1587, 1587,    0, 1587,
     1588, 1590, 1588,    0, 1588, 1589, 1591, 1589,    0, 1589,
        0, 1592, 1590,    0, 1590,    0, 1590, 1591, 1591, 1591,
     1592, 1591, 1592, 1593, 1592, 1594, 1592, 1595,    0, 1594,
        0, 1595,    0, 1594, 1593, 1595, 1593, 1596, 1593,    0,
        0, 1593,    0, 1594,    0, 1595,    0, 1597, 1596, 1598,
     1596, 1597, 1596, 1598, 1599, 1597, 1598, 1598, 1599,    0,
     1601,    0, 1599,    0,    0, 1597, 1600, 1598, 1599,    0,

     1600, 1601, 1599, 1601, 1600, 1601, 1602, 1603,    0,    0,
     1603,    0,    0, 1604, 1600,    0,    0, 1602, 1603, 1602,
     1603, 1602, 1603, 1602, 1604, 1605, 1604, 1606, 1604, 1605,
     1607, 1606,    0, 1605, 1607, 1606, 1608,    0, 1607, 1608,
     1608,    0, 1609, 1605, 1608, 1606, 1609,    0, 1607, 1611,
     1609, 1610, 1610, 1611, 1608, 1610,    0, 1611, 1612, 1610,
     1609,    0, 1612, 1609, 1613,    0, 1612, 1611, 1613, 1610,
        0, 1614, 1613,    0,    0, 1614, 1612, 1612, 1613, 1614,
     1615, 1616, 1613, 1615, 1615,    0, 1617, 1618, 1615, 1614,
        0, 1618, 1616, 1619, 1616, 1618, 1616, 1617, 1615, 1617,

        0, 1617, 1621, 1620, 1619, 1618, 1619, 1620, 1619, 1622,
        0, 1620, 1622, 1621,    0, 1621,    0, 1621, 1623,    0,
        0, 1620,    0, 1622,    0, 1622, 1624, 1622, 1623, 1623,
        0, 1623,    0, 1623, 1625, 1624,    0, 1624,    0, 1624,
     1626, 1624,    0, 1625,    0, 1625, 1627, 1625,    0, 1625,
        0, 1626, 1628, 1626,    0, 1626,    0, 1627, 1626, 1627,
     1629, 1627, 1630, 1628,    0, 1628, 1630, 1628, 1631,    0,
     1630, 1629, 1631, 1629, 1632, 1629, 1631, 1633, 1632, 1631,
     1630, 1633, 1632, 1635,    0, 1633, 1631, 1635, 1633, 1631,
     1634, 1635, 1632,    0, 1634, 1633, 1634,    0, 1634, 1636,

        0, 1635, 1637, 1636,    0, 1638, 1637, 1636, 1634, 1638,
     1637, 1639,    0, 1638, 1638, 1639,    0, 1636,    0, 1639,
     1637, 1637, 1640, 1638,    0,    0, 1641,    0, 1639, 1639,
     1641,    0,    0, 1640, 1641, 1640,    0, 1640, 1642,    0,
     1643, 1643, 1642, 1640, 1641, 1643, 1642,    0,    0, 1643,
     1642,    0,    0, 1642,    0, 1643, 1642, 1644, 1644, 1643,
     1645, 1646, 1644, 1647, 1645, 1646, 1644, 1647, 1645, 1646,
        0, 1647,    0,    0,    0, 1647, 1644,    0, 1645, 1646,
     1649, 1647, 1650,    0, 1649, 1645, 1650, 1649, 1649,    0,
     1650, 1652, 1651,    0, 1651,    0, 1650, 1653, 1649, 1651,

     1650,    0, 1652,    0, 1652,    0, 1652, 1651, 1653, 1651,
     1653, 1654, 1653, 1651, 1653, 1654, 1655, 1656,    0, 1654,
     1655, 1656, 1651,    0, 1655, 1656,    0, 1655, 1657, 1654,
        0, 1656, 1657, 1658, 1655, 1656, 1657, 1658,    0,    0,
     1659, 1658,    0,    0, 1659,    0, 1657, 1658, 1659,    0,
        0, 1658, 1659, 1660,    0, 1661, 1660, 1660, 1659, 1661,
     1663, 1660,    0, 1661, 1663, 1662, 1662,    0, 1663,    0,
     1662, 1660, 1664, 1661, 1662, 1665, 1664,    0, 1663, 1665,
     1664,    0,    0, 1665, 1662, 1663, 1666, 1667, 1670,    0,
     1664, 1667, 1670, 1665, 1665, 1667, 1670, 1666, 1672, 1666,

     1671, 1666, 1670,    0, 1671, 1667, 1670,    0, 1671, 1672,
     1673, 1672,    0, 1672, 2968, 2968,    0, 1674, 1671, 1675,
     1675, 1673,    0, 1673,    0, 1673, 1676, 1673, 1674, 1674,
     1674, 1675, 1674, 1675, 1679, 1675, 1677, 1676, 1676, 1676,
     1677, 1676, 1678,    0, 1677, 1679, 1678, 1679, 1680, 1679,
     1678, 1681, 2968, 2968, 1677, 1683, 1683,    0,    0, 1680,
     1678, 1680, 1681, 1680, 1681, 1682, 1681, 1683,    0, 1683,
     1682, 1683, 1685, 1684,    0,    0, 1682,    0, 1682, 1686,
     1682, 1684,    0, 1685, 1684, 1685, 1684, 1685, 1684, 1687,
     1686, 1688, 1686, 1687, 1686, 1688, 1689, 1687,    0, 1688,

     1689,    0, 1688, 1938, 1689, 1938,    0, 1687, 1690, 1688,
     1938, 1691, 1690, 1694, 1689, 1691, 1690, 1694, 1938, 1691,
     1938, 1694, 1695, 1696,    0, 1694, 1690,    0, 1697, 1691,
        0, 1694,    0, 1695, 1696, 1695, 1696, 1695, 1696, 1697,
     1698, 1697,    0, 1697, 1702, 1702, 1703,    0,    0,    0,
        0, 1698, 1704, 1698,    0, 1698, 1702, 1703, 1702, 1703,
     1702, 1703, 1705, 1704, 1708, 1704, 1705, 1704, 1708, 1709,
     1705, 1710, 1708, 1709,    0, 1710,    0, 1709,    0, 1710,
     1705,    0, 1708,    0, 1711, 1710, 1712, 1709, 1711, 1710,
     1712, 1714, 1711, 1713, 1712, 1714,    0, 1713,    0, 1714,

        0, 1713, 1711, 1711, 1712, 1715,    0,    0,    0, 1714,
     1712, 1713, 1713, 1716,    0,    0, 1715, 1716, 1715, 1717,
     1715, 1716, 1718, 1717, 1717, 1719, 1718, 1717, 1721, 1719,
     1718, 1716, 1721, 1719, 1720,    0, 1721, 1717, 1720, 1720,
     1718, 1718, 1720, 1719, 1722, 1723, 1721,    0,    0,    0,
        0,    0, 1720,    0,    0, 1722, 1723, 1722, 1723, 1722,
     1723, 1724, 1725, 1726, 1727, 1724, 1725, 1726, 1727, 1724,
     1725, 1726, 1727,    0,    0,    0,    0,    0,    0, 1724,
     1725, 1726, 1727, 1728, 1760, 1729,    0, 1728, 1727, 1729,
     1729, 1728, 1730, 1729,    0, 1760, 1730, 1760,    0, 1760,

     1730, 1728, 1728, 1729, 1731, 1732, 1730, 1731, 1731, 1732,
     1730, 1733, 1731, 1732,    0, 1733, 1736, 1740,    0, 1733,
     1736, 1740, 1731, 1732, 1736, 1740,    0,    0, 1732, 1733,
        0,    0, 1741,    0, 1736, 1740, 1741, 1740, 1742,    0,
     1741, 1743, 1742, 1745, 1744, 1743, 1742, 1745, 1744, 1743,
     1741, 1745, 1744,    0,    0,    0, 1742, 1742, 1744, 1743,
     1746, 1745, 1744, 1747, 1746, 1748, 1749, 1747, 1746, 1748,
     1749, 1747,    0, 1748, 1749,    0,    0,    0, 1746,    0,
     1746, 1747, 1753, 1748, 1749, 1754, 1753, 1755, 1756, 1754,
     1753, 1755, 1756, 1754,    0, 1755, 1756,    0,    0,    0,

     1753,    0, 1753, 1754,    0, 1755, 1756, 1757, 1755, 1758,
     1792, 1757, 1759, 1758, 1792, 1757, 1759, 1758, 1792,    0,
     1759, 1757,    0, 1759,    0, 1757,    0, 1758, 1792, 1793,
     1759, 1796,    0, 1793,    0, 1796,    0, 1793,    0, 1796,
     1797, 1798,    0,    0,    0,    0, 1799, 1793,    0, 1796,
        0, 1797, 1798, 1797, 1798, 1797, 1798, 1799, 1800, 1799,
        0, 1799,    0, 1801,    0,    0,    0,    0, 1801, 1800,
     1802, 1800,    0, 1800, 1801, 1800, 1801, 1803, 1801, 1802,
     1804, 1802,    0, 1802,    0, 1802, 1805,    0, 1803,    0,
     1803, 1804, 1803, 1804, 1803, 1804, 1806, 1805, 1804, 1805,

     1806, 1805, 1807,    0, 1806, 1808,    0, 1809, 1808,    0,
        0, 1809,    0, 1807, 1806, 1807,    0, 1807, 1809, 1808,
     1809, 1808, 1809, 1808, 1810, 1811, 1812,    0, 1810, 1811,
        0, 1813, 1810, 1811, 1813, 1814, 1815, 1812,    0, 1812,
     1815, 1812, 1810, 1811, 1815, 1813, 1814, 1813, 1814, 1813,
     1814, 1816, 1817, 1814, 1815, 1816, 1817, 1818, 1819, 1816,
     1817, 1818, 1819, 1820, 1821, 1818, 1819, 1820, 1821, 1816,
     1817, 1820, 1821, 1816, 1822, 1818, 1819,    0,    0,    0,
     1823, 1820, 1821, 1820, 1823, 1822, 1824, 1822, 1823, 1822,
     1824, 1825, 1826, 1827, 1824, 1825,    0, 1827, 1823, 1825,

        0, 1827, 1828, 1826, 1824, 1826, 1829, 1826,    0, 1825,
     1829, 1827,    0, 1828, 1829, 1828, 1831, 1828, 1830, 1831,
     1832, 1830, 1830, 1832, 1829,    0, 1830, 1833, 1833,    0,
     1831, 1832, 1831, 1832, 1831, 1832, 1830, 1834, 1833,    0,
     1833,    0, 1833, 1835, 1837,    0, 1835,    0, 1834, 1836,
     1834,    0, 1834, 1836, 1835, 1837, 1835, 1837, 1835, 1837,
     1836, 1838, 1836, 1839, 1836, 1838, 1840, 1839, 1846, 1838,
     1840, 1839, 1846,    0, 1840,    0, 1846,    0,    0, 1838,
        0, 1839, 1839, 1841, 1840, 1842, 1846, 1841,    0,    0,
     1840, 1841, 1843,    0,    0,    0, 1842, 1841, 1842, 1844,

     1842, 1841, 1844, 1843,    0, 1843, 1847, 1843, 1845, 1843,
     1847, 1845, 1848, 1844, 1847, 1844, 1848, 1844, 1849, 1845,
     1848, 1845,    0, 1845, 1847, 1850, 1851, 1847,    0, 1849,
     1848, 1849, 1848, 1849,    0,    0, 1850, 1851, 1850, 1851,
     1850, 1851, 1852, 1853, 1854,    0, 1852, 1853, 1854, 1855,
     1852, 1853, 1854, 1855,    0,    0,    0, 1855,    0,    0,
     1852, 1853, 1854, 1854,    0, 1856, 1857, 1855, 1855, 1856,
     1857, 1858, 1859, 1856, 1857, 1858, 1859,    0,    0, 1858,
     1859,    0,    0, 1856, 1857, 1858,    0, 1860, 1861, 1858,
     1859, 1860, 1861,    0, 1860, 1860, 1861,    0,    0, 1861,

     1863, 1864, 1862, 1862, 1863, 1860, 1861, 1862, 1863, 1865,
        0, 1862, 1864, 1865, 1864,    0, 1864, 1865, 1863, 1863,
     1866, 1862, 1867,    0, 1866,    0,    0, 1865, 1866, 1868,
        0,    0,    0, 1867,    0, 1867, 1869, 1867, 1866, 1871,
     1868, 1868, 1868,    0, 1868, 1870, 1869, 1869, 1870, 1869,
     1871, 1869, 1871, 1872, 1871,    0,    0,    0, 1873, 1870,
        0, 1870,    0, 1870, 1872,    0, 1872, 1874, 1872, 1873,
     1873, 1873,    0, 1873,    0, 1875, 1872,    0, 1874, 1875,
     1874,    0, 1874, 1875, 1877,    0, 1876, 1875, 1878, 1875,
     1876, 1876, 1878, 1875, 1876, 1877, 1878, 1877,    0, 1877,

        0, 1879, 1883, 1880, 1876, 1879, 1878, 1880,    0, 1879,
     1881, 1880, 1879, 1883, 1881, 1883, 1882, 1883, 1881, 1879,
     1882, 1880, 1885, 1886, 1882,    0, 1885, 1886, 1881, 1881,
     1885, 1886,    0, 1887, 1882, 1884, 1884,    0,    0, 1884,
     1885, 1886,    0, 1886, 1887,    0, 1887, 1884, 1887, 1884,
     1888, 1884,    0, 1884, 1888, 1884, 1884, 1889, 1888, 1890,
        0, 1889, 1891, 1890,    0, 1889, 1891, 1890, 1888,    0,
     1891,    0,    0,    0, 1892, 1889,    0, 1890, 1892, 1892,
     1891,    0, 1892, 1894, 1893, 1893,    0, 1894,    0, 1893,
     1896, 1894, 1892, 1893, 1896, 1895, 1895,    0, 1896,    0,

     1895, 1894, 1896, 1893, 1895, 1897, 1908, 1898, 1896, 1897,
        0, 1898, 1896, 1897, 1895, 1898, 1899, 1908, 1900, 1908,
     1899, 1908, 1900, 1897, 1899, 1898, 1900,    0,    0,    0,
        0, 1898,    0,    0, 1899, 1902, 1900, 1900, 1903, 1902,
     1904, 1902, 1903, 1902, 1904,    0, 1903, 1905, 1904,    0,
        0, 1905, 1903, 1902,    0, 1905, 1903,    0, 1904, 1906,
     1907,    0,    0, 1906, 1907, 1905,    0, 1906, 1907, 1909,
     1910,    0,    0,    0, 1907,    0,    0, 1906, 1907, 1911,
     1909, 1910, 1909, 1910, 1909, 1910, 1912, 1910, 1911,    0,
     1911, 1913, 1911,    0, 1911,    0,    0, 1912, 1912, 1912,

        0, 1912, 1913, 1913, 1913, 1914, 1913, 1915, 1916, 1914,
     1917, 1915, 1916, 1914, 1917, 1915, 1916,    0, 1917,    0,
        0, 1917,    0, 1914,    0, 1915, 1916, 1915, 1917, 1918,
     1920, 1919,    0, 1918, 1919, 1919,    0, 1918, 1928, 1919,
     1921, 1920, 1928, 1920,    0, 1920, 1928, 1918, 1924, 1919,
        0, 1921,    0, 1921, 1925, 1921, 1928, 1921, 1934, 1924,
     1926, 1924, 1934, 1924,    0, 1925, 1934, 1925, 1927, 1925,
        0, 1926,    0, 1926, 1929, 1926, 1934, 1926,    0, 1927,
     1930, 1927,    0, 1927,    0, 1929, 1931, 1929,    0, 1929,
        0, 1930, 1935, 1930,    0, 1930, 1939, 1931, 1936, 1931,

     1939, 1931,    0, 1935, 1939, 1935, 1937, 1935,    0, 1936,
        0, 1936,    0, 1936, 1939,    0, 1936, 1937, 1937, 1937,
     1941, 1937, 1940, 1940, 1941, 1942, 1943, 1940, 1941, 1942,
     1943, 1940, 1944, 1942, 1943,    0, 1944,    0, 1941,    0,
     1944, 1940, 1945, 1942, 1943, 1946,    0,    0, 1946,    0,
     1944, 1947,    0, 1945,    0, 1945, 1946, 1945, 1946, 1948,
     1946, 1949, 1947, 1948, 1947, 1949, 1947, 1948, 1951, 1949,
     1950,    0, 1951,    0, 1950,    0, 1951, 1948, 1950, 1949,
     1949, 1952, 1950,    0,    0, 1952, 1951, 1951, 1950, 1952,
     1953,    0,    0, 1954, 1953,    0,    0, 1954, 1953, 1952,

     1952, 1954, 1955,    0, 1959, 1956, 1955, 1955, 1953, 1956,
     1955, 1954,    0, 1956, 1957, 1959, 1960, 1959, 1957, 1959,
     1955,    0, 1957, 1956,    0, 1956, 1958, 1960, 1968, 1960,
     1958, 1960, 1957,    0, 1958, 1964, 1964,    0, 1965, 1968,
        0, 1968, 1965, 1968, 1958, 1958, 1965, 1964,    0, 1964,
     1966, 1964, 1969, 1967, 1966,    0, 1965, 1967, 1966, 1970,
        0, 1967, 1972, 1969,    0, 1969,    0, 1969, 1966, 1971,
     1970, 1967, 1970, 1972, 1970, 1972, 1967, 1972, 1973, 1971,
     1971,    0, 1971,    0, 1971, 1977, 1977,    0, 1973, 1973,
     1978, 1973, 1979, 1973, 1978,    0, 1979, 1977, 1978, 1977,

     1979, 1977, 1982, 1980,    0,    0,    0, 1980, 1978, 1980,
     1979, 1980, 1981, 1982, 2010, 1982, 1981, 1982,    0,    0,
     1981, 1980, 2011,    0,    0, 2010,    0, 2010, 2014, 2010,
     1981, 2015,    0, 2011,    0, 2011, 1981, 2011, 2016, 2014,
        0, 2014, 2015, 2014, 2015, 2014, 2015,    0, 2017, 2016,
     2018, 2016, 2017, 2016, 2018, 2016, 2017, 2019, 2018, 2020,
        0, 2019,    0, 2020,    0, 2019, 2017, 2020, 2018, 2021,
     2021,    0,    0, 2020, 2021, 2019, 2019, 2020, 2021, 2022,
     2023, 2023, 2024, 2022,    0, 2023, 2024, 2022, 2021, 2023,
     2024,    0,    0,    0, 2025, 2969, 2969, 2022, 2025, 2023,

     2024, 2024, 2025, 2026, 2026, 2027, 2028, 2026,    0, 2027,
     2028, 2026, 2025, 2027, 2028,    0, 2028, 2033, 2029,    0,
        0, 2026, 2029, 2027, 2028,    0, 2029, 2030, 2033, 2969,
     2033, 2030, 2033, 2969, 2969, 2030, 2029, 2029, 2030, 2031,
     2032, 2031,    0, 2031, 2032, 2030,    0, 2031, 2032, 2034,
     2035, 2032, 2036,    0,    0, 2036, 2037, 2031, 2032, 2035,
     2034, 2035, 2034, 2035, 2034, 2035, 2036, 2037, 2036, 2037,
     2036, 2037, 2038, 2039,    0,    0,    0,    0,    0,    0,
     2041, 2040, 2038, 2038, 2039, 2038, 2039, 2038, 2039, 2040,
     2042, 2041, 2040, 2041, 2040, 2041, 2040, 2041, 2043, 2044,

        0, 2042,    0, 2042, 2045, 2042,    0, 2042,    0, 2043,
     2044, 2043, 2044, 2043, 2044, 2045, 2046, 2045, 2047, 2045,
     2048,    0, 2047, 2048, 2048,    0, 2047, 2046, 2048, 2046,
        0, 2046,    0, 2049, 2050, 2050, 2047, 2049, 2048, 2050,
     2051, 2049, 2052, 2050, 2051,    0, 2052,    0, 2051,    0,
     2052, 2049,    0, 2050, 2054, 2053,    0, 2055, 2051, 2053,
     2052, 2052, 2053, 2053, 2056, 2054,    0, 2054, 2055, 2054,
     2055, 2057, 2055, 2053, 2058, 2056,    0, 2056,    0, 2056,
        0, 2060, 2057,    0, 2057, 2058, 2057, 2058, 2057, 2058,
     2059, 2060, 2060, 2061, 2060, 2059, 2060,    0,    0,    0,

        0, 2059,    0, 2059, 2061, 2059, 2061, 2062, 2061, 2063,
     2061, 2062, 2066, 2063,    0, 2062, 2066, 2063, 2064,    0,
     2066,    0,    0, 2065, 2070, 2062,    0, 2063, 2070, 2064,
     2066, 2064, 2070, 2064, 2065, 2065, 2065, 2067, 2065, 2068,
        0, 2067, 2070, 2069,    0, 2067, 2069,    0, 2067,    0,
     2068,    0, 2068,    0, 2068, 2067, 2071, 2069, 2072, 2069,
     2071, 2069, 2072,    0, 2071,    0, 2072, 2073, 2074,    0,
        0,    0,    0, 2075, 2071,    0, 2072,    0, 2073, 2074,
     2073, 2074, 2073, 2074, 2075, 2078, 2075, 2076, 2075, 2078,
     2076,    0, 2077,    0,    0, 2077, 2078,    0, 2078,    0,

     2078, 2076,    0, 2076,    0, 2076, 2077, 2079, 2077, 2081,
     2077, 2079, 2080, 2080,    0, 2079,    0, 2080,    0, 2082,
     2081, 2080, 2081,    0, 2081, 2079, 2083, 2084,    0,    0,
     2082, 2080, 2082,    0, 2082, 2084,    0, 2083, 2084, 2083,
     2084, 2083, 2084, 2085, 2086, 2087,    0, 2085, 2086, 2087,
     2086, 2085, 2086, 2087,    0,    0, 2088,    0,    0,    0,
     2088, 2085, 2086, 2087, 2088, 2089,    0, 2090, 2091, 2089,
        0, 2090, 2091, 2089, 2088, 2090, 2091,    0,    0, 2089,
        0,    0, 2091, 2089, 2092, 2090, 2091, 2093, 2092, 2092,
        0, 2093, 2092, 2094,    0, 2093, 2095, 2094, 2094, 2093,

     2095, 2094, 2092,    0, 2095, 2093, 2093, 2097, 2096,    0,
     2095, 2094, 2096,    0, 2095, 2099, 2096, 2098, 2097, 2099,
     2097, 2100, 2097, 2099,    0, 2100, 2096, 2096, 2098, 2100,
     2098,    0, 2098, 2099, 2102, 2101, 2101, 2103, 2102, 2100,
     2101, 2103, 2102, 2104, 2101, 2103,    0, 2104,    0, 2105,
        0, 2104, 2102, 2105, 2101, 2103,    0, 2105, 2106,    0,
     2104, 2104, 2106, 2104, 2107, 2108, 2106, 2105, 2107, 2108,
        0,    0, 2107, 2108, 2109, 2110, 2106,    0,    0,    0,
     2111,    0, 2107, 2108,    0, 2109, 2110, 2109, 2110, 2109,
     2110, 2111, 2112, 2111, 2113, 2111, 2112,    0, 2113,    0,

     2112,    0, 2113, 2116, 2114, 2114, 2115, 2115,    0, 2114,
     2112, 2115, 2113, 2114, 2116, 2115, 2116, 2117, 2116, 2428,
     2428,    0,    0, 2114,    0, 2115, 2119, 2118, 2117, 2120,
     2117, 2118, 2117, 2428, 2117, 2118,    0, 2119,    0, 2119,
     2120, 2119, 2120, 2121, 2120, 2118,    0, 2121, 2123, 2122,
     2123, 2121,    0,    0,    0, 2123,    0, 2428, 2428,    0,
     2122, 2121, 2122, 2123, 2122, 2123, 2124, 2124, 2125, 2127,
        0, 2124, 2125,    0,    0, 2124, 2125, 2128, 2129,    0,
     2127,    0, 2127, 2130, 2127, 2124, 2125,    0, 2128, 2129,
     2128, 2129, 2128, 2129, 2130, 2129, 2130, 2131, 2130,    0,

     2132,    0,    0, 2133,    0,    0,    0,    0, 2131, 2134,
     2131, 2132, 2131, 2132, 2133, 2132, 2133,    0, 2133, 2135,
     2134, 2132, 2134, 2135, 2134, 2136, 2137, 2135,    0, 2136,
     2137, 2139, 2137, 2136, 2137, 2139, 2139, 2135, 2138, 2139,
        0, 2138, 2138, 2136, 2137, 2136, 2138, 2140,    0, 2139,
     2141, 2140,    0,    0, 2141, 2140, 2138,    0, 2141, 2142,
        0,    0,    0, 2142,    0, 2140, 2143, 2142, 2141,    0,
     2143, 2142, 2143,    0, 2143, 2144,    0, 2142, 2147, 2144,
     2151, 2148, 2147, 2144, 2143, 2148, 2147, 2149,    0, 2148,
        0, 2149, 2147, 2144,    0, 2149, 2147, 2150, 2151, 2148,

        0, 3098, 3098, 2152,    0, 2149, 3143, 3143, 2150, 2151,
     2150, 2151, 2150, 2151, 2152, 2152, 2152, 2153, 2152, 2157,
     2154,    0,    0, 2157,    0,    0,    0, 2157, 2153, 2153,
     2153, 2154, 2153, 2154, 2158, 2154, 2159, 2157, 2158, 3098,
     3098,    0, 2158, 2160, 3143, 3143,    0, 2159, 2158, 2159,
        0, 2159, 2158, 2164, 2160, 2165, 2160,    0, 2160, 2165,
        0, 2167, 2160, 2165, 2164, 2164, 2164, 2166, 2164, 2168,
        0, 2166, 2167, 2165, 2167, 2166, 2167,    0,    0, 2166,
     2168,    0, 2168, 2169, 2168, 2166,    0, 2169, 2170, 2171,
     2168, 2169, 2170, 2171, 2172,    0, 2170, 2171, 2172,    0,

     2173, 2169, 2172,    0,    0, 2174, 2170, 2171, 2174,    0,
        0, 2173, 2172, 2173,    0, 2173, 2174, 2175, 2174, 2176,
     2174, 2175, 2177, 2176, 2178, 2175, 2177, 2176, 2178,    0,
     2177,    0, 2178, 2179, 2180, 2175,    0, 2176,    0, 2181,
     2177,    0, 2178,    0, 2179, 2180, 2179, 2180, 2179, 2180,
     2181, 2182, 2181,    0, 2181, 2182, 2183, 2181, 2970, 2970,
        0,    0, 2182,    0, 2182,    0, 2182, 2183, 2185, 2183,
     2186, 2183, 2185, 2187, 2186, 2188, 2185, 2187, 2186, 2188,
        0, 2187,    0, 2188, 2186, 2970, 2185,    0, 2186, 2190,
     2189, 2187, 2187, 2188, 2189, 2188, 2970, 2970, 2189, 2191,

     2190,    0, 2190,    0, 2190, 2192,    0,    0, 2189,    0,
     2191, 2191, 2191, 2196, 2191, 2194, 2192, 2192, 2192, 2194,
     2192, 2195,    0, 2194, 2196, 2195, 2196, 2197, 2196, 2195,
     2198,    0,    0, 2194,    0, 2195,    0,    0, 2197, 2195,
     2197, 2198, 2197, 2198, 2199, 2198, 2225, 2225, 2199, 2226,
     2227, 2225, 2199, 2226, 2227, 2225, 2228, 2226, 2227,    0,
     2228,    0, 2199,    0, 2228, 2225, 2229, 2226, 2227, 2230,
        0, 2230, 2231,    0, 2228,    0,    0, 2229, 2232, 2229,
     2232, 2229, 2230, 2231, 2230, 2231, 2230, 2231, 2233, 2231,
     2234, 2232, 2233, 2232, 2234, 2232, 2233, 2235, 2234, 2236,

        0, 2235,    0,    0,    0, 2235, 2233, 2237, 2234, 2238,
     2236, 2235, 2236, 2238, 2236, 2235,    0, 2238, 2237,    0,
     2237, 2239, 2237,    0, 2240, 2239, 2241, 2238, 2240, 2239,
     2241,    0, 2240,    0, 2241, 2240,    0, 2242,    0, 2239,
     2241, 2242, 2240, 2243, 2241, 2242, 2244, 2243, 2242, 2245,
     2244, 2243, 2252, 2245, 2244, 2242, 2252, 2245,    0,    0,
     2252, 2243, 2243,    0, 2244, 2246,    0, 2245, 2247, 2246,
     2252, 2247, 2247, 2246, 2248,    0, 2247, 2246,    0, 2249,
     2250,    0,    0, 2246,    0, 2248, 2247, 2248, 2251, 2248,
     2249, 2250, 2249, 2250, 2249, 2250, 2253, 2255, 2254, 2251,

     2253, 2251, 2254, 2251, 2253, 2256, 2254, 2257, 2255, 2256,
     2255,    0, 2255, 2256, 2253, 2259, 2254,    0, 2257,    0,
     2257,    0, 2257, 2256, 2258, 2258, 2259,    0, 2259,    0,
     2259, 2260, 2261, 2262,    0,    0, 2258, 2262, 2258,    0,
     2258, 2262, 2260, 2261, 2260, 2261, 2260, 2261, 2263, 2261,
     2264, 2262, 2263,    0, 2264,    0, 2263, 2264, 2264, 2265,
     2270, 2266,    0, 2265,    0, 2266, 2263, 2265, 2264, 2266,
     2265, 2270, 2267, 2270, 2268, 2270, 2267, 2265, 2268, 2266,
     2267,    0, 2268, 2269, 2271, 2272, 2267, 2269,    0,    0,
     2267, 2269, 2268,    0, 2269, 2271, 2272, 2271, 2272, 2271,

     2272, 2269, 2273, 2274, 2275,    0, 2273, 2274, 2275,    0,
     2273, 2274, 2275,    0,    0, 2276,    0, 2276, 2276, 2276,
     2273, 2274, 2275, 2276, 2277, 2292, 2278, 2279, 2277, 2278,
     2278, 2279, 2277, 2276, 2278, 2279, 2292,    0, 2292,    0,
     2292,    0, 2277,    0, 2278, 2279, 2280, 2277, 2281, 2281,
     2280, 2282, 2282, 2281, 2280, 2283, 2282, 2281,    0, 2283,
     2282, 2284,    0, 2283, 2280, 2280,    0, 2281,    0, 2283,
     2282, 2284, 2284, 2283, 2284, 2285, 2284, 2286, 2287, 2285,
        0, 2286, 2287, 2285, 2289, 2286, 2287,    0, 2289, 2288,
     2288,    0, 2289, 2285, 2288, 2286, 2287, 2290, 2288,    0,

        0, 2290, 2289, 2289,    0, 2290, 2291,    0, 2288, 2293,
     2291,    0, 2295, 2293, 2291, 2290, 2295, 2293, 2294,    0,
     2295, 2296, 2294, 2294, 2291, 2296, 2294, 2293,    0, 2296,
     2295,    0,    0, 2297,    0,    0, 2294, 2297,    0, 2296,
     2296, 2297, 2298,    0,    0, 2298, 2298,    0,    0, 2299,
     2298, 2297, 2297, 2299, 2299, 2300,    0, 2299, 2301, 2300,
     2298,    0, 2301, 2300, 2302,    0, 2301, 2299, 2302, 2300,
     2303, 2304, 2302, 2300, 2303, 2304, 2301,    0, 2303, 2304,
        0,    0, 2302,    0,    0, 2305, 2305,    0, 2303, 2304,
     2305, 2306, 2307, 2308, 2305, 2306, 2307, 2308, 2306, 2306,

     2307, 2308, 2307, 2310, 2305,    0,    0,    0,    0, 2306,
     2307, 2308, 2308, 2309, 2310, 2311, 2310, 2309, 2310, 2311,
     2312, 2309,    0, 2311, 2312,    0, 2313,    0, 2312,    0,
        0, 2309, 2314, 2311, 2312,    0, 2314, 2313, 2312, 2313,
     2314, 2313,    0, 2315, 2320, 2316,    0, 2315, 2315, 2316,
     2314, 2315, 2318, 2316, 2317, 2320, 2318, 2320, 2317, 2320,
     2318, 2315, 2317, 2316,    0, 2317,    0, 2319, 2323, 2323,
     2318, 2319, 2317,    0, 2321, 2319, 2322, 2319, 2321,    0,
     2322,    0, 2321, 2323, 2322, 2319,    0, 2323,    0,    0,
     2322, 2323, 2321,    0, 2322, 2324, 2325,    0,    0, 2324,

     2325, 2323,    0, 2324, 2325,    0, 2323, 2323, 2326,    0,
        0,    0, 2326, 2324, 2325, 2327, 2326, 2328, 2327, 2327,
     2329, 2328,    0, 2327, 2329, 2328, 2326,    0, 2329, 2328,
     2331,    0,    0, 2327,    0, 2328, 2330,    0, 2329,    0,
     2330, 2331, 2330, 2331, 2330, 2331,    0, 2332, 2333,    0,
        0, 2332, 2333, 2334, 2330, 2332, 2333, 2334,    0,    0,
     2335, 2334,    0, 2335, 2335, 2332, 2333, 2333, 2335, 2336,
     2338, 2334, 2337, 2336,    0,    0, 2337, 2336, 2335,    0,
     2337, 2338, 2339, 2338, 2340, 2338,    0, 2336, 2340,    0,
     2337, 2337, 2340, 2339, 2341, 2339,    0, 2339,    0, 2342,

     2343,    0, 2340,    0, 2343, 2341,    0, 2341, 2343, 2341,
     2342, 2344, 2342, 2345, 2342, 2344, 2344, 2345, 2343, 2344,
     2346, 2345, 2347,    0, 2346,    0,    0,    0, 2346, 2344,
     2350, 2345,    0, 2347,    0, 2347, 2354, 2347, 2346, 2351,
     2354, 2350,    0, 2350, 2352, 2350,    0, 2354, 2351, 2354,
     2351, 2354, 2351, 2358, 2351, 2352, 2352, 2352, 2355, 2352,
        0,    0, 2355,    0, 2358, 2358, 2358, 2360, 2358, 2355,
        0, 2355,    0, 2355, 2359, 2359,    0, 2361, 2360,    0,
     2360,    0, 2360, 2365,    0, 2359, 2360, 2359, 2361, 2359,
     2361, 2362, 2361, 2366, 2365, 2362, 2365,    0, 2365, 2362,

     2367, 2368, 2366,    0, 2366,    0, 2366, 2369, 2366, 2362,
        0, 2367, 2368, 2367, 2368, 2367, 2368, 2370, 2369, 2371,
     2369, 2370, 2369,    0, 2369, 2370, 2372,    0,    0,    0,
     2371,    0, 2371,    0, 2371, 2370, 2373, 2372, 2374, 2372,
     2373, 2372,    0,    0, 2373, 2375,    0,    0,    0, 2374,
     2376, 2374,    0, 2374, 2373, 2377, 2375, 2375, 2375,    0,
     2375, 2376, 2376, 2376, 2378, 2376, 2377, 2379, 2377,    0,
     2377,    0,    0,    0,    0, 2378,    0, 2378, 2379, 2378,
     2379, 2380, 2379, 2382, 2383, 2380,    0, 2382, 2383, 2380,
     2384, 2382, 2383,    0, 2384,    0, 2385,    0, 2384, 2380,

        0, 2382, 2383,    0, 2383,    0, 2386, 2385, 2384, 2385,
     2386, 2385, 2387, 2388, 2386,    0, 2387, 2388, 2390, 2391,
     2387, 2388, 2390, 2391, 2386,    0, 2390, 2391,    0, 2392,
     2387, 2388,    0, 2387, 2388, 2416, 2390, 2391, 2416, 2391,
     2392, 2393, 2392, 2394, 2392, 2393, 2416, 2394, 2416, 2393,
     2416, 2394, 2417, 2417, 2394, 2418, 2422,    0, 2419, 2393,
     2422, 2394,    0, 2417, 2422, 2417, 2418, 2417, 2418, 2419,
     2418, 2419, 2420, 2419, 2422, 2421, 2424,    0,    0, 2421,
     2424, 2420, 2424, 2420, 2424, 2420, 2421, 2420, 2421, 2423,
     2421, 2425,    0, 2423, 2424, 2425,    0, 2423,    0, 2425,

     2423, 2426, 2430,    0, 2431, 2425, 2430, 2423,    0, 2425,
     2430,    0, 2426, 2432, 2426, 2431, 2426, 2431, 2433, 2431,
     2430,    0, 2432,    0, 2432,    0, 2432,    0, 2432, 2433,
     2434, 2433, 2435, 2433, 2434, 2436, 2435, 2437, 2434, 2436,
     2435, 2437,    0, 2436,    0, 2437, 2435,    0, 2434,    0,
     2435,    0, 2438, 2436, 2439, 2437, 2438,    0, 2439, 2440,
     2438,    0, 2439, 2440, 2438, 2439, 2442, 2440, 2441, 2442,
     2438,    0, 2439,    0,    0,    0,    0, 2440,    0, 2441,
     2442, 2441, 2442, 2441, 2442, 2443, 2444, 2445,    0, 2443,
     2444, 2445,    0, 2443, 2444, 2445, 2446, 2447, 2448,    0,

        0,    0, 2448, 2443, 2444, 2445, 2448, 2446, 2447, 2446,
     2447, 2446, 2447, 2450, 2449,    0, 2448, 2449, 2449,    0,
     2451, 2452, 2449,    0, 2450, 2452, 2450,    0, 2450, 2452,
     2453, 2451, 2449, 2451, 2453, 2451, 2454, 2451, 2453, 2452,
     2454,    0, 2455, 2456, 2454,    0, 2455, 2456, 2453, 2453,
     2455, 2456,    0,    0, 2454, 2457,    0, 2459, 2458, 2457,
     2455, 2456, 2458, 2457, 2460,    0, 2458, 2461, 2459, 2457,
     2459, 2462, 2459, 2457, 2462, 2460, 2458, 2460, 2461, 2460,
     2461, 2460, 2461, 2465, 2463, 2462, 2465, 2462, 2463, 2462,
     2464, 2464,    0,    0, 2465, 2463, 2465, 2463, 2465, 2463,

     2466, 2464, 2467, 2464,    0, 2464, 2467,    0, 2468,    0,
     2467, 2466, 2466, 2466, 2470, 2466, 2467, 2469,    0, 2468,
     2467, 2468,    0, 2468, 2471, 2470, 2469, 2470, 2469, 2470,
     2469, 2470, 2469, 2471, 2473, 2471,    0, 2471, 2472, 2471,
        0, 2472, 2475, 2473, 2476, 2473, 2475, 2473, 2474, 2473,
     2475, 2474, 2472,    0, 2472, 2476, 2472, 2476, 2477, 2476,
     2475,    0, 2474, 2478, 2474,    0, 2474,    0, 2478, 2477,
     2477, 2477,    0, 2477, 2478, 2479, 2478, 2480, 2478, 2479,
     2481, 2480, 2482, 2479, 2481, 2480, 2482,    0, 2481,    0,
     2482, 2483,    0, 2479,    0, 2480, 2482, 2484, 2481, 2485,

     2482, 2484, 2483,    0, 2483, 2484, 2483, 2486,    0,    0,
     2485,    0, 2485,    0, 2485, 2484, 2487, 2487, 2486, 2486,
     2486,    0, 2486,    0, 2488, 2489, 2489, 2487, 2488, 2487,
     2489, 2487, 2488, 2490, 2489, 2491,    0, 2490,    0, 2491,
        0, 2490, 2488, 2491, 2489,    0, 2492, 2494,    0,    0,
     2492, 2490,    0, 2491, 2492, 2493, 2492, 2495, 2494, 2493,
     2494, 2496, 2494, 2493, 2492, 2496, 2493, 2497, 2495, 2496,
     2495, 2497, 2495, 2493, 2498, 2497, 2499,    0, 2498, 2496,
     2499,    0, 2498, 2500, 2499, 2497,    0, 2500,    0,    0,
        0, 2500, 2498, 2498, 2499, 2501, 2499,    0,    0, 2501,

     2502, 2500, 2500, 2501, 2502,    0, 2503,    0, 2502, 2501,
        0, 2504, 2507, 2501,    0,    0,    0, 2503, 2502, 2503,
     2508, 2503, 2504, 2507, 2504, 2507, 2504, 2507, 2510, 2504,
        0, 2508, 2510, 2508, 2509, 2508, 2511, 2509,    0, 2510,
     2511, 2510, 2512, 2510, 2511, 2509,    0, 2509, 2513, 2509,
     2515, 2513,    0, 2512, 2511, 2512, 2514, 2512,    0, 2514,
        0, 2515, 2513, 2515, 2513, 2515, 2513, 2516,    0, 2517,
     2514, 2516, 2514, 2517, 2514, 2516, 2518, 2517, 2520,    0,
     2518, 2517, 2520,    0, 2518, 2516, 2520, 2517, 2519, 2519,
     2521, 2523,    0, 2519, 2518,    0, 2520, 2519, 2522,    0,

        0, 2521, 2523, 2521, 2523, 2521, 2523, 2519, 2523, 2522,
     2522, 2522, 2524, 2522, 2525,    0, 2524, 2527, 2525,    0,
     2524, 2527, 2525, 2526,    0, 2527,    0,    0,    0, 2528,
     2524,    0, 2525, 2528, 2526, 2527, 2526, 2528, 2526,    0,
     2529, 2528, 2530,    0, 2529, 2533, 2530, 2528, 2529, 2533,
     2530,    0,    0, 2533,    0,    0, 2537, 2534, 2529, 2529,
     2530, 2534, 2535, 2533,    0, 2534, 2535, 2537, 2535, 2537,
     2535, 2537, 2538, 2541,    0, 2534,    0,    0, 2542,    0,
     2535,    0,    0, 2538, 2541, 2538, 2541, 2538, 2541, 2542,
     2542, 2542, 2541, 2542, 2543, 2544, 2545,    0, 2543, 2544,

        0,    0, 2543, 2544, 2548, 2549, 2550, 2545,    0, 2545,
     2550, 2545, 2543, 2544, 2550, 2548, 2549, 2548, 2549, 2548,
     2549, 2551, 2552,    0, 2550, 2551, 2552, 2553,    0, 2551,
     2552, 2553, 2551, 2553, 2554, 2553,    0,    0, 2554, 2551,
     2552,    0, 2554, 2555,    0, 2553,    0, 2555,    0, 2556,
        0, 2555, 2554, 2554, 2557, 2558,    0, 2555,    0,    0,
     2556, 2555, 2556,    0, 2556, 2557, 2558, 2557, 2558, 2557,
     2558, 2559, 2560, 2562,    0, 2559, 2560,    0,    0, 2559,
     2560, 2563,    0,    0, 2562,    0, 2562,    0, 2562, 2559,
     2560, 2560, 2563, 2563, 2563, 2564, 2563, 2565, 2566, 2564,

     2567, 2565, 2566, 2564, 2567, 2565, 2566,    0, 2567, 2569,
        0,    0,    0, 2564,    0, 2565, 2566, 2570, 2567, 2571,
     2569, 2570, 2569, 2571, 2569, 2570, 2572, 2571, 2589,    0,
     2572, 2571, 2589,    0, 2572, 2570, 2589, 2571,    0, 2590,
     2592, 2591,    0, 2590, 2572, 2591, 2589, 2590, 2589, 2591,
        0, 2592, 2594, 2592,    0, 2592,    0, 2590, 2595, 2591,
     2593, 2593, 2598, 2594, 2594, 2594, 2598, 2594, 2597, 2595,
     2598, 2595, 2593, 2595, 2593,    0, 2593, 2596, 2596, 2597,
     2598, 2597, 2599, 2597, 2600,    0, 2599,    0, 2600, 2596,
     2599, 2596, 2600, 2596,    0, 2601, 2611, 2602, 2600, 2601,

     2599, 2602, 2600, 2601, 2602, 2602,    0, 2611, 2603, 2611,
        0, 2611, 2603, 2601, 2601, 2602, 2603, 2604,    0,    0,
     2604, 2604, 2603,    0, 2605, 2604, 2603, 2605, 2605, 2606,
     2606,    0, 2605, 2607, 2606, 2604, 2608, 2607, 2606, 2609,
     2608, 2607, 2605, 2609, 2608, 2610,    0, 2609, 2606, 2610,
        0, 2607,    0, 2610, 2608, 2608, 2612, 2609, 2609, 2612,
     2613,    0, 2614, 2610,    0, 2614,    0,    0,    0,    0,
     2612, 2613, 2612, 2613, 2612, 2613, 2614, 2613, 2614, 2615,
     2614, 2616, 2617, 2615,    0, 2616, 2617, 2615, 2616, 2616,
     2617,    0,    0, 2621, 2618,    0,    0, 2615, 2618, 2616,

     2617, 2619, 2618, 2620, 2621, 2619, 2621, 2620, 2621, 2619,
        0, 2620, 2618, 2618, 2622, 2623,    0,    0,    0, 2619,
     2624, 2620, 2620,    0,    0, 2622, 2623, 2622, 2623, 2622,
     2623, 2624, 2623, 2624, 2625, 2624, 2626, 2627, 2625,    0,
     2626, 2627, 2625,    0, 2626, 2627,    0, 2626,    0, 2628,
        0,    0, 2625, 2628, 2626, 2627, 2629, 2628, 2630,    0,
     2629, 2629, 2630,    0, 2629, 2631, 2630, 2628,    0, 2631,
        0,    0,    0, 2631, 2629,    0, 2630, 2632, 2633, 2630,
     2632, 2632, 2633, 2631,    0, 2632, 2633,    0, 2634, 2634,
     2636,    0,    0, 2634, 2636, 2632, 2633, 2634, 2636,    0,

        0, 2637, 2637,    0,    0, 2637,    0, 2634, 2636, 2637,
        0, 2638, 2638, 2639,    0,    0, 2638,    0,    0, 2637,
     2638,    0,    0, 2639, 2639, 2640, 2639,    0, 2639,    0,
     2638, 2641, 2642, 2639, 2640,    0, 2640, 2643, 2640,    0,
     2640,    0, 2641, 2642, 2641, 2642, 2641, 2642, 2643, 2645,
     2643, 2644, 2643, 2646, 2644, 2647,    0, 2646,    0, 2647,
     2645, 2646, 2645, 2647, 2645, 2644, 2648, 2644,    0, 2644,
        0, 2646, 2649, 2647, 2647, 2650,    0, 2648,    0, 2648,
     2651, 2648,    0, 2649,    0, 2649, 2650, 2649, 2650, 2649,
     2650, 2651, 2650, 2651, 2652, 2651, 2653, 2653, 2652, 2654,

     2655, 2653, 2652, 2654, 2655, 2653,    0, 2654, 2655,    0,
        0,    0, 2652,    0, 2655, 2653,    0, 2654, 2655, 2656,
     2654, 2657, 2657, 2656, 2658, 2659, 2657, 2656, 2658, 2659,
     2657, 2660, 2658, 2659,    0, 2660,    0, 2656, 2656, 2660,
     2657,    0, 2658, 2659, 2659, 2661, 2661, 2662, 2663, 2660,
     2661, 2662, 2663, 2664, 2661, 2662, 2663, 2664,    0, 2665,
        0, 2664,    0,    0, 2661, 2662, 2663, 2668,    0, 2666,
     2665, 2664, 2665, 2666, 2665, 2667,    0, 2666, 2668, 2667,
     2668, 2671, 2668, 2667, 2671,    0,    0, 2666,    0, 2673,
        0, 2672, 2671, 2667, 2671, 2672, 2671, 2674,    0, 2672,

     2673, 2674, 2673, 2675, 2673, 2674,    0, 2675, 2675, 2672,
        0, 2675, 2676, 2677, 2677, 2674, 2676, 2676, 2677, 2678,
     2676, 2675, 2677, 2678,    0, 2679,    0, 2678,    0, 2679,
     2676, 2680, 2677, 2679, 2681, 2680, 2680, 2678, 2681, 2680,
     2682,    0, 2681, 2679, 2682,    0, 2683, 2684, 2682, 2680,
     2683, 2684, 2681, 2684, 2683, 2684,    0,    0, 2682, 2685,
     2683, 2682, 2686, 2685, 2683, 2684, 2686, 2685, 2688,    0,
     2686, 2687, 2688,    0,    0, 2687, 2688, 2685,    0, 2687,
     2686, 2689, 2688, 2687,    0,    0, 2688, 2690,    0, 2687,
     2691,    0, 2689,    0, 2689,    0, 2689,    0, 2690, 2690,

     2690, 2691, 2690, 2691, 2692, 2691, 2695,    0, 2692,    0,
        0,    0, 2692, 2696, 2697,    0,    0, 2695,    0, 2695,
        0, 2695, 2692,    0, 2696, 2697, 2696, 2697, 2696, 2697,
     2696, 2699, 2700, 2701, 2702, 2699, 2700, 2701, 2702, 2699,
     2700, 2701, 2702, 2703,    0,    0,    0,    0, 2704, 2699,
     2700, 2701, 2702, 2705, 2703, 2702, 2703,    0, 2703, 2704,
     2704, 2704, 2706, 2704, 2705, 2707, 2705,    0, 2705,    0,
     2707, 2708, 2709, 2706,    0, 2706, 2707, 2706, 2707,    0,
     2707,    0, 2708, 2709, 2708, 2709, 2708, 2709, 2710, 2714,
     2711, 2712, 2710,    0, 2711, 2712, 2710, 2711, 2711, 2712,

     2714, 2715, 2714, 2712, 2714,    0, 2710, 2713, 2711, 2712,
        0, 2713, 2715, 2716, 2715, 2713, 2715,    0, 2718, 2719,
        0,    0,    0,    0, 2716, 2713, 2716,    0, 2716, 2718,
     2719, 2718, 2719, 2718, 2719, 2720, 2721,    0, 2719,    0,
        0,    0, 2722, 2723,    0,    0, 2720, 2721, 2720, 2721,
     2720, 2721, 2720, 2722, 2723, 2722, 2723, 2722, 2723, 2725,
     2726, 2726,    0,    0,    0, 2727,    0,    0, 2745,    0,
     2725, 2726, 2725, 2726, 2725, 2726, 2727, 2727, 2727, 2745,
     2727, 2745, 2746, 2745,    0, 2746,    0, 2747, 2748,    0,
        0,    0, 2747, 2746, 2749, 2746,    0, 2746, 2747, 2748,

     2747, 2748, 2747, 2748,    0, 2749, 2750, 2749,    0, 2749,
        0, 2750, 2751, 2752,    0, 3099, 3099, 2750, 2753, 2750,
        0, 2750,    0, 2751, 2752, 2751, 2752, 2751, 2752, 2753,
     2754, 2753, 2755, 2753, 2756,    0, 2755,    0, 2756,    0,
     2755, 2754, 2756, 2754, 2757, 2754,    0, 2758,    0, 3099,
     2755,    0, 2756, 3099, 3099, 2757,    0, 2757, 2758, 2757,
     2758, 2759, 2758, 2760,    0, 2759, 2761, 2760, 2762, 2759,
     2761, 2760, 2762,    0, 2761,    0, 2762,    0,    0, 2759,
        0, 2760, 2760, 2763, 2761, 2761, 2762, 2763,    0, 2764,
     2763, 2763,    0,    0,    0, 2765,    0,    0,    0,    0,

     2764, 2763, 2764, 2765, 2764, 2766, 2765, 2767, 2765, 2766,
     2765, 2767,    0, 2766,    0, 2767, 2768, 2769, 2770,    0,
        0,    0, 2770, 2766,    0, 2767, 2770, 2768, 2769, 2768,
     2769, 2768, 2769, 2771, 2772, 2773, 2770, 2771,    0,    0,
        0, 2771, 2774,    0,    0, 2772, 2773, 2772, 2773, 2772,
     2773, 2771, 2775, 2774,    0, 2774, 2775, 2774, 2776, 2776,
     2775, 2778,    0, 2776, 2777, 2777,    0, 2776,    0, 2777,
     2775, 2779, 2778, 2777, 2778, 2779, 2778, 2776,    0, 2779,
     2780, 2781, 2782, 2777,    0,    0, 2782,    0,    0, 2779,
     2782, 2780, 2781, 2780, 2781, 2780, 2781, 2783, 2784, 2785,

     2782, 2783, 2784, 2785,    0, 2783, 2784, 2785, 2784, 2797,
     2786,    0,    0, 2786, 2786, 2783, 2784, 2785, 2786, 2787,
     2797, 2788, 2797, 2787, 2797, 2788,    0, 2787, 2786, 2788,
     2787,    0, 2789, 2788,    0,    0, 2789, 2787,    0, 2788,
     2789,    0,    0,    0, 2790,    0, 2789, 2790, 2790, 2790,
     2789, 2791, 2790, 2792,    0, 2791, 2793, 2792,    0, 2791,
     2793, 2792, 2790,    0, 2793, 2791,    0,    0, 2794, 2791,
        0, 2792, 2794, 2796, 2793,    0, 2794, 2796, 2795, 2795,
        0, 2796,    0, 2795,    0, 2796, 2794, 2795, 2798, 2799,
        0, 2796,    0,    0, 2799, 2801,    0, 2795, 2800, 2798,

     2799, 2798, 2799, 2798, 2799, 2798, 2801, 2800, 2801, 2800,
     2801, 2800, 2802, 2800, 2803, 2802, 2804, 2805, 2803, 2806,
     2804, 2805, 2803, 2806, 2804, 2805, 2802, 2806, 2802,    0,
     2802,    0, 2803,    0, 2804, 2805, 2805, 2806, 2807,    0,
     2808,    0, 2807, 2808, 2817,    0, 2807, 2809, 2817,    0,
     2809, 2808, 2817, 2808, 2811, 2808, 2807, 2811, 2807, 2808,
     2808, 2809, 2817, 2809,    0, 2809, 2810, 2810, 2811,    0,
     2811,    0, 2811, 2812, 2813,    0,    0, 2810,    0, 2810,
     2814, 2810,    0, 2812, 2812, 2813, 2812, 2813, 2812, 2813,
     2815, 2814,    0, 2814, 2818, 2814, 2816,    0, 2818, 2819,

     2819, 2815, 2818, 2815, 2819, 2815, 2820, 2816, 2819, 2816,
     2820, 2816, 2818, 2821, 2820, 2822,    0, 2821, 2819, 2822,
        0, 2821, 2823, 2822, 2820,    0, 2823,    0, 2824,    0,
     2823, 2821, 2824, 2822, 2826,    0, 2824,    0, 2826, 2823,
     2823, 2823, 2826, 2825,    0, 2828, 2824, 2825,    0, 2827,
     2825, 2825, 2826, 2827,    0, 2827, 2828, 2827, 2828, 2829,
     2828, 2825,    0,    0,    0,    0, 2830, 2827,    0, 2831,
     2829,    0, 2829,    0, 2829,    0, 2829, 2830, 2830, 2830,
     2831, 2830, 2831, 2832, 2831,    0, 2833,    0, 2831,    0,
        0, 2834, 2837,    0, 2832,    0, 2832, 2833, 2832, 2833,

     2834, 2833, 2834, 2837, 2834, 2837, 2834, 2837, 2838, 2837,
     2839, 2841, 2838, 2842, 2839, 2841, 2838, 2842, 2839, 2841,
        0, 2842, 2843, 2841,    0, 2842, 2838,    0, 2839, 2841,
     2844, 2842, 2845, 2843, 2844, 2843,    0, 2843, 2844, 2846,
        0,    0,    0, 2845,    0, 2845,    0, 2845, 2844, 2847,
     2846, 2848, 2846, 2847, 2846, 2848, 2849, 2847, 2846, 2848,
     2849,    0, 2850,    0, 2849, 2848, 2850, 2847, 2851, 2848,
     2850, 2852, 2851,    0, 2849, 2852, 2851,    0,    0, 2852,
     2850, 2850,    0,    0, 2855,    0, 2851, 2851, 2853, 2852,
     2854,    0, 2853, 2853, 2854, 2855, 2853, 2855, 2854, 2855,

        0,    0,    0, 2856,    0,    0, 2853, 2856, 2854, 2854,
     2857, 2856, 2858,    0, 2857, 2859, 2858,    0, 2857, 2859,
     2858, 2856,    0, 2859, 2860, 2861,    0,    0, 2857, 2859,
     2858,    0,    0, 2859,    0, 2860, 2861, 2860, 2861, 2860,
     2861, 2862, 2863, 2864,    0, 2862, 2863, 2864,    0, 2862,
     2863, 2864, 2878,    0, 2880, 2879,    0,    0, 2880, 2862,
     2863, 2864, 2880, 2878, 2864, 2878, 2879, 2878, 2879,    0,
     2879, 2882, 2880, 2881, 2881, 2882, 2883, 2884, 2881, 2882,
     2883, 2884, 2881, 2885, 2883, 2884,    0, 2885,    0, 2882,
        0, 2885, 2881,    0, 2883, 2884, 2886,    0,    0, 2887,

     2886, 2885, 2885, 2887, 2886, 2888,    0, 2887, 2890, 2888,
        0, 2891, 2890, 2888, 2886, 2891, 2890, 2887,    0, 2891,
     2892,    0,    0, 2888, 2892,    0, 2890, 2893, 2892, 2891,
        0, 2893, 2895, 2894,    0, 2893, 2895, 2894, 2892, 2894,
     2895, 2894,    0, 2906, 2896, 2893,    0,    0, 2896, 2897,
     2895, 2894, 2896, 2897, 2906, 2898, 2906, 2897, 2906, 2898,
        0, 2899, 2896, 2898, 2896, 2899, 2900, 2897, 2901, 2899,
     2900,    0, 2901, 2898, 2900,    0, 2901, 2902,    0, 2899,
        0, 2902,    0,    0, 2900, 2902, 2901,    0, 2901, 2903,
     2904, 2903, 2904, 2903, 2904, 2902, 2902, 2903, 2904, 2907,

     2908, 2905,    0,    0,    0, 2905,    0, 2903, 2904, 2905,
     2907, 2908, 2907, 2908, 2907, 2908, 2910, 2908, 2909, 2905,
     2905,    0, 2909,    0, 2911,    0, 2909, 2910,    0, 2910,
     2912, 2910,    0, 2914, 2913, 2911, 2909, 2911, 2913, 2911,
        0, 2912, 2913, 2912, 2914, 2912, 2914, 2915, 2914, 2916,
     2917, 2915, 2913, 2916, 2917, 2915, 2918, 2916, 2917,    0,
     2918,    0,    0,    0, 2918, 2915,    0, 2916, 2917, 2919,
     2917,    0, 2920, 2919, 2918,    0, 2920, 2919, 2921,    0,
     2920,    0, 2921,    0, 3104, 3104, 2921, 2919,    0, 2919,
     2920,    0,    0, 2920, 2922,    0, 2921, 2923, 2922, 2922,

     2923, 2923, 2922, 2924,    0, 2923, 2924, 2924, 2925, 2925,
     2926, 2924, 2922, 2925, 2926, 2923,    0, 2925, 2926,    0,
     3104, 2924, 3104, 3104, 2926, 2927, 2927, 2925, 2926, 2928,
     2927, 2929, 2930, 2928, 2927, 2929, 2930, 2928, 2931, 2929,
     2930,    0, 2931,    0, 2927,    0, 2931, 2928, 2932, 2929,
     2930,    0,    0, 2933,    0,    0, 2931, 2931, 2934, 2932,
        0, 2932,    0, 2932, 2933, 2933, 2933, 2934, 2933, 2934,
     2935, 2934, 2936, 2934,    0,    0, 2936,    0, 2937,    0,
     2936, 2935, 2937, 2935,    0, 2935, 2937, 2938, 2940, 2939,
     2936, 2938, 2936, 2939, 2942, 2938, 2937, 2939, 2942, 2940,

        0, 2940, 2942, 2940,    0, 2938, 2943, 2939,    0, 2944,
     2943, 2945, 2942, 2944, 2943, 2945,    0, 2944, 2943, 2945,
     2948,    0, 2946,    0, 2943,    0, 2946, 2944, 2947, 2945,
     2946, 2948, 2947, 2948, 2949, 2948, 2947, 2950,    0,    0,
     2946,    0, 2951, 2949,    0, 2949, 2947, 2949, 2950, 2949,
     2950, 2951, 2950, 2951, 2950, 2951, 2952, 2951,    0, 2953,
        0,    0, 2954,    0,    0, 2952,    0, 2952, 2955, 2952,
     2953, 2952, 2953, 2954, 2953, 2954, 2956, 2954, 2957, 2955,
     2958, 2955, 2957, 2955, 2958,    0, 2957, 2956, 2958, 2956,
     2959, 2956, 2972, 2972, 2973, 2973, 2957,    0, 2958, 2958,

     2960, 2959, 2961, 2959, 2960, 2959, 2961, 2962, 2960, 2963,
     2961, 2962,    0, 2963,    0, 2962,    0, 2963, 2960,    0,
     2961, 2972,    0, 2973, 2974, 2962,    0, 2963, 2962, 2975,
     2972, 2972, 2973, 2973,    0, 2974,    0, 2974,    0, 2974,
     2975, 2976, 2975, 2977, 2975, 2976,    0, 2977,    0, 2976,
     2978, 2977,    0, 2978, 2978,    0, 2979,    0, 2978, 2976,
     2979, 2977, 2979, 2980, 2979, 2980, 2981, 2982, 2978,    0,
     2980, 2982,    0,    0, 2979, 2982,    0, 2981, 2980, 2981,
     2980, 2981, 2983, 2984, 2985, 2982, 2983, 2984, 2985,    0,
     2983, 2984, 2985, 2986, 2988,    0,    0,    0, 2985, 2987,

     2983, 2984, 2985,    0, 2986, 2988, 2986, 2988, 2986, 2988,
     2987, 2987, 2987, 2989, 2987, 2990,    0, 2991,    0, 2990,
        0, 2991,    0, 2990, 2989, 2991, 2989, 2993, 2989, 2992,
     2992, 2992, 2989, 2990,    0, 2991,    0, 2994, 2993,    0,
     2993, 2994, 2993,    0,    0, 2994, 3009, 2992, 3010,    0,
     3009,    0, 3010, 3011, 3009, 2994, 3010, 3011, 2992, 2992,
     2992, 3011, 2992,    0, 3009, 3012, 3010,    0, 3013, 3012,
     3011, 3011, 3013, 3012, 3014,    0, 3013, 3015, 3014,    0,
     3016, 3015, 3014, 3012, 3016, 3015, 3013, 3013, 3016, 3017,
        0,    0, 3014, 3017,    0, 3015, 3015, 3017, 3016,    0,

        0, 3018, 3018,    0,    0, 3018,    0, 3017, 3017, 3018,
     3019, 3019, 3020,    0, 3019,    0, 3020,    0, 3019, 3018,
     3020, 3021,    0,    0,    0, 3022,    0,    0, 3019, 3022,
     3020, 3020, 3021, 3022, 3021,    0, 3021, 3023, 3024,    0,
     3025, 3023, 3024, 3022, 3025, 3023, 3024,    0, 3025, 3024,
        0,    0,    0, 3026, 3025, 3023, 3024, 3026, 3025, 3027,
        0, 3026,    0, 3027, 3026, 3028, 3033, 3027, 3029,    0,
     3033, 3026, 3029, 3027, 3033, 3031, 3028, 3027, 3028, 3029,
     3028, 3029, 3030, 3029, 3033,    0, 3031, 3030, 3031,    0,
     3031, 3032, 3031, 3030, 3032, 3030, 3034, 3030, 3035, 3034,

     3034,    0, 3035,    0, 3034, 3032, 3035, 3032,    0, 3032,
     3037, 3036,    0, 3038, 3034, 3036, 3035,    0,    0, 3036,
     3039, 3037,    0, 3037, 3038, 3037, 3038,    0, 3038, 3036,
     3036, 3039, 3040, 3039, 3041, 3039, 3040, 3042, 3041, 3043,
     3040, 3042, 3041, 3043, 3041, 3042,    0, 3043, 3045,    0,
     3040,    0, 3041,    0, 3046, 3042, 3044, 3043, 3043, 3045,
     3044, 3045,    0, 3045, 3044, 3046, 3047, 3046,    0, 3046,
        0, 3046,    0, 3048, 3044,    0, 3048, 3047, 3047, 3047,
     3049, 3047, 3048, 3049, 3048, 3050, 3048,    0, 3048, 3050,
        0, 3048,    0, 3050, 3049,    0, 3049, 3051, 3049,    0,

     3052, 3051,    0, 3050, 3052, 3051, 3054,    0, 3052, 3055,
     3054, 3053, 3053, 3055, 3054, 3051, 3053, 3055, 3052,    0,
     3053, 3056, 3057,    0, 3054, 3056, 3054, 3055, 3058, 3056,
     3053,    0, 3058, 3057, 3061, 3057, 3058, 3057, 3061, 3056,
     3059,    0, 3061, 3060, 3059, 3059, 3058, 3060, 3059, 3062,
        0, 3060, 3061, 3062, 3060, 3063, 3064, 3062, 3059,    0,
     3064, 3060,    0,    0, 3064, 3066, 3063, 3062, 3063, 3062,
     3063, 3065,    0, 3067, 3064, 3065, 3066,    0, 3066, 3065,
     3066, 3068,    0, 3069, 3067,    0, 3067, 3069, 3067, 3065,
     3067, 3069, 3068, 3068, 3068, 3070, 3068,    0, 3071, 3070,

     3072, 3069, 3071, 3070, 3072,    0, 3071, 3073, 3072,    0,
        0, 3073,    0, 3070,    0, 3073, 3071,    0, 3072, 3072,
     3074,    0,    0,    0, 3074, 3073, 3073, 3075, 3074, 3076,
     3075, 3075, 3077, 3076,    0, 3075, 3077, 3076, 3074,    0,
     3077,    0,    0,    0, 3078, 3075,    0, 3076, 3078, 3079,
     3077, 3080, 3078, 3079,    0, 3080, 3078, 3079,    0, 3080,
     3081, 3082, 3078,    0,    0,    0,    0, 3079,    0, 3080,
        0, 3081, 3082, 3081, 3082, 3081, 3082, 3085, 3086, 3087,
     3088, 3085, 3086, 3087, 3088, 3085, 3086, 3087, 3088,    0,
        0, 3090,    0,    0,    0, 3085, 3086, 3087, 3088, 3089,

     3087, 3088, 3090, 3089, 3090, 3092, 3090, 3089, 3091, 3091,
     3100, 3100, 3101, 3101, 3094,    0, 3092, 3089, 3092, 3091,
     3092, 3091, 3093, 3091, 3105, 3094, 3093, 3094,    0, 3094,
     3093, 3102, 3102, 3103, 3103, 3105, 3100, 3105,    0, 3105,
     3093,    0,    0, 3115,    0,    0, 3101,    0, 3100, 3100,
     3101, 3101, 3102, 3126, 3115, 3106, 3115, 3107, 3115, 3106,
     3107, 3107, 3126, 3106, 3126, 3107, 3126, 3103, 3126, 3102,
     3102, 3103, 3103, 3106, 3108, 3107, 3112, 3108, 3108, 3113,
     3112, 3114, 3108, 3113, 3112, 3114,    0, 3113,    0, 3114,
        0, 3127, 3108,    0, 3112, 3127, 3112, 3113,    0, 3114,

     3113, 3128, 3127, 3129, 3127, 3128, 3127, 3129, 3130, 3128,
     3131, 3129, 3130,    0, 3131,    0, 3130,    0, 3131, 3128,
        0, 3129,    0, 3132,    0,    0, 3130, 3132, 3131, 3131,
     3133, 3132, 3134,    0, 3133, 3135, 3134,    0, 3133, 3135,
     3134, 3132,    0, 3135,    0,    0,    0,    0, 3133,    0,
     3134, 3134, 3136, 3135, 3135, 3137, 3136,    0,    0, 3137,
     3136, 3138,    0, 3137, 3139,    0, 3144, 3144,    0, 3140,
     3136,    0, 3138, 3137, 3138, 3139, 3138, 3139, 3140, 3139,
     3140, 3141, 3140,    0, 3140,    0, 3142,    0, 3145, 3145,
     3147, 3147, 3141,    0, 3141, 3142, 3141, 3142,    0, 3142,

     3144, 3142, 3145,    0, 3144, 3144, 3146, 3146, 3148, 3148,
     3149, 3149, 3150, 3150, 3151, 3151,    0, 3147,    0,    0,
     3146, 3152, 3152, 3153, 3149,    0, 3145, 3145, 3147, 3147,
     3148,    0, 3151,    0, 3153,    0, 3153,    0, 3153,    0,
     3160, 3160,    0, 3154, 3146, 3146, 3148, 3148, 3149, 3149,
     3150, 3150, 3151, 3151, 3154, 3152, 3154, 3155, 3154, 3152,
     3152,    0, 3156, 3158,    0,    0,    0, 3158, 3155, 3157,
     3155, 3158, 3155, 3156, 3157, 3156,    0, 3156, 3160, 3160,
     3157, 3158, 3157, 3159, 3157, 3161, 3159, 3159,    0, 3162,
        0, 3159,    0, 3162,    0, 3163, 3161, 3162, 3161, 3163,

     3161, 3159, 3164, 3163, 3165,    0, 3164, 3162,    0,    0,
     3164, 3166, 3166, 3163,    0, 3165, 3164, 3165, 3167, 3165,
     3164, 3168,    0, 3166, 3169, 3166,    0, 3166,    0, 3167,
        0, 3167, 3168, 3167, 3168, 3169, 3168, 3169, 3168, 3169,
     3170, 3167, 3171,    0,    0,    0, 3171,    0,    0,    0,
     3171, 3170, 3170, 3170, 3172, 3170, 3174, 3173, 3172,    0,
     3171, 3173, 3172,    0,    0, 3173, 3175, 3174, 3173, 3174,
     3175, 3174, 3172, 3172, 3175, 3173,    0, 3176, 3177, 3185,
        0, 3176, 3177, 3178, 3175, 3176, 3177, 3178,    0, 3179,
     3185, 3178, 3185, 3179, 3185, 3176, 3177, 3179, 3177,    0,

        0, 3178, 3178,    0,    0, 3180, 3181, 3179, 3179, 3180,
     3181, 3182,    0, 3180, 3181, 3182, 3181, 3183,    0, 3182,
        0, 3183, 3186, 3180, 3181, 3183, 3186, 3184, 3184, 3182,
     3186,    0, 3184, 3187,    0, 3183, 3184, 3187,    0, 3188,
     3186, 3187, 3188, 3188, 3189, 3190, 3184, 3188, 3189,    0,
        0, 3187, 3189, 3191, 3192,    0, 3190, 3188, 3190, 3193,
     3190,    0, 3189, 3191, 3191, 3192, 3191, 3192, 3191, 3192,
     3193, 3194, 3193,    0, 3193, 3198, 3197, 3199,    0, 3198,
        0, 3199, 3194, 3198, 3194, 3199, 3194, 3197, 3201, 3197,
        0, 3197, 3201, 3198, 3200, 3199, 3201, 3200, 3200, 3202,

     3203,    0, 3200, 3202,    0, 3204, 3201, 3202,    0,    0,
        0, 3203, 3200, 3203,    0, 3203, 3204, 3202, 3204, 3205,
     3204, 3208, 3209, 3205, 3210, 3208, 3209, 3205, 3210, 3208,
     3209,    0, 3210, 3212,    0,    0,    0, 3205,    0, 3208,
     3209, 3211, 3210, 3213, 3212, 3211, 3212, 3213, 3212, 3211,
     3214, 3213, 3215,    0, 3214,    0, 3215,    0, 3214, 3211,
     3215, 3213, 3216, 3217,    0,    0,    0, 3217, 3214,    0,
     3215, 3217, 3218, 3216,    0, 3216, 3218, 3216, 3222, 3222,
     3218, 3217, 3222, 3223, 3224,    0, 3222, 3223,    0, 3225,
     3218, 3223, 3234,    0,    0, 3224, 3222, 3224,    0, 3224,

     3225, 3223, 3225, 3234, 3225, 3234, 3236, 3234, 3235, 3235,
        0, 3237,    0,    0, 3237, 3238,    0, 3236,    0, 3236,
     3235, 3236, 3235, 3239, 3235, 3237, 3238, 3237, 3238, 3237,
     3238, 3240, 3251, 3241, 3239, 3240, 3239, 3241, 3239, 3240,
     3242, 3241, 3243, 3251, 3242, 3251, 3243, 3251, 3242, 3240,
     3243, 3241,    0,    0,    0, 3244,    0,    0, 3242, 3244,
     3243, 3243, 3244, 3244, 3245,    0,    0, 3246, 3245,    0,
        0, 3246, 3245, 3244, 3246, 3246, 3247,    0, 3245, 3248,
     3247,    0, 3245, 3248, 3247, 3246,    0, 3248, 3249,    0,
     3247,    0, 3249,    0, 3247, 3249, 3249, 3248, 3252, 3250,

     3288, 3288, 3253, 3250, 3250, 3253, 3249, 3250, 3254, 3252,
     3252, 3252,    0, 3252,    0,    0, 3253, 3250, 3253, 3254,
     3253, 3254, 3255, 3254, 3256, 3257, 3255,    0, 3256, 3257,
     3255, 3256, 3256, 3257,    0,    0, 3258, 3258, 3288, 3288,
     3255, 3258, 3256, 3257, 3259, 3258, 3260,    0, 3259, 3261,
     3260,    0, 3259, 3261, 3260, 3258, 3261, 3261,    0, 3263,
     3262, 3262, 3259,    0, 3260, 3262,    0, 3261,    0, 3262,
     3263,    0, 3263,    0, 3263, 3264, 3264,    0, 3265, 3262,
        0,    0,    0, 3266, 3267,    0, 3264,    0, 3264, 3265,
     3264, 3265, 3266, 3265, 3266, 3267, 3266, 3267, 3266, 3267,

     3268, 3269, 3270, 3271, 3268, 3269, 3270, 3271, 3268, 3269,
     3270, 3271,    0,    0,    0,    0,    0,    0, 3268, 3269,
     3270, 3271, 3272, 3275, 3273, 3274, 3272, 3273, 3273, 3274,
     3272,    0, 3273, 3274, 3275, 3276, 3275, 3277, 3275, 3274,
     3272, 3277, 3273, 3274,    0, 3277, 3276,    0, 3276, 3278,
     3276,    0, 3279, 3278,    0, 3277, 3279, 3278, 3281,    0,
     3279, 3282, 3281, 3280, 3280, 3282, 3281, 3278, 3280, 3282,
     3279,    0, 3280, 3283,    0,    0, 3281, 3283,    0, 3282,
     3283, 3283, 3280,    0, 3284, 3285,    0,    0, 3284, 3285,
        0, 3283, 3284, 3285, 3284,    0, 3286,    0,    0,    0,

     3286, 3287, 3284, 3285, 3286, 3287,    0, 3290, 3289, 3287,
     3291,    0, 3289,    0, 3286, 3286, 3289, 3292, 3290, 3287,
     3290, 3291, 3290, 3291, 3293, 3291, 3289, 3294, 3292,    0,
     3292, 3294, 3292, 3295, 3296, 3293,    0, 3293, 3294, 3293,
     3294,    0, 3294,    0, 3295, 3296, 3295, 3296, 3295, 3296,
     3297, 3299, 3300, 3301, 3297,    0,    0, 3301, 3297,    0,
        0, 3301, 3299, 3300, 3299, 3300, 3299, 3300, 3297, 3302,
     3303, 3301, 3302, 3302, 3303, 3304,    0, 3302, 3303, 3304,
        0, 3308, 3305, 3304,    0, 3308, 3305, 3302, 3303, 3308,
     3305,    0,    0, 3304, 3305,    0,    0, 3309, 3310, 3308,

     3305, 3309, 3310, 3311,    0, 3309, 3310, 3311,    0, 3312,
        0, 3311, 3313, 3401, 3401, 3309, 3310, 3314, 3314,    0,
     3312, 3311, 3312, 3313, 3312, 3313, 3315, 3313, 3314, 3316,
     3314,    0, 3314,    0, 3317,    0,    0, 3315,    0, 3315,
     3316, 3315, 3316,    0, 3316, 3317, 3318, 3317, 3319, 3317,
     3318, 3401, 3401,    0, 3318, 3320,    0,    0,    0, 3319,
        0, 3319,    0, 3319, 3318, 3321, 3320, 3328, 3320, 3321,
     3320, 3328, 3320, 3321, 3328, 3328, 3329, 3332, 3330,    0,
     3329,    0, 3330, 3321, 3329, 3328, 3330, 3331, 3332, 3333,
     3332, 3331, 3332,    0, 3329, 3331, 3330,    0, 3334, 3335,

     3333, 3334, 3333, 3335, 3333, 3331, 3333, 3335, 3336,    0,
        0,    0, 3334,    0, 3334,    0, 3334, 3335, 3337, 3336,
     3338, 3336, 3337, 3336,    0,    0, 3337, 3339, 3340,    0,
        0, 3338,    0, 3338,    0, 3338, 3337,    0, 3339, 3340,
     3339, 3340, 3339, 3340, 3341, 3343, 3340, 3342, 3341, 3344,
     3342, 3342, 3341, 3344,    0, 3342, 3343, 3344, 3343, 3345,
     3343, 3346, 3341,    0, 3346, 3342,    0, 3344,    0,    0,
     3345, 3347, 3345,    0, 3345, 3346, 3348, 3346,    0, 3346,
     3349, 3347, 3347, 3349, 3347,    0, 3347, 3348, 3350, 3348,
        0, 3348,    0,    0, 3349,    0, 3349,    0, 3349, 3350,

     3351, 3350,    0, 3350, 3351, 3352, 3352, 3353, 3351, 3354,
     3352, 3353,    0, 3354, 3352, 3353,    0, 3354, 3351,    0,
     3354,    0, 3356,    0, 3352, 3353, 3353, 3354, 3355, 3359,
     3357,    0, 3355, 3356,    0, 3356, 3355, 3356, 3358, 3360,
     3359, 3357, 3359, 3357, 3359, 3357, 3355, 3357, 3361, 3358,
     3360, 3358, 3360, 3358, 3360, 3358, 3362,    0, 3363, 3361,
     3364, 3361, 3363, 3361, 3364,    0, 3363, 3362, 3364, 3362,
        0, 3362,    0,    0,    0, 3362, 3363, 3365, 3364,    0,
     3365, 3365, 3366, 3366, 3367, 3365,    0, 3366, 3367, 3368,
     3368, 3366, 3367,    0, 3368, 3365, 3367,    0, 3368, 3369,

        0, 3366, 3367, 3369,    0, 3370, 3373, 3369, 3368, 3370,
     3373, 3374, 3375, 3370, 3373, 3374, 3375, 3369,    0, 3374,
     3375,    0,    0, 3370, 3373,    0, 3376, 3376, 3377, 3374,
     3375, 3376, 3377, 3378,    0, 3376, 3377, 3378,    0, 3379,
        0, 3378, 3379, 3379,    0, 3376, 3377, 3379, 3380, 3381,
        0, 3378,    0,    0, 3382,    0,    0, 3379,    0, 3380,
     3381, 3380, 3381, 3380, 3381, 3382, 3383, 3382, 3384, 3382,
     3383, 3384, 3384, 3385, 3383, 3386, 3384, 3385,    0, 3386,
        0, 3385,    0, 3386, 3383,    0, 3384, 3386, 3387, 3388,
        0, 3385, 3387, 3386, 3387, 3389, 3387, 3390,    0, 3389,

     3388, 3390, 3388, 3389, 3388, 3390, 3387, 3392, 3391,    0,
        0,    0, 3391, 3389,    0, 3390, 3391, 3393, 3392,    0,
     3392, 3393, 3392, 3402, 3394, 3393, 3391, 3394, 3394, 3400,
     3403,    0, 3394, 3400, 3402, 3393, 3402, 3400, 3402, 3404,
     3406, 3403, 3394, 3403, 3405, 3403, 3405, 3400,    0, 3407,
     3404, 3406, 3404, 3406, 3404, 3406, 3408, 3405,    0, 3405,
     3407, 3405, 3407, 3409, 3407,    0, 3410, 3408,    0, 3408,
        0, 3408,    0,    0, 3409,    0, 3409, 3410, 3409, 3410,
     3411, 3410, 3412, 3413, 3411,    0, 3412, 3413, 3411,    0,
     3412, 3413, 3414, 3415,    0,    0,    0, 3415, 3411, 3416,

     3412, 3413, 3418, 3414, 3415, 3414, 3415, 3414, 3415, 3417,
     3416, 3416, 3416, 3418, 3416, 3418, 3419, 3418,    0,    0,
     3417, 3417, 3417,    0, 3417,    0, 3420, 3419, 3421, 3419,
     3420, 3419, 3421, 3422, 3420, 3423, 3421, 3422,    0, 3423,
        0, 3422,    0, 3423, 3420,    0, 3421, 3422, 3424, 3423,
     3425, 3422, 3424, 3423, 3425, 3426, 3424, 3427, 3425, 3426,
        0, 3427,    0, 3426,    0, 3427, 3424,    0, 3425,    0,
        0,    0, 3428, 3426, 3426, 3427, 3428, 3429, 3430, 3431,
     3428, 3429, 3430, 3431,    0, 3429, 3430, 3431,    0,    0,
     3428,    0,    0,    0, 3432, 3429, 3430, 3431, 3432, 3433,

     3435,    0, 3432, 3433,    0, 3434, 3432, 3433, 3434,    0,
     3438, 3435, 3432, 3435,    0, 3435, 3434, 3433, 3434, 3439,
     3434, 3438, 3440, 3438,    0, 3438,    0, 3441, 3441,    0,
     3439, 3439, 3439, 3440, 3439, 3440,    0, 3440, 3441, 3440,
     3441, 3442, 3441, 3443, 3444, 3442, 3445, 3443, 3444, 3442,
     3445, 3443, 3444,    0, 3445,    0,    0,    0,    0, 3442,
        0, 3443, 3444, 3446, 3445, 3447, 3448, 3446, 3449, 3447,
     3448, 3446, 3449, 3447, 3448,    0, 3449, 3448,    0,    0,
        0, 3446,    0, 3447, 3448, 3450, 3449, 3451, 3452, 3450,
     3451, 3451, 3452, 3450,    0, 3451, 3452, 3453,    0,    0,

        0,    0,    0, 3450,    0, 3451, 3452, 3454, 3453, 3460,
     3453, 3454, 3453, 3460, 3461, 3454, 3462, 3460, 3461,    0,
     3462,    0, 3461,    0, 3462, 3454,    0, 3460,    0,    0,
        0,    0, 3461, 3461, 3462, 3462, 3463, 3464, 3465,    0,
     3463, 3464, 3465,    0, 3463, 3464, 3465, 3466, 3464, 3467,
        0,    0, 3465, 3467, 3463, 3464, 3465, 3467, 3466, 3469,
     3466, 3468, 3466,    0,    0, 3468,    0, 3467,    0, 3468,
     3469, 3470, 3469, 3471, 3469,    0, 3471, 3472,    0, 3468,
     3472,    0, 3470,    0, 3470, 3476, 3470, 3471, 3472, 3471,
     3472, 3471, 3472, 3473, 3473, 3474, 3476, 3475, 3476, 3474,

     3476, 3475,    0, 3474, 3473, 3475, 3473, 3477, 3473,    0,
     3478,    0,    0, 3474,    0, 3475, 3479, 3480, 3477,    0,
     3477, 3478, 3477, 3478, 3481, 3478,    0, 3479, 3480, 3479,
     3480, 3479, 3480, 3482, 3483, 3481,    0, 3481, 3483, 3481,
        0, 3484, 3483, 3485, 3482, 3484, 3482, 3485, 3482, 3484,
     3486, 3485, 3483,    0, 3486,    0, 3487,    0, 3486, 3484,
     3487, 3485, 3488, 3488, 3487, 3489, 3488, 3490, 3486, 3489,
     3488, 3490,    0, 3489, 3487, 3490,    0,    0, 3491,    0,
     3488,    0, 3491, 3489, 3492, 3490, 3491, 3492, 3492,    0,
     3493, 3494, 3492, 3493, 3493, 3494, 3491, 3495, 3493, 3494,

        0, 3495, 3492, 3496,    0, 3495, 3496, 3496, 3493, 3494,
     3497, 3496,    0,    0, 3497, 3495, 3498,    0, 3497, 3498,
     3498, 3496, 3500, 3499, 3498,    0, 3500, 3499, 3497, 3499,
     3500, 3499,    0,    0, 3498, 3506, 3508,    0, 3507, 3506,
     3500, 3499, 3507, 3506,    0,    0, 3507, 3508, 3509, 3508,
        0, 3508,    0, 3506, 3510, 3511, 3507, 3509,    0, 3509,
     3512, 3509,    0, 3509,    0, 3510, 3511, 3510, 3511, 3510,
     3511, 3512, 3511, 3512,    0, 3512, 3513, 3513, 3514, 3515,
        0, 3514,    0, 3515,    0,    0,    0, 3515, 3513, 3514,
     3513, 3514, 3513, 3514, 3516, 3517, 3518, 3515, 3516,    0,

        0,    0, 3516,    0,    0,    0, 3517, 3518, 3517, 3518,
     3517, 3518, 3516, 3519, 3520, 3521, 3522, 3519, 3520, 3521,
     3522, 3519, 3520, 3521, 3522,    0,    0,    0,    0,    0,
        0, 3519, 3520, 3521, 3522, 3522, 3523, 3524, 3525,    0,
     3523, 3524, 3525,    0, 3523, 3524, 3525, 3524, 3566, 3526,
        0,    0,    0, 3526, 3523, 3524, 3525, 3526, 3528, 3566,
     3527, 3566, 3528, 3566, 3527,    0, 3528, 3526, 3527, 3527,
        0, 3529, 3575, 3530,    0, 3529, 3528, 3530, 3527, 3529,
     3531, 3530, 3532, 3575, 3531, 3575, 3532, 3575, 3531, 3529,
     3532, 3530,    0, 3533,    0, 3534,    0, 3533, 3531, 3534,

     3532, 3533, 3541, 3534, 3535,    0, 3541,    0, 3535, 3541,
     3541, 3533, 3535, 3534,    0, 3535,    0, 3542,    0, 3543,
     3541, 3542, 3535, 3543, 3544, 3542, 3545, 3543, 3544,    0,
     3545, 3542, 3544,    0, 3545, 3542,    0, 3543, 3544, 3546,
     3576, 3547, 3544, 3546, 3545, 3547, 3548, 3546,    0, 3547,
     3548, 3576, 3548, 3576, 3548, 3576,    0, 3546,    0, 3547,
        0, 3549,    0,    0, 3548, 3549, 3550, 3549, 3551, 3549,
     3550,    0, 3551, 3550, 3550,    0, 3551, 3552, 3551, 3549,
        0, 3552,    0, 3553, 3550, 3552, 3551, 3553, 3554, 3555,
        0, 3553, 3554, 3555, 3553, 3552, 3554, 3555, 3567, 3567,

     3556, 3553,    0,    0, 3556, 3557, 3554, 3555, 3556, 3557,
        0, 3558, 3559, 3557,    0, 3558, 3559, 3560, 3556, 3558,
     3559, 3560,    0, 3557, 3565, 3560,    0,    0, 3565, 3558,
     3559,    0, 3565,    0,    0, 3560, 3567, 3567,    0, 3568,
     3569, 3570, 3565, 3568, 3569, 3570, 3572, 3568, 3569, 3570,
     3572, 3571, 3571,    0, 3572,    0, 3571, 3568, 3569, 3570,
     3571, 3573, 3581, 3574, 3572, 3573,    0, 3574,    0, 3573,
     3571, 3574, 3582, 3581,    0, 3581,    0, 3581, 3583, 3573,
        0, 3574, 3593, 3582, 3584, 3582, 3593, 3582,    0, 3583,
     3593, 3583, 3585, 3583,    0, 3584,    0, 3584, 3586, 3584,

     3593, 3584, 3594, 3585,    0, 3585, 3594, 3585,    0, 3586,
     3594, 3586, 3587, 3586,    0, 3587,    0, 3588, 3591,    0,
     3594,    0,    0, 3587, 3592, 3587,    0, 3587, 3588, 3591,
     3588, 3591, 3588, 3591, 3588, 3592, 3595, 3592, 3598, 3592,
     3595, 3599, 3598, 3600, 3595, 3599, 3598, 3600,    0, 3599,
        0, 3600,    0,    0, 3595,    0, 3598,    0, 3603, 3599,
     3604, 3600, 3603, 3606, 3604,    0, 3603, 3606, 3604, 3603,
        0, 3606,    0,    0,    0, 3607, 3603,    0, 3604, 3607,
        0, 3606,    0, 3607,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 3607, 3610, 3610, 3610, 3610, 3610, 3610,

     3610, 3610, 3610, 3610, 3610, 3610, 3611, 3611, 3611, 3611,
     3611, 3611, 3611, 3611, 3611, 3611, 3611, 3611, 3612, 3612,
     3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612,
     3613, 3613, 3613, 3613, 3613, 3613, 3613, 3613, 3613, 3613,
     3613, 3613, 3614, 3614, 3614, 3614, 3614, 3614, 3614, 3614,
     3614, 3614, 3614, 3614, 3615, 3615, 3615, 3615, 3615, 3615,
     3615, 3615, 3615, 3615, 3615, 3615, 3616, 3616, 3617, 3617,
     3617, 3617,    0, 3617, 3617, 3618,    0,    0, 3618, 3618,
     3618, 3618, 3618, 3618, 3618, 3618, 3618, 3619, 3619,    0,
     3619,    0, 3619, 3619, 3619, 3619, 3619, 3619, 3619, 3620,

     3620,    0, 3620, 3620, 3620, 3620, 3620, 3620, 3620, 3620,
     3620, 3621, 3621,    0, 3621, 3621, 3621, 3621, 3621, 3621,
     3621, 3621, 3621, 3622, 3622,    0,    0, 3622, 3622, 3622,
     3622, 3622, 3622, 3622, 3622, 3623, 3623, 3623, 3623, 3623,
     3623, 3623, 3623, 3623, 3623, 3623, 3623, 3624, 3624, 3624,
     3624,    0, 3624, 3624, 3625, 3625,    0, 3625, 3625, 3625,
     3625, 3625, 3625,    0, 3625, 3625, 3626,    0,    0,    0,
     3626, 3627,    0,    0, 3627, 3627, 3628, 3628, 3628, 3628,
        0, 3628, 3628, 3631, 3631, 3631, 3631,    0, 3631, 3631,
     3632, 3632, 3632,    0,    0, 3632, 3632, 3634, 3634, 3634,

        0,    0, 3634, 3634, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "lex.yy"
#define INITIAL 0
/*
    Copyright (c) 2013, NVIDIA CORPORATION. All rights reserved.
    Copyright (c) 2013, Tristan Lorach. All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
     * Redistributions of source code must retain the above copyright
       notice, this list of conditions and the following disclaimer.
     * Neither the name of NVIDIA CORPORATION nor the names of its
       contributors may be used to endorse or promote products derived
       from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
    PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
    CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
    OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

    Please direct any questions to tlorach@nvidia.com (Tristan Lorach)
*/
#line 36 "lex.yy"
	#define yylval FxParserlval //hack, if not it does not compile
    #pragma warning(disable:4996)

	#ifdef MEMORY_LEAKS_CHECK
	#pragma message("build will Check for Memory Leaks!")
	#define _CRTDBG_MAP_ALLOC
	#include <stdlib.h>
	#include <crtdbg.h>
    inline void* operator new(size_t size, const char *file, int line)
    {
       return ::operator new(size, 1, file, line);
    }

    inline void __cdecl operator delete(void *ptr, const char *file, int line) 
    {
       ::operator delete(ptr, _NORMAL_BLOCK, file, line);
    }

    #define DEBUG_NEW new( __FILE__, __LINE__)
    #define MALLOC_DBG(x) _malloc_dbg(x, 1, __FILE__, __LINE__);
    #define malloc(x) MALLOC_DBG(x)
    #define new DEBUG_NEW
	#else
	#include <stdlib.h>
	#endif

    #include  <math.h>
    #include  <string>
    #include  <stack>

    #include  <string.h>
    #include  <stdio.h>
    #include  <assert.h>
    #include  "Grammar.hpp"
    #include  "FxLibEx.h"
    #include  "FxParser.h"
    #define MAX_STR_CONST 16382 // TODO: Change this and make it dynamic... shaders could be big

    namespace nvFX
    {
        extern IncludeCb g_includeCb;
    }
    int  line_num  =  1;
    std::string file_name;
    int  bracket_level = 0;
    char  *string_buf_ptr;
    //#define  MAX_INCLUDE_DEPTH  10
    //YY_BUFFER_STATE  include_stack[MAX_INCLUDE_DEPTH];
    //int  include_stack_ptr  =  0;
    struct IncludeData {
        IncludeData(YY_BUFFER_STATE s, int ln, const char *fname, FILE *fd=NULL) :
            state(s), line_num(ln), file_name(fname), fileToClose(fd) {}
        YY_BUFFER_STATE state;
        int             line_num;
        std::string     file_name; // the name of the current file (when in #include, for example)
        FILE*           fileToClose; // keep track of the file descriptor to make sure we will close it
    };
    std::stack<IncludeData> include_stack;

    // we need to do this because yy_pop_state is generated as static
    static void yy_pop_state();
    void lex_pop_state()
    {
        yy_pop_state();
    }
#define YY_STACK_USED 1
#define fbo 1
#define fbo1 2
#define clearmode 3
#define rendermode 4
#define incl 5
#define comment 6
#define comment2 7
#define str 8
#define shader 9
#define shaderbody 10
#define cstbuffer 11
#define technique 12
#define pass 13
#define sampler_state 14
#define dst_state 15
#define pr_state 16
#define color_sample_state 17
#define rasterization_state 18
#define resource 19
#define resource1 20

#line 5424 "C:/p4/GitHub/nvFX/FxParser/lex.cpp"

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap YY_PROTO(( void ));
#else
extern int yywrap YY_PROTO(( void ));
#endif
#endif

#ifndef YY_NO_UNPUT
static void yyunput YY_PROTO(( int c, char *buf_ptr ));
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen YY_PROTO(( yyconst char * ));
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput YY_PROTO(( void ));
#else
static int input YY_PROTO(( void ));
#endif
#endif

#if YY_STACK_USED
static int yy_start_stack_ptr = 0;
static int yy_start_stack_depth = 0;
static int *yy_start_stack = 0;
#ifndef YY_NO_PUSH_STATE
static void yy_push_state YY_PROTO(( int new_state ));
#endif
#ifndef YY_NO_POP_STATE
static void yy_pop_state YY_PROTO(( void ));
#endif
#ifndef YY_NO_TOP_STATE
static int yy_top_state YY_PROTO(( void ));
#endif

#else
#define YY_NO_PUSH_STATE 1
#define YY_NO_POP_STATE 1
#define YY_NO_TOP_STATE 1
#endif

#ifdef YY_MALLOC_DECL
YY_MALLOC_DECL
#else
#if __STDC__
#ifndef __cplusplus
#include <stdlib.h>
#endif
#else
/* Just try to get by without declaring the routines.  This will fail
 * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
 * or sizeof(void*) != sizeof(int).
 */
#endif
#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */

#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( yy_current_buffer->yy_is_interactive ) \
		{ \
		int c = '*', n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
		  && ferror( yyin ) ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL int yylex YY_PROTO(( void ))
#endif

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

YY_DECL
	{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;

#line 108 "lex.yy"

    int  comment_caller;
    char  string_buf[MAX_STR_CONST];

#line 5580 "C:/p4/GitHub/nvFX/FxParser/lex.cpp"

	if ( yy_init )
		{
		yy_init = 0;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yy_start )
			yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! yy_current_buffer )
			yy_current_buffer =
				yy_create_buffer( yyin, YY_BUF_SIZE );

		yy_load_buffer_state();
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 3610 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_current_state != 3609 );
		yy_cp = yy_last_accepting_cpos;
		yy_current_state = yy_last_accepting_state;

yy_find_action:
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;


case 1:
YY_RULE_SETUP
#line 113 "lex.yy"
return GLOBAL;
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 114 "lex.yy"
return LOCAL;
	YY_BREAK

case 3:
YY_RULE_SETUP
#line 117 "lex.yy"
{
    bracket_level = 0;
    return NAMESPACE;
}
	YY_BREAK
/*==================================================================
      FBO
    */
case 4:
YY_RULE_SETUP
#line 125 "lex.yy"
{
    bracket_level = 0;
    yy_push_state(fbo1);
    return FBO;
}
	YY_BREAK
/*==================================================================
      Texture for scene-level effect : RenderTexture and RenderBuffer
      They share the same as Texture : they are resources
    */
case 5:
YY_RULE_SETUP
#line 134 "lex.yy"
{
    bracket_level = 0;
    yy_push_state(resource1);
    return RENDERTEXTURE;
}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 139 "lex.yy"
{
    bracket_level = 0;
    yy_push_state(resource1);
    return RENDERTEXTURERECT;
}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 144 "lex.yy"
{
    bracket_level = 0;
    yy_push_state(resource1);
    return RENDERBUFFER;
}
	YY_BREAK
/*==================================================================
      
    */
case 8:
YY_RULE_SETUP
#line 152 "lex.yy"
{
    bracket_level = 0;
    yy_push_state(resource1);
    return TEXTURERESOURCE;
}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 157 "lex.yy"
{
    bracket_level = 0;
    yy_push_state(resource1);
    return TEXTURERESOURCECUBE;
}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 162 "lex.yy"
{
    bracket_level = 0;
    yy_push_state(resource1);
    return TEXTURERESOURCE1D;
}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 167 "lex.yy"
{
    bracket_level = 0;
    yy_push_state(resource1);
    return TEXTURERESOURCE2D;
}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 172 "lex.yy"
{
    bracket_level = 0;
    yy_push_state(resource1);
    return TEXTURERESOURCE3D;
}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 177 "lex.yy"
{
    bracket_level = 0;
    yy_push_state(resource1);
    return TEXTURERESOURCERECT;
}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 182 "lex.yy"
{
    comment_caller  =  INITIAL;
    bracket_level = 0;
    yy_push_state(shader);
    return GLSLSHADER;
}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 188 "lex.yy"
{
    comment_caller  =  INITIAL;
    bracket_level = 0;
    yy_push_state(shader);
    return SVGPATH;
}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 194 "lex.yy"
{
    comment_caller  =  INITIAL;
    bracket_level = 0;
    yy_push_state(shader);
    return PSPATH;
}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 200 "lex.yy"
{
    comment_caller  =  INITIAL;
    bracket_level = 0;
    yy_push_state(shader);
    return HLSL10SHADER;
}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 206 "lex.yy"
{
    comment_caller  =  INITIAL;
    bracket_level = 0;
    yy_push_state(shader);
    return HLSL11SHADER;
}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 212 "lex.yy"
{
    comment_caller  =  INITIAL;
    bracket_level = 0;
    yy_push_state(shader);
    return CUDACODE;
}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 218 "lex.yy"
{
    comment_caller  =  INITIAL;
    bracket_level = 0;
    yy_push_state(shader);
    return CUDAKERNEL;
}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 224 "lex.yy"
{
    yy_push_state(sampler_state);
    return SAMPLER_STATE;
}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 228 "lex.yy"
{
    yy_push_state(dst_state);
    return DST_STATE;
}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 232 "lex.yy"
{
    yy_push_state(pr_state);
    return PR_STATE;
}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 236 "lex.yy"
{
    yy_push_state(color_sample_state);
    return COLOR_SAMPLE_STATE;
}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 240 "lex.yy"
{
    yy_push_state(color_sample_state);
    return COLOR_SAMPLE_STATE;
}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 244 "lex.yy"
{
    yy_push_state(rasterization_state);
    return RASTERIZATION_STATE;
}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 248 "lex.yy"
{
    yy_push_state(technique);
    return TECHNIQUE;
}
	YY_BREAK
/*
    Constant Buffer
    */
case 28:
YY_RULE_SETUP
#line 255 "lex.yy"
{
    yy_push_state(cstbuffer);
    return CSTBUFFER;
}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 260 "lex.yy"
{
    return EXTENSION;
}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 264 "lex.yy"
{
    return SEPARATE_SHADER;
}
	YY_BREAK
/*
    OPTIX.
    Not using any restricted scope since I should change the whole lexer to avoid this (TODO)
    */
case 31:
YY_RULE_SETUP
#line 272 "lex.yy"
return OPTIX_CONTEXT;
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 273 "lex.yy"
return OPTIX_CONTEXT_ENTRY;
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 274 "lex.yy"
return RAY_GENERATION_PROGRAM;
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 275 "lex.yy"
return EXCEPTION_PROGRAM;
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 276 "lex.yy"
return INTERSECTION_PROGRAM;
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 277 "lex.yy"
return BOUNDING_BOX_PROGRAM;
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 278 "lex.yy"
return MISS_PROGRAM;
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 279 "lex.yy"
return DEFAULT_MATERIAL;
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 280 "lex.yy"
return STACK_SIZE;
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 281 "lex.yy"
return OUTPUT_BUFFER;
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 283 "lex.yy"
return OPTIX_MATERIAL;
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 284 "lex.yy"
return CLOSEST_HIT_PROGRAM;
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 285 "lex.yy"
return ANY_HIT_PROGRAM;
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 287 "lex.yy"
return OPTIX_BUFFER;
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 288 "lex.yy"
return RESOURCESIZE;    /*could be later used by other parts of the grammar*/
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 289 "lex.yy"
return RESOURCEFORMAT;
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 291 "lex.yy"
return PTX_PROGRAM_FROM_FILE; /* not only for Optix*/
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 292 "lex.yy"
return FILE_NAME;
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 293 "lex.yy"
return ENTRY_POINT;
	YY_BREAK

case 50:
YY_RULE_SETUP
#line 297 "lex.yy"
{
        return yytext[0];
    }
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 300 "lex.yy"
{
        //yy_pop_state();
        return yytext[0];
    }
	YY_BREAK


case 52:
YY_RULE_SETUP
#line 306 "lex.yy"
return VOID_TYPE;
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 307 "lex.yy"
return UNSIGNED;
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 308 "lex.yy"
return FLOAT_TYPE;
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 309 "lex.yy"
return FLOAT2_TYPE;
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 310 "lex.yy"
return FLOAT3_TYPE;
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 311 "lex.yy"
return FLOAT4_TYPE;
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 312 "lex.yy"
return FLOAT2_TYPE;
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 313 "lex.yy"
return FLOAT3_TYPE;
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 314 "lex.yy"
return FLOAT4_TYPE;
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 315 "lex.yy"
return MAT2_TYPE;
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 316 "lex.yy"
return MAT3_TYPE;
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 317 "lex.yy"
return MAT4_TYPE;
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 318 "lex.yy"
return MAT2_TYPE;
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 319 "lex.yy"
return MAT3_TYPE;
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 320 "lex.yy"
return MAT4_TYPE;
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 321 "lex.yy"
return BOOL_TYPE;
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 322 "lex.yy"
return BOOL2_TYPE;
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 323 "lex.yy"
return BOOL3_TYPE;
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 324 "lex.yy"
return BOOL4_TYPE;
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 325 "lex.yy"
return INT_TYPE;
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 326 "lex.yy"
return INT2_TYPE;
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 327 "lex.yy"
return INT3_TYPE;
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 328 "lex.yy"
return INT4_TYPE;
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 329 "lex.yy"
return INT2_TYPE;
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 330 "lex.yy"
return INT3_TYPE;
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 331 "lex.yy"
return INT4_TYPE;
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 332 "lex.yy"
return UNIFORM;
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 333 "lex.yy"
return MEDIUMP;
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 334 "lex.yy"
return HIGHP;
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 335 "lex.yy"
return LOWP;
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 336 "lex.yy"
return TEXTURE1D_TYPE;
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 337 "lex.yy"
return TEXTURE2D_TYPE;
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 338 "lex.yy"
return TEXTURE2DRECT_TYPE;
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 339 "lex.yy"
return TEXTURE3D_TYPE;
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 340 "lex.yy"
return TEXTURECUBE_TYPE;
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 341 "lex.yy"
return SAMPLER1D_TYPE;
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 342 "lex.yy"
return SAMPLER2D_TYPE;
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 343 "lex.yy"
return SAMPLER2DRECT_TYPE;
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 344 "lex.yy"
return SAMPLER3D_TYPE;
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 345 "lex.yy"
return SAMPLERCUBE_TYPE;
	YY_BREAK

/*==================================================================
      Float/double values
    */

case 92:
YY_RULE_SETUP
#line 351 "lex.yy"
{
        yylval.ival = atoi(yytext);
        return FX_INT;
    }
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 355 "lex.yy"
{
        sscanf(yytext, "0x%x", &yylval.ival);
        return FX_INT;
    }
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 359 "lex.yy"
{
        yylval.fval = (float)atof(yytext);
        return FX_FLOAT;
    }
	YY_BREAK

/*==================================================================
      Boolean
    */

case 95:
YY_RULE_SETUP
#line 368 "lex.yy"
return FX_TRUE;
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 369 "lex.yy"
return FX_FALSE;
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 370 "lex.yy"
return FX_TRUE;
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 371 "lex.yy"
return FX_FALSE;
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 372 "lex.yy"
return FX_TRUE;
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 373 "lex.yy"
return FX_FALSE;
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 374 "lex.yy"
return FX_TRUE;
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 375 "lex.yy"
return FX_FALSE;
	YY_BREAK

/*==================================================================
      OpenGL Enums
    */

case 103:
YY_RULE_SETUP
#line 381 "lex.yy"
yylval.glenum=GLACCUM; return GLACCUM;
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 382 "lex.yy"
yylval.glenum=GLLOAD; return GLLOAD;
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 383 "lex.yy"
yylval.glenum=GLRETURN; return GLRETURN;
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 384 "lex.yy"
yylval.glenum=GLMULT; return GLMULT;
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 385 "lex.yy"
yylval.glenum=GLADD; return GLADD;
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 386 "lex.yy"
yylval.glenum=GLNEVER; return GLNEVER;
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 387 "lex.yy"
yylval.glenum=GLLESS; return GLLESS;
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 388 "lex.yy"
yylval.glenum=GLEQUAL; return GLEQUAL;
	YY_BREAK
case 111:
YY_RULE_SETUP
#line 389 "lex.yy"
yylval.glenum=GLGREATER; return GLGREATER;
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 390 "lex.yy"
yylval.glenum=GLNOTEQUAL; return GLNOTEQUAL;
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 391 "lex.yy"
yylval.glenum=GLALWAYS; return GLALWAYS;
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 392 "lex.yy"
yylval.glenum=GLLEQUAL; return GLLEQUAL;
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 393 "lex.yy"
yylval.glenum=GLGEQUAL; return GLGEQUAL;
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 394 "lex.yy"
yylval.glenum=GLKEEP; return GLKEEP;
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 395 "lex.yy"
yylval.glenum=GLREPLACE; return GLREPLACE;
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 396 "lex.yy"
yylval.glenum=GLINCR; return GLINCR;
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 397 "lex.yy"
yylval.glenum=GLDECR; return GLDECR;
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 398 "lex.yy"
yylval.glenum=GLUPPERLEFT; return GLUPPERLEFT;
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 399 "lex.yy"
yylval.glenum=GLLOWERLEFT; return GLLOWERLEFT;
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 400 "lex.yy"
yylval.glenum=GLFRONTLEFT; return GLFRONTLEFT;
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 401 "lex.yy"
yylval.glenum=GLFRONTRIGHT; return GLFRONTRIGHT;
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 402 "lex.yy"
yylval.glenum=GLBACKLEFT; return GLBACKLEFT;
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 403 "lex.yy"
yylval.glenum=GLBACKRIGHT; return GLBACKRIGHT;
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 404 "lex.yy"
yylval.glenum=GLFRONT; return GLFRONT;
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 405 "lex.yy"
yylval.glenum=GLBACK; return GLBACK;
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 406 "lex.yy"
yylval.glenum=GLLEFT; return GLLEFT;
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 407 "lex.yy"
yylval.glenum=GLRIGHT; return GLRIGHT;
	YY_BREAK
case 130:
YY_RULE_SETUP
#line 408 "lex.yy"
yylval.glenum=GLFRONTANDBACK; return GLFRONTANDBACK;
	YY_BREAK
case 131:
YY_RULE_SETUP
#line 409 "lex.yy"
yylval.glenum=GLCCW; return GLCCW;
	YY_BREAK
case 132:
YY_RULE_SETUP
#line 410 "lex.yy"
yylval.glenum=GLCCW; return GLCCW;
	YY_BREAK
case 133:
YY_RULE_SETUP
#line 411 "lex.yy"
yylval.glenum=GLPOINT; return GLPOINT;
	YY_BREAK
case 134:
YY_RULE_SETUP
#line 412 "lex.yy"
yylval.glenum=GLLINE; return GLLINE;
	YY_BREAK
case 135:
YY_RULE_SETUP
#line 413 "lex.yy"
yylval.glenum=GLFILL; return GLFILL;
	YY_BREAK
case 136:
YY_RULE_SETUP
#line 414 "lex.yy"
yylval.glenum=GLZERO; return GLZERO;
	YY_BREAK
case 137:
YY_RULE_SETUP
#line 415 "lex.yy"
yylval.glenum=GLONE; return GLONE;
	YY_BREAK
case 138:
YY_RULE_SETUP
#line 416 "lex.yy"
yylval.glenum=GLSRCCOLOR; return GLSRCCOLOR;
	YY_BREAK
case 139:
YY_RULE_SETUP
#line 417 "lex.yy"
yylval.glenum=GLONEMINUSSRCCOLOR; return GLONEMINUSSRCCOLOR;
	YY_BREAK
case 140:
YY_RULE_SETUP
#line 418 "lex.yy"
yylval.glenum=GLSRCALPHA; return GLSRCALPHA;
	YY_BREAK
case 141:
YY_RULE_SETUP
#line 419 "lex.yy"
yylval.glenum=GLONEMINUSSRCALPHA; return GLONEMINUSSRCALPHA;
	YY_BREAK
case 142:
YY_RULE_SETUP
#line 420 "lex.yy"
yylval.glenum=GLDSTALPHA; return GLDSTALPHA;
	YY_BREAK
case 143:
YY_RULE_SETUP
#line 421 "lex.yy"
yylval.glenum=GLONEMINUSDSTALPHA; return GLONEMINUSDSTALPHA;
	YY_BREAK
case 144:
YY_RULE_SETUP
#line 422 "lex.yy"
yylval.glenum=GLDSTCOLOR; return GLDSTCOLOR;
	YY_BREAK
case 145:
YY_RULE_SETUP
#line 423 "lex.yy"
yylval.glenum=GLONEMINUSDSTCOLOR; return GLONEMINUSDSTCOLOR;
	YY_BREAK
case 146:
YY_RULE_SETUP
#line 424 "lex.yy"
yylval.glenum=GLSRCALPHASATURATE; return GLSRCALPHASATURATE;
	YY_BREAK
case 147:
YY_RULE_SETUP
#line 425 "lex.yy"
yylval.glenum=GLCONSTANTCOLOR; return GLCONSTANTCOLOR;
	YY_BREAK
case 148:
YY_RULE_SETUP
#line 426 "lex.yy"
yylval.glenum=GLONEMINUSCONSTANTCOLOR; return GLONEMINUSCONSTANTCOLOR;
	YY_BREAK
case 149:
YY_RULE_SETUP
#line 427 "lex.yy"
yylval.glenum=GLCONSTANTALPHA; return GLCONSTANTALPHA;
	YY_BREAK
case 150:
YY_RULE_SETUP
#line 428 "lex.yy"
yylval.glenum=GLONEMINUSCONSTANTALPHA; return GLONEMINUSCONSTANTALPHA;
	YY_BREAK
case 151:
YY_RULE_SETUP
#line 429 "lex.yy"
yylval.glenum=GLBLENDCOLOR; return GLBLENDCOLOR;
	YY_BREAK
case 152:
YY_RULE_SETUP
#line 430 "lex.yy"
yylval.glenum=GLFUNCADD; return GLFUNCADD;
	YY_BREAK
case 153:
YY_RULE_SETUP
#line 431 "lex.yy"
yylval.glenum=GLMIN; return GLMIN;
	YY_BREAK
case 154:
YY_RULE_SETUP
#line 432 "lex.yy"
yylval.glenum=GLMAX; return GLMAX;
	YY_BREAK
case 155:
YY_RULE_SETUP
#line 433 "lex.yy"
yylval.glenum=GLFUNCSUBTRACT; return GLFUNCSUBTRACT;
	YY_BREAK
case 156:
YY_RULE_SETUP
#line 434 "lex.yy"
yylval.glenum=GLFUNCREVERSESUBTRACT; return GLFUNCREVERSESUBTRACT;
	YY_BREAK
case 157:
YY_RULE_SETUP
#line 435 "lex.yy"
yylval.glenum=GLCLEAR; return GLCLEAR;
	YY_BREAK
case 158:
YY_RULE_SETUP
#line 436 "lex.yy"
yylval.glenum=GLSET; return GLSET;
	YY_BREAK
case 159:
YY_RULE_SETUP
#line 437 "lex.yy"
yylval.glenum=GLCOPY; return GLCOPY;
	YY_BREAK
case 160:
YY_RULE_SETUP
#line 438 "lex.yy"
yylval.glenum=GLCOPYINVERTED; return GLCOPYINVERTED;
	YY_BREAK
case 161:
YY_RULE_SETUP
#line 439 "lex.yy"
yylval.glenum=GLNOOP; return GLNOOP;
	YY_BREAK
case 162:
YY_RULE_SETUP
#line 440 "lex.yy"
yylval.glenum=GLINVERT; return GLINVERT;
	YY_BREAK
case 163:
YY_RULE_SETUP
#line 441 "lex.yy"
yylval.glenum=GLAND; return GLAND;
	YY_BREAK
case 164:
YY_RULE_SETUP
#line 442 "lex.yy"
yylval.glenum=GLNAND; return GLNAND;
	YY_BREAK
case 165:
YY_RULE_SETUP
#line 443 "lex.yy"
yylval.glenum=GLOR; return GLOR;
	YY_BREAK
case 166:
YY_RULE_SETUP
#line 444 "lex.yy"
yylval.glenum=GLNOR; return GLNOR;
	YY_BREAK
case 167:
YY_RULE_SETUP
#line 445 "lex.yy"
yylval.glenum=GLXOR; return GLXOR;
	YY_BREAK
case 168:
YY_RULE_SETUP
#line 446 "lex.yy"
yylval.glenum=GLEQUIV; return GLEQUIV;
	YY_BREAK
case 169:
YY_RULE_SETUP
#line 447 "lex.yy"
yylval.glenum=GLANDREVERSE; return GLANDREVERSE;
	YY_BREAK
case 170:
YY_RULE_SETUP
#line 448 "lex.yy"
yylval.glenum=GLANDINVERTED; return GLANDINVERTED;
	YY_BREAK
case 171:
YY_RULE_SETUP
#line 449 "lex.yy"
yylval.glenum=GLORREVERSE; return GLORREVERSE;
	YY_BREAK
case 172:
YY_RULE_SETUP
#line 450 "lex.yy"
yylval.glenum=GLORINVERTED; return GLORINVERTED;
	YY_BREAK
case 173:
YY_RULE_SETUP
#line 451 "lex.yy"
yylval.glenum=GLLUMINANCE; return GLLUMINANCE;
	YY_BREAK
case 174:
YY_RULE_SETUP
#line 452 "lex.yy"
yylval.glenum=GLALPHA; return GLALPHA;
	YY_BREAK
case 175:
YY_RULE_SETUP
#line 453 "lex.yy"
yylval.glenum=GLINTENSITY; return GLINTENSITY;
	YY_BREAK
case 176:
YY_RULE_SETUP
#line 454 "lex.yy"
yylval.glenum=GLLUMINANCEALPHA; return GLLUMINANCEALPHA;
	YY_BREAK
case 177:
YY_RULE_SETUP
#line 455 "lex.yy"
yylval.glenum=GLRGB; return GLRGB;
	YY_BREAK
case 178:
YY_RULE_SETUP
#line 456 "lex.yy"
yylval.glenum=GLRGBA; return GLRGBA;
	YY_BREAK


case 179:
YY_RULE_SETUP
#line 459 "lex.yy"
{
        return yytext[0];
    }
	YY_BREAK
case 180:
YY_RULE_SETUP
#line 462 "lex.yy"
{
        //yy_pop_state();
        return yytext[0];
    }
	YY_BREAK
case 181:
YY_RULE_SETUP
#line 466 "lex.yy"
yylval.glenum=GLPOINTSIZE; return GLPOINTSIZE;
	YY_BREAK
case 182:
YY_RULE_SETUP
#line 467 "lex.yy"
yylval.glenum=GLPOINTSMOOTH; return GLPOINTSMOOTH;
	YY_BREAK
case 183:
YY_RULE_SETUP
#line 468 "lex.yy"
yylval.glenum=GLPOINTSPRITE; return GLPOINTSPRITE;
	YY_BREAK
case 184:
YY_RULE_SETUP
#line 469 "lex.yy"
yylval.glenum=GLPROGRAMPOINTSIZE; return GLPROGRAMPOINTSIZE;
	YY_BREAK
case 185:
YY_RULE_SETUP
#line 470 "lex.yy"
yylval.glenum=GLPOINTSPRITECOORDORIGIN; return GLPOINTSPRITECOORDORIGIN;
	YY_BREAK
case 186:
YY_RULE_SETUP
#line 471 "lex.yy"
yylval.glenum=GLLINEWIDTH; return GLLINEWIDTH;
	YY_BREAK
case 187:
YY_RULE_SETUP
#line 472 "lex.yy"
yylval.glenum=GLLINESMOOTH; return GLLINESMOOTH;
	YY_BREAK
/*COMBINED_LINE_STIPPLE_NV yylval.glenum=GLCOMBINEDLINESTIPPLENV; return GLCOMBINEDLINESTIPPLENV;*/
case 188:
YY_RULE_SETUP
#line 474 "lex.yy"
yylval.glenum=GLLINESTIPPLEPATTERN; return GLLINESTIPPLEPATTERN;
	YY_BREAK
case 189:
YY_RULE_SETUP
#line 475 "lex.yy"
yylval.glenum=GLLINESTIPPLEREPEAT; return GLLINESTIPPLEREPEAT;
	YY_BREAK
case 190:
YY_RULE_SETUP
#line 476 "lex.yy"
yylval.glenum=GLLINESTIPPLE; return GLLINESTIPPLE;
	YY_BREAK
case 191:
YY_RULE_SETUP
#line 477 "lex.yy"
yylval.glenum=GLCULLFACE; return GLCULLFACE;
	YY_BREAK
case 192:
YY_RULE_SETUP
#line 478 "lex.yy"
yylval.glenum=GLCULLFACEMODE; return GLCULLFACEMODE;
	YY_BREAK
case 193:
YY_RULE_SETUP
#line 479 "lex.yy"
yylval.glenum=GLFRONTFACE; return GLFRONTFACE;
	YY_BREAK
case 194:
YY_RULE_SETUP
#line 480 "lex.yy"
yylval.glenum=GLPOLYGONSMOOTH; return GLPOLYGONSMOOTH;
	YY_BREAK
case 195:
YY_RULE_SETUP
#line 481 "lex.yy"
yylval.glenum=GLPOLYGONMODE; return GLPOLYGONMODE;
	YY_BREAK
case 196:
YY_RULE_SETUP
#line 482 "lex.yy"
yylval.glenum=GLPOLYGONOFFSETFACTOR; return GLPOLYGONOFFSETFACTOR;
	YY_BREAK
case 197:
YY_RULE_SETUP
#line 483 "lex.yy"
yylval.glenum=GLPOLYGONOFFSETUNITS; return GLPOLYGONOFFSETUNITS;
	YY_BREAK
case 198:
YY_RULE_SETUP
#line 484 "lex.yy"
yylval.glenum=GLPOLYGONOFFSETPOINT; return GLPOLYGONOFFSETPOINT;
	YY_BREAK
case 199:
YY_RULE_SETUP
#line 485 "lex.yy"
yylval.glenum=GLPOLYGONOFFSETLINE; return GLPOLYGONOFFSETLINE;
	YY_BREAK
case 200:
YY_RULE_SETUP
#line 486 "lex.yy"
yylval.glenum=GLPOLYGONOFFSETFILL; return GLPOLYGONOFFSETFILL;
	YY_BREAK
case 201:
YY_RULE_SETUP
#line 487 "lex.yy"
return GLPOLYGONOFFSET;
	YY_BREAK
case 202:
YY_RULE_SETUP
#line 488 "lex.yy"
yylval.glenum=GLPOLYGONSTIPPLEBIT; return GLPOLYGONSTIPPLEBIT;
	YY_BREAK
case 203:
YY_RULE_SETUP
#line 489 "lex.yy"
yylval.glenum=GLRASTERIZERDISCARD; return GLRASTERIZERDISCARD;
	YY_BREAK


case 204:
YY_RULE_SETUP
#line 492 "lex.yy"
{
        return yytext[0];
    }
	YY_BREAK
case 205:
YY_RULE_SETUP
#line 495 "lex.yy"
{
        //yy_pop_state();
        return yytext[0];
    }
	YY_BREAK
case 206:
YY_RULE_SETUP
#line 499 "lex.yy"
yylval.glenum=GLALPHATEST; return GLALPHATEST;
	YY_BREAK
case 207:
YY_RULE_SETUP
#line 500 "lex.yy"
yylval.glenum=GLALPHATESTFUNC; return GLALPHATESTFUNC;
	YY_BREAK
case 208:
YY_RULE_SETUP
#line 501 "lex.yy"
yylval.glenum=GLALPHATESTREF; return GLALPHATESTREF;
	YY_BREAK
case 209:
YY_RULE_SETUP
#line 502 "lex.yy"
return GLALPHAFUNC;
	YY_BREAK
case 210:
YY_RULE_SETUP
#line 503 "lex.yy"
yylval.glenum=GLBLEND; return GLBLEND;
	YY_BREAK
case 211:
YY_RULE_SETUP
#line 504 "lex.yy"
return GLBLENDFUNCSEPARATE;
	YY_BREAK
case 212:
YY_RULE_SETUP
#line 505 "lex.yy"
return GLBLENDFUNC;
	YY_BREAK
case 213:
YY_RULE_SETUP
#line 506 "lex.yy"
yylval.glenum=GLBLENDSRC; return GLBLENDSRC;
	YY_BREAK
case 214:
YY_RULE_SETUP
#line 507 "lex.yy"
yylval.glenum=GLBLENDSRCRGB; return GLBLENDSRCRGB;
	YY_BREAK
case 215:
YY_RULE_SETUP
#line 508 "lex.yy"
yylval.glenum=GLBLENDSRCALPHA; return GLBLENDSRCALPHA;
	YY_BREAK
case 216:
YY_RULE_SETUP
#line 509 "lex.yy"
yylval.glenum=GLBLENDDST; return GLBLENDDST;
	YY_BREAK
case 217:
YY_RULE_SETUP
#line 510 "lex.yy"
yylval.glenum=GLBLENDDSTRGB; return GLBLENDDSTRGB;
	YY_BREAK
case 218:
YY_RULE_SETUP
#line 511 "lex.yy"
yylval.glenum=GLBLENDDSTALPHA; return GLBLENDDSTALPHA;
	YY_BREAK
/*BLEND_EQUATION_RGBA_NV yylval.glenum=GLBLENDEQUATIONRGBANV; return GLBLENDEQUATIONRGBANV;*/
case 219:
YY_RULE_SETUP
#line 513 "lex.yy"
yylval.glenum=GLBLENDEQUATIONRGB; return GLBLENDEQUATIONRGB;
	YY_BREAK
case 220:
YY_RULE_SETUP
#line 514 "lex.yy"
yylval.glenum=GLBLENDEQUATIONALPHA; return GLBLENDEQUATIONALPHA;
	YY_BREAK
case 221:
YY_RULE_SETUP
#line 515 "lex.yy"
return GLBLENDEQUATION;
	YY_BREAK
/*BlendEquationSeparate return GLBLENDEQUATIONSEPARATE;*/
case 222:
YY_RULE_SETUP
#line 517 "lex.yy"
return GLBLENDEQUATION;
	YY_BREAK
/*PER_DRAW_BUFFER_BLEND_FUNCTION_NV yylval.glenum=GLPERDRAWBUFFERBLENDFUNCTIONNV; return GLPERDRAWBUFFERBLENDFUNCTIONNV;
    PER_DRAW_BUFFER_BLEND_EQUATION_NV yylval.glenum=GLPERDRAWBUFFERBLENDEQUATIONNV; return GLPERDRAWBUFFERBLENDEQUATIONNV;
    PER_DRAW_BUFFER_BLEND_ENABLE_NV yylval.glenum=GLPERDRAWBUFFERBLENDENABLENV; return GLPERDRAWBUFFERBLENDENABLENV;
    PER_DRAW_BUFFER_COLOR_WRITEMASK_NV yylval.glenum=GLPERDRAWBUFFERCOLORWRITEMASKNV; return GLPERDRAWBUFFERCOLORWRITEMASKNV;*/
/*BLEND_COLOR yylval.glenum=GLBLENDCOLOR; return GLBLENDCOLOR;*/
case 223:
YY_RULE_SETUP
#line 523 "lex.yy"
yylval.glenum=GLFRAMEBUFFERSRGB; return GLFRAMEBUFFERSRGB;
	YY_BREAK
case 224:
YY_RULE_SETUP
#line 524 "lex.yy"
yylval.glenum=GLDITHER; return GLDITHER;
	YY_BREAK
case 225:
YY_RULE_SETUP
#line 525 "lex.yy"
yylval.glenum=GLCOLORLOGICOP; return GLCOLORLOGICOP;
	YY_BREAK
case 226:
YY_RULE_SETUP
#line 526 "lex.yy"
yylval.glenum=GLLOGICOPMODE; return GLLOGICOPMODE;
	YY_BREAK
case 227:
YY_RULE_SETUP
#line 527 "lex.yy"
yylval.glenum=GLLOGICOPMODE; return GLLOGICOPMODE;
	YY_BREAK
case 228:
YY_RULE_SETUP
#line 528 "lex.yy"
yylval.glenum=GLCOLORWRITEMASK; return GLCOLORWRITEMASK;
	YY_BREAK
case 229:
YY_RULE_SETUP
#line 529 "lex.yy"
yylval.glenum=GLMULTISAMPLE; return GLMULTISAMPLE;
	YY_BREAK
case 230:
YY_RULE_SETUP
#line 530 "lex.yy"
yylval.glenum=GLSAMPLEMASK; return GLSAMPLEMASK;
	YY_BREAK
case 231:
YY_RULE_SETUP
#line 531 "lex.yy"
yylval.glenum=GLSAMPLEMASKVALUE; return GLSAMPLEMASKVALUE;
	YY_BREAK
case 232:
YY_RULE_SETUP
#line 532 "lex.yy"
yylval.glenum=GLSAMPLEALPHATOONE; return GLSAMPLEALPHATOONE;
	YY_BREAK
case 233:
YY_RULE_SETUP
#line 533 "lex.yy"
yylval.glenum=GLSAMPLEALPHATOCOVERAGE; return GLSAMPLEALPHATOCOVERAGE;
	YY_BREAK


case 234:
YY_RULE_SETUP
#line 536 "lex.yy"
{
        return yytext[0];
    }
	YY_BREAK
case 235:
YY_RULE_SETUP
#line 539 "lex.yy"
{
        //yy_pop_state();
        return yytext[0];
    }
	YY_BREAK
case 236:
YY_RULE_SETUP
#line 543 "lex.yy"
yylval.glenum=GLDEPTHTEST; return GLDEPTHTEST;
	YY_BREAK
case 237:
YY_RULE_SETUP
#line 544 "lex.yy"
yylval.glenum=GLDEPTHFUNC; return GLDEPTHFUNC;
	YY_BREAK
case 238:
YY_RULE_SETUP
#line 545 "lex.yy"
yylval.glenum=GLDEPTHWRITEMASK; return GLDEPTHWRITEMASK;
	YY_BREAK
case 239:
YY_RULE_SETUP
#line 546 "lex.yy"
yylval.glenum=GLDEPTHCLAMP; return GLDEPTHCLAMP;
	YY_BREAK
case 240:
YY_RULE_SETUP
#line 547 "lex.yy"
yylval.glenum=GLDEPTHBOUNDSTESTEXT; return GLDEPTHBOUNDSTESTEXT;
	YY_BREAK
case 241:
YY_RULE_SETUP
#line 548 "lex.yy"
yylval.glenum=GLDEPTHBOUNDSEXT; return GLDEPTHBOUNDSEXT;
	YY_BREAK
case 242:
YY_RULE_SETUP
#line 549 "lex.yy"
yylval.glenum=GLSTENCILTEST; return GLSTENCILTEST;
	YY_BREAK
case 243:
YY_RULE_SETUP
#line 550 "lex.yy"
yylval.glenum=GLSTENCILFUNC; return GLSTENCILFUNC;
	YY_BREAK
case 244:
YY_RULE_SETUP
#line 551 "lex.yy"
yylval.glenum=GLSTENCILVALUEMASK; return GLSTENCILVALUEMASK;
	YY_BREAK
case 245:
YY_RULE_SETUP
#line 552 "lex.yy"
yylval.glenum=GLSTENCILREF; return GLSTENCILREF;
	YY_BREAK
case 246:
YY_RULE_SETUP
#line 553 "lex.yy"
yylval.glenum=GLSTENCILFAIL; return GLSTENCILFAIL;
	YY_BREAK
case 247:
YY_RULE_SETUP
#line 554 "lex.yy"
yylval.glenum=GLSTENCILPASSDEPTHFAIL; return GLSTENCILPASSDEPTHFAIL;
	YY_BREAK
case 248:
YY_RULE_SETUP
#line 555 "lex.yy"
yylval.glenum=GLSTENCILPASSDEPTHPASS; return GLSTENCILPASSDEPTHPASS;
	YY_BREAK
case 249:
YY_RULE_SETUP
#line 556 "lex.yy"
yylval.glenum=GLSTENCILWRITEMASK; return GLSTENCILWRITEMASK;
	YY_BREAK
/*STENCIL_FRONT_FUNC yylval.glenum=GLSTENCILFRONTFUNC; return GLSTENCILFRONTFUNC;*/
/*STENCIL_FRONT_VALUE_MASK yylval.glenum=GLSTENCILFRONTVALUEMASK; return GLSTENCILFRONTVALUEMASK;*/
/*STENCIL_FRONT_REF yylval.glenum=GLSTENCILFRONTREF; return GLSTENCILFRONTREF;*/
/*STENCIL_FRONT_FAIL yylval.glenum=GLSTENCILFRONTFAIL; return GLSTENCILFRONTFAIL;*/
/*STENCIL_FRONT_PASS_DEPTH_FAIL yylval.glenum=GLSTENCILFRONTPASSDEPTHFAIL; return GLSTENCILFRONTPASSDEPTHFAIL;*/
/*STENCIL_FRONT_PASS_DEPTH_PASS yylval.glenum=GLSTENCILFRONTPASSDEPTHPASS; return GLSTENCILFRONTPASSDEPTHPASS;*/
/*STENCIL_FRONT_WRITEMASK yylval.glenum=GLSTENCILFRONTWRITEMASK; return GLSTENCILFRONTWRITEMASK;*/
case 250:
YY_RULE_SETUP
#line 564 "lex.yy"
yylval.glenum=GLSTENCILBACKFUNC; return GLSTENCILBACKFUNC;
	YY_BREAK
case 251:
YY_RULE_SETUP
#line 565 "lex.yy"
yylval.glenum=GLSTENCILBACKVALUEMASK; return GLSTENCILBACKVALUEMASK;
	YY_BREAK
case 252:
YY_RULE_SETUP
#line 566 "lex.yy"
yylval.glenum=GLSTENCILBACKREF; return GLSTENCILBACKREF;
	YY_BREAK
case 253:
YY_RULE_SETUP
#line 567 "lex.yy"
yylval.glenum=GLSTENCILBACKFAIL; return GLSTENCILBACKFAIL;
	YY_BREAK
case 254:
YY_RULE_SETUP
#line 568 "lex.yy"
yylval.glenum=GLSTENCILBACKPASSDEPTHFAIL; return GLSTENCILBACKPASSDEPTHFAIL;
	YY_BREAK
case 255:
YY_RULE_SETUP
#line 569 "lex.yy"
yylval.glenum=GLSTENCILBACKPASSDEPTHPASS; return GLSTENCILBACKPASSDEPTHPASS;
	YY_BREAK
case 256:
YY_RULE_SETUP
#line 570 "lex.yy"
yylval.glenum=GLSTENCILBACKWRITEMASK; return GLSTENCILBACKWRITEMASK;
	YY_BREAK
case 257:
YY_RULE_SETUP
#line 571 "lex.yy"
return GLSTENCILFUNCSEPARATE;
	YY_BREAK
case 258:
YY_RULE_SETUP
#line 572 "lex.yy"
return GLSTENCILOP;
	YY_BREAK
case 259:
YY_RULE_SETUP
#line 573 "lex.yy"
return GLSTENCILOPSEPARATE;
	YY_BREAK
case 260:
YY_RULE_SETUP
#line 574 "lex.yy"
return GLSTENCILBACKOP;
	YY_BREAK

/*==================================================================
      new GL enums for the Path rendering part
    */

case 261:
YY_RULE_SETUP
#line 580 "lex.yy"
yylval.glenum=GLFOGCOORDINATE; return GLFOGCOORDINATE;
	YY_BREAK
case 262:
YY_RULE_SETUP
#line 581 "lex.yy"
yylval.glenum=GLFRAGMENTDEPTH; return GLFRAGMENTDEPTH;
	YY_BREAK
case 263:
YY_RULE_SETUP
#line 582 "lex.yy"
yylval.glenum=GLOBJECTLINEAR; return GLOBJECTLINEAR;
	YY_BREAK
case 264:
YY_RULE_SETUP
#line 583 "lex.yy"
yylval.glenum=GLPATHOBJECTBOUNDINGBOX; return GLPATHOBJECTBOUNDINGBOX;
	YY_BREAK
case 265:
YY_RULE_SETUP
#line 584 "lex.yy"
yylval.glenum=GLEYELINEAR; return GLEYELINEAR;
	YY_BREAK
case 266:
YY_RULE_SETUP
#line 585 "lex.yy"
yylval.glenum=GLFLAT; return GLFLAT;
	YY_BREAK
case 267:
YY_RULE_SETUP
#line 586 "lex.yy"
yylval.glenum=GLSQUARE; return GLSQUARE;
	YY_BREAK
case 268:
YY_RULE_SETUP
#line 587 "lex.yy"
yylval.glenum=GLROUND; return GLROUND;
	YY_BREAK
case 269:
YY_RULE_SETUP
#line 588 "lex.yy"
yylval.glenum=GLTRIANGULAR; return GLTRIANGULAR;
	YY_BREAK
case 270:
YY_RULE_SETUP
#line 589 "lex.yy"
yylval.glenum=GLMITERREVERT; return GLMITERREVERT;
	YY_BREAK
case 271:
YY_RULE_SETUP
#line 590 "lex.yy"
yylval.glenum=GLMITERTRUNCATE; return GLMITERTRUNCATE;
	YY_BREAK
case 272:
YY_RULE_SETUP
#line 591 "lex.yy"
yylval.glenum=GLBEVEL; return GLBEVEL;
	YY_BREAK
case 273:
YY_RULE_SETUP
#line 592 "lex.yy"
yylval.glenum=GLMOVETORESET; return GLMOVETORESET;
	YY_BREAK
case 274:
YY_RULE_SETUP
#line 593 "lex.yy"
yylval.glenum=GLMOVETOCONTINUES; return GLMOVETOCONTINUES;
	YY_BREAK
case 275:
YY_RULE_SETUP
#line 594 "lex.yy"
yylval.glenum=GLCOUNTUP; return GLCOUNTUP;
	YY_BREAK
/*INVERT                 yylval.glenum=GLINVERT; return GLINVERT;*/
case 276:
YY_RULE_SETUP
#line 596 "lex.yy"
yylval.glenum=GLCOUNTDOWN; return GLCOUNTDOWN;
	YY_BREAK
case 277:
YY_RULE_SETUP
#line 597 "lex.yy"
yylval.glenum=GLBOUNDINGBOX; return GLBOUNDINGBOX;
	YY_BREAK
case 278:
YY_RULE_SETUP
#line 598 "lex.yy"
yylval.glenum=GLCONVEXHULL; return GLCONVEXHULL;
	YY_BREAK
case 279:
YY_RULE_SETUP
#line 599 "lex.yy"
yylval.glenum=GLTRANSLATE2D; return GLTRANSLATE2D;
	YY_BREAK
case 280:
YY_RULE_SETUP
#line 600 "lex.yy"
yylval.glenum=GLTRANSLATEX; return GLTRANSLATEX;
	YY_BREAK
case 281:
YY_RULE_SETUP
#line 601 "lex.yy"
yylval.glenum=GLTRANSLATEY; return GLTRANSLATEY;
	YY_BREAK
case 282:
YY_RULE_SETUP
#line 602 "lex.yy"
yylval.glenum=GLTRANSLATE3D; return GLTRANSLATE3D;
	YY_BREAK
case 283:
YY_RULE_SETUP
#line 603 "lex.yy"
yylval.glenum=GLAFFINE2D; return GLAFFINE2D;
	YY_BREAK
case 284:
YY_RULE_SETUP
#line 604 "lex.yy"
yylval.glenum=GLAFFINE3D; return GLAFFINE3D;
	YY_BREAK
case 285:
YY_RULE_SETUP
#line 605 "lex.yy"
yylval.glenum=GLTRANSPOSEAFFINE2D; return GLTRANSPOSEAFFINE2D;
	YY_BREAK
case 286:
YY_RULE_SETUP
#line 606 "lex.yy"
yylval.glenum=GLTRANSPOSEAFFINE3D; return GLTRANSPOSEAFFINE3D;
	YY_BREAK

/*==================================================================
      States for NV Path rendering. TODO: make it available as a state group, too
      For now, we only expose them in the pass
      TODO: grammar of render state of state groups could be simplified by returning special token depending on type of assignment
            ==> We could indeed return always the same TOKEN for many similar states while yylval.glenum would be different
    */

case 287:
YY_RULE_SETUP
#line 615 "lex.yy"
{
        return yytext[0];
    }
	YY_BREAK
case 288:
YY_RULE_SETUP
#line 618 "lex.yy"
{
        return yytext[0];
    }
	YY_BREAK
case 289:
YY_RULE_SETUP
#line 621 "lex.yy"
yylval.glenum= GLPATHSTENCILDEPTHOFFSET; return GLPATHSTENCILDEPTHOFFSET;
	YY_BREAK
case 290:
YY_RULE_SETUP
#line 622 "lex.yy"
yylval.glenum= GLPATHSTENCILFUNC; return GLPATHSTENCILFUNC;
	YY_BREAK
case 291:
YY_RULE_SETUP
#line 623 "lex.yy"
yylval.glenum= GLPATHFOGGEN; return GLPATHFOGGEN;
	YY_BREAK
case 292:
YY_RULE_SETUP
#line 624 "lex.yy"
yylval.glenum= GLPATHTEXGEN; return GLPATHTEXGEN;
	YY_BREAK
case 293:
YY_RULE_SETUP
#line 625 "lex.yy"
yylval.glenum= GLPATHCOLORGEN; return GLPATHCOLORGEN;
	YY_BREAK
case 294:
YY_RULE_SETUP
#line 626 "lex.yy"
yylval.glenum= GLPATHCOVERDEPTHFUNC; return GLPATHCOVERDEPTHFUNC;
	YY_BREAK
case 295:
YY_RULE_SETUP
#line 627 "lex.yy"
yylval.glenum= GLPATHSTROKEWIDTH; return GLPATHSTROKEWIDTH;
	YY_BREAK
case 296:
YY_RULE_SETUP
#line 628 "lex.yy"
yylval.glenum= GLPATHINITIALENDCAP; return GLPATHINITIALENDCAP;
	YY_BREAK
case 297:
YY_RULE_SETUP
#line 629 "lex.yy"
yylval.glenum= GLPATHTERMINALENDCAP; return GLPATHTERMINALENDCAP;
	YY_BREAK
case 298:
YY_RULE_SETUP
#line 630 "lex.yy"
yylval.glenum= GLPATHINITIALDASHCAP; return GLPATHINITIALDASHCAP;
	YY_BREAK
case 299:
YY_RULE_SETUP
#line 631 "lex.yy"
yylval.glenum= GLPATHTERMINALDASHCAP; return GLPATHTERMINALDASHCAP;
	YY_BREAK
case 300:
YY_RULE_SETUP
#line 632 "lex.yy"
yylval.glenum= GLPATHJOINSTYLE; return GLPATHJOINSTYLE;
	YY_BREAK
case 301:
YY_RULE_SETUP
#line 633 "lex.yy"
yylval.glenum= GLPATHMITERLIMIT; return GLPATHMITERLIMIT;
	YY_BREAK
case 302:
YY_RULE_SETUP
#line 634 "lex.yy"
yylval.glenum= GLPATHDASHOFFSET; return GLPATHDASHOFFSET;
	YY_BREAK
case 303:
YY_RULE_SETUP
#line 635 "lex.yy"
yylval.glenum= GLPATHDASHOFFSETRESET; return GLPATHDASHOFFSETRESET;
	YY_BREAK
case 304:
YY_RULE_SETUP
#line 636 "lex.yy"
yylval.glenum= GLPATHCLIENTLENGTH; return GLPATHCLIENTLENGTH;
	YY_BREAK
case 305:
YY_RULE_SETUP
#line 637 "lex.yy"
yylval.glenum= GLPATHFILLMODE; return GLPATHFILLMODE;
	YY_BREAK
case 306:
YY_RULE_SETUP
#line 638 "lex.yy"
yylval.glenum= GLPATHFILLMASK; return GLPATHFILLMASK;
	YY_BREAK
case 307:
YY_RULE_SETUP
#line 639 "lex.yy"
yylval.glenum= GLPATHFILLCOVERMODE; return GLPATHFILLCOVERMODE;
	YY_BREAK
case 308:
YY_RULE_SETUP
#line 640 "lex.yy"
yylval.glenum= GLPATHSTROKECOVERMODE; return GLPATHSTROKECOVERMODE;
	YY_BREAK
case 309:
YY_RULE_SETUP
#line 641 "lex.yy"
yylval.glenum= GLPATHSTROKEMASK; return GLPATHSTROKEMASK;
	YY_BREAK
case 310:
YY_RULE_SETUP
#line 642 "lex.yy"
yylval.glenum= GLPATHSTROKEREFERENCE; return GLPATHSTROKEREFERENCE;
	YY_BREAK
case 311:
YY_RULE_SETUP
#line 643 "lex.yy"
yylval.glenum= GLPATHTRANSFORMTYPE; return GLPATHTRANSFORMTYPE;
	YY_BREAK
case 312:
YY_RULE_SETUP
#line 644 "lex.yy"
yylval.glenum= GLPATHTRANSFORM; return GLPATHTRANSFORM;
	YY_BREAK

/*==================================================================
      Start of string
    */


case 313:
YY_RULE_SETUP
#line 651 "lex.yy"
string_buf_ptr  =  string_buf;  yy_push_state(str);
	YY_BREAK

/*==================================================================
      fallback for any other character : sent as a token ID
    */
/*. return yytext[0];*/
/*==================================================================
      Comment starting points
    */
case 314:
YY_RULE_SETUP
#line 661 "lex.yy"
{
    comment_caller  =  INITIAL;
    yy_push_state(comment);
}
	YY_BREAK
case 315:
YY_RULE_SETUP
#line 666 "lex.yy"
{
    comment_caller  =  INITIAL;
    yy_push_state(comment2);
}
	YY_BREAK

case 316:
YY_RULE_SETUP
#line 672 "lex.yy"
/*  eat  anything  that's  not  a  '*'  */
	YY_BREAK
case 317:
YY_RULE_SETUP
#line 673 "lex.yy"
/*  eat  up  '*'s  not  followed  by  '/'s  */
	YY_BREAK
case 318:
YY_RULE_SETUP
#line 674 "lex.yy"
++line_num;
	YY_BREAK
case 319:
YY_RULE_SETUP
#line 675 "lex.yy"
yy_pop_state();//BEGIN(comment_caller);
	YY_BREAK


case 320:
YY_RULE_SETUP
#line 679 "lex.yy"

	YY_BREAK
case 321:
YY_RULE_SETUP
#line 680 "lex.yy"
++line_num;  yy_pop_state();//BEGIN(comment_caller);
	YY_BREAK

/*==================================================================
      rules for inside a string
    */

case 322:
YY_RULE_SETUP
#line 687 "lex.yy"
{  /*  saw  closing  quote  -  all  done  */
        yy_pop_state();//BEGIN(INITIAL);
        *string_buf_ptr  =  '\0';
        yylval.s = new std::string(string_buf);
        return FX_STR;
    }
	YY_BREAK
case 323:
YY_RULE_SETUP
#line 693 "lex.yy"
{
        fprintf(stderr,"\nunterminated  string  constant at line %d\n", line_num);
        yyterminate();
    }
	YY_BREAK
case 324:
YY_RULE_SETUP
#line 697 "lex.yy"
{
        /*  octal  escape  sequence  */
        int  result;
        (void)  sscanf(  yytext  +  1,  "%o",  &result  );
        if  (  result  >  0xff  )
            /*  error,  constant  is  out-of-bounds  */
        *string_buf_ptr++  =  result;
    }
	YY_BREAK
case 325:
YY_RULE_SETUP
#line 705 "lex.yy"
{
        /*  generate  error  -  bad  escape  sequence;  something
        *  like  '\48'  or  '\0777777'
        */
    }
	YY_BREAK
case 326:
YY_RULE_SETUP
#line 710 "lex.yy"
*string_buf_ptr++  =  '\n';
	YY_BREAK
case 327:
YY_RULE_SETUP
#line 711 "lex.yy"
*string_buf_ptr++  =  '\t';
	YY_BREAK
case 328:
YY_RULE_SETUP
#line 712 "lex.yy"
*string_buf_ptr++  =  '\r';
	YY_BREAK
case 329:
YY_RULE_SETUP
#line 713 "lex.yy"
*string_buf_ptr++  =  '\b';
	YY_BREAK
case 330:
YY_RULE_SETUP
#line 714 "lex.yy"
*string_buf_ptr++  =  '\f';
	YY_BREAK
case 331:
YY_RULE_SETUP
#line 715 "lex.yy"
*string_buf_ptr++  =  yytext[1];
	YY_BREAK
case 332:
YY_RULE_SETUP
#line 716 "lex.yy"
{
        char  *yptr  =  yytext;
        while  (  *yptr  )
        *string_buf_ptr++  =  *yptr++;
    }
	YY_BREAK

/*==================================================================
      rules for inside a GLSL section
    */

case 333:
YY_RULE_SETUP
#line 727 "lex.yy"
{
        bracket_level = 1; // must be one...
        string_buf_ptr  =  string_buf;
        *string_buf_ptr = '\0';
        yy_push_state(shaderbody);
        return yytext[0];
    }
	YY_BREAK
case 334:
YY_RULE_SETUP
#line 734 "lex.yy"
{
        // TODO create and REGISTER the variable in a table
        yylval.s = new std::string(yytext);
        // NOTE: "::" is really not friendly with GLSL (and other shading languages... ?)
        int n = (int)yylval.s->find("::");
        if(n==0)
            yylval.s->replace(0, 2, "");
        if(n>0)
            yylval.s->replace(n, 2, "_NS_");
        return VARNAME;
    }
	YY_BREAK


case 335:
YY_RULE_SETUP
#line 747 "lex.yy"
{
        bracket_level++;
        *string_buf_ptr++  =  yytext[0];
    }
	YY_BREAK
case 336:
YY_RULE_SETUP
#line 751 "lex.yy"
{
        bracket_level--;
        if((bracket_level) == 0)
        {
            *string_buf_ptr  =  '\0';
            yylval.s = new std::string(string_buf);
            // get rid of possible namespaces (uniforms could have some, because of nvFX namespace)
            // This is for now the only case 
            while(1)
            {
                int n = (int)yylval.s->find("::");
                if(n<0)
                    break;
                yylval.s->replace(n, 2, "_NS_");
            }
            // shall I just do BEGIN(INITIAL) ?
            yy_pop_state(); // back to shader
            yy_pop_state();// back to INITIAL
            return CODEBODY;
        } else {
            *string_buf_ptr++  =  yytext[0];
        }
    }
	YY_BREAK
case 337:
YY_RULE_SETUP
#line 774 "lex.yy"
{  /*copy the GLSL data*/
        char  *yptr  =  yytext;
        while  (  *yptr  )
        *string_buf_ptr++  =  *yptr++;
        ++line_num; 
    }
	YY_BREAK
case 338:
YY_RULE_SETUP
#line 780 "lex.yy"
{  /*copy the GLSL data*/
        char  *yptr  =  yytext;
        while  (  *yptr  )
        *string_buf_ptr++  =  *yptr++;
    }
	YY_BREAK

/*==================================================================
      rules for inside a  section
    */

case 339:
YY_RULE_SETUP
#line 790 "lex.yy"
{
        comment_caller  =  INITIAL;
        yy_push_state(pass);
        return PASS;
    }
	YY_BREAK
case 340:
YY_RULE_SETUP
#line 795 "lex.yy"
{
        return yytext[0];
    }
	YY_BREAK
case 341:
YY_RULE_SETUP
#line 798 "lex.yy"
{
        //yy_pop_state();//BEGIN(INITIAL);
        return yytext[0];
    }
	YY_BREAK
case 342:
YY_RULE_SETUP
#line 802 "lex.yy"
return TECHNIQUE;
	YY_BREAK
case 343:
YY_RULE_SETUP
#line 803 "lex.yy"
return OFF;
	YY_BREAK

/*==================================================================
      rules for inside a  section
    */

/*\{  {
        return yytext[0];
    }
    \} {
        //yy_pop_state();
        return yytext[0];
    }*/
case 344:
YY_RULE_SETUP
#line 816 "lex.yy"
return OPTIX_CONTEXT;
	YY_BREAK
case 345:
YY_RULE_SETUP
#line 817 "lex.yy"
return OPTIX_CONTEXT_ENTRY;
	YY_BREAK
case 346:
YY_RULE_SETUP
#line 818 "lex.yy"
return VERTEXPROGRAM;
	YY_BREAK
/*VertexShader        return VERTEXPROGRAM;*/
case 347:
YY_RULE_SETUP
#line 820 "lex.yy"
return FRAGMENTPROGRAM;
	YY_BREAK
/*FragmentShader      return FRAGMENTPROGRAM;*/
/*PixelShader         return FRAGMENTPROGRAM;*/
case 348:
YY_RULE_SETUP
#line 823 "lex.yy"
return GEOMETRYPROGRAM;
	YY_BREAK
/*GeometryShader      return GEOMETRYPROGRAM;*/
/*HullShader          return HULLPROGRAM;*/
/*TCSShader           return HULLPROGRAM;*/
case 349:
YY_RULE_SETUP
#line 827 "lex.yy"
return HULLPROGRAM;
	YY_BREAK
/*EvalShader          return EVALPROGRAM;*/
/*EvalProgram         return EVALPROGRAM;*/
/*TESShader           return EVALPROGRAM;*/
case 350:
YY_RULE_SETUP
#line 831 "lex.yy"
return EVALPROGRAM;
	YY_BREAK
case 351:
YY_RULE_SETUP
#line 832 "lex.yy"
return COMPUTEPROGRAM;
	YY_BREAK
/*ComputeShader       return COMPUTEPROGRAM;*/
case 352:
YY_RULE_SETUP
#line 834 "lex.yy"
return PATHSOURCE;
	YY_BREAK
case 353:
YY_RULE_SETUP
#line 836 "lex.yy"
return VERTEXPROGRAMOVERRIDE;
	YY_BREAK
/*VertexShaderOverride    return VERTEXPROGRAMOVERRIDE;*/
case 354:
YY_RULE_SETUP
#line 838 "lex.yy"
return FRAGMENTPROGRAMOVERRIDE;
	YY_BREAK
/*FragmentShaderOverride  return FRAGMENTPROGRAMOVERRIDE;*/
/*PixelShaderOverride     return FRAGMENTPROGRAMOVERRIDE;*/
case 355:
YY_RULE_SETUP
#line 841 "lex.yy"
return GEOMETRYPROGRAMOVERRIDE;
	YY_BREAK
/*GeometryShaderOverride  return GEOMETRYPROGRAMOVERRIDE;*/
/*HullShaderOverride      return HULLPROGRAMOVERRIDE;*/
/*EvalShaderOverride      return EVALPROGRAMOVERRIDE;*/
case 356:
YY_RULE_SETUP
#line 845 "lex.yy"
return HULLPROGRAMOVERRIDE;
	YY_BREAK
case 357:
YY_RULE_SETUP
#line 846 "lex.yy"
return EVALPROGRAMOVERRIDE;
	YY_BREAK
case 358:
YY_RULE_SETUP
#line 847 "lex.yy"
return COMPUTEPROGRAMOVERRIDE;
	YY_BREAK
case 359:
YY_RULE_SETUP
#line 848 "lex.yy"
return COMPUTEPROGRAMOVERRIDE;
	YY_BREAK
case 360:
YY_RULE_SETUP
#line 850 "lex.yy"
return SHDPROFILE;
	YY_BREAK
case 361:
YY_RULE_SETUP
#line 851 "lex.yy"
return IMAGEACCESS;
	YY_BREAK
case 362:
YY_RULE_SETUP
#line 852 "lex.yy"
return IMAGELAYER;
	YY_BREAK
case 363:
YY_RULE_SETUP
#line 853 "lex.yy"
return IMAGELAYERED;
	YY_BREAK
case 364:
YY_RULE_SETUP
#line 854 "lex.yy"
return WRITE_ONLY;
	YY_BREAK
case 365:
YY_RULE_SETUP
#line 855 "lex.yy"
return READ_ONLY;
	YY_BREAK
case 366:
YY_RULE_SETUP
#line 856 "lex.yy"
return READ_WRITE;
	YY_BREAK
case 367:
YY_RULE_SETUP
#line 857 "lex.yy"
return IMAGERESOURCE;
	YY_BREAK
case 368:
YY_RULE_SETUP
#line 858 "lex.yy"
return UNIFORM;
	YY_BREAK
case 369:
YY_RULE_SETUP
#line 859 "lex.yy"
return IMAGEUNIT;
	YY_BREAK
case 370:
YY_RULE_SETUP
#line 860 "lex.yy"
return TEXTURERESOURCE;
	YY_BREAK
case 371:
YY_RULE_SETUP
#line 861 "lex.yy"
return SAMPLERRESOURCE;
	YY_BREAK
case 372:
YY_RULE_SETUP
#line 862 "lex.yy"
return SAMPLERTEXUNIT;
	YY_BREAK
case 373:
YY_RULE_SETUP
#line 863 "lex.yy"
return SETSAMPLERSTATE;
	YY_BREAK
case 374:
YY_RULE_SETUP
#line 864 "lex.yy"
return SETDSTSTATE;
	YY_BREAK
case 375:
YY_RULE_SETUP
#line 865 "lex.yy"
return SETRASTERIZATIONSTATE;
	YY_BREAK
case 376:
YY_RULE_SETUP
#line 866 "lex.yy"
return SETCOLORSAMPLESTATE;
	YY_BREAK
case 377:
YY_RULE_SETUP
#line 868 "lex.yy"
return IMAGEACCESSOVERRIDE;
	YY_BREAK
case 378:
YY_RULE_SETUP
#line 869 "lex.yy"
return IMAGELAYEROVERRIDE;
	YY_BREAK
case 379:
YY_RULE_SETUP
#line 870 "lex.yy"
return IMAGELAYEREDOVERRIDE;
	YY_BREAK
case 380:
YY_RULE_SETUP
#line 871 "lex.yy"
return IMAGERESOURCEOVERRIDE;
	YY_BREAK
case 381:
YY_RULE_SETUP
#line 872 "lex.yy"
return UNIFORMOVERRIDE;
	YY_BREAK
case 382:
YY_RULE_SETUP
#line 873 "lex.yy"
return IMAGEUNITOVERRIDE;
	YY_BREAK
case 383:
YY_RULE_SETUP
#line 874 "lex.yy"
return TEXTURERESOURCEOVERRIDE;
	YY_BREAK
case 384:
YY_RULE_SETUP
#line 875 "lex.yy"
return SAMPLERRESOURCEOVERRIDE;
	YY_BREAK
case 385:
YY_RULE_SETUP
#line 876 "lex.yy"
return SAMPLERTEXUNITOVERRIDE;
	YY_BREAK
case 386:
YY_RULE_SETUP
#line 877 "lex.yy"
return SETSAMPLERSTATEOVERRIDE;
	YY_BREAK
case 387:
YY_RULE_SETUP
#line 879 "lex.yy"
{
        yy_push_state(rendermode);
        return RENDERMODE;
    }
	YY_BREAK
case 388:
YY_RULE_SETUP
#line 883 "lex.yy"
return RENDERGROUP;
	YY_BREAK
case 389:
YY_RULE_SETUP
#line 884 "lex.yy"
return BLITFBOTOACTIVETARGET;
	YY_BREAK
case 390:
YY_RULE_SETUP
#line 885 "lex.yy"
return CLEARCOLOR;
	YY_BREAK
case 391:
YY_RULE_SETUP
#line 886 "lex.yy"
return CURRENTTARGET;
	YY_BREAK
case 392:
YY_RULE_SETUP
#line 887 "lex.yy"
return VIEWPORT;
	YY_BREAK
case 393:
YY_RULE_SETUP
#line 888 "lex.yy"
return SWAPRESOURCES;
	YY_BREAK
case 394:
YY_RULE_SETUP
#line 890 "lex.yy"
return LOOP;
	YY_BREAK
case 395:
YY_RULE_SETUP
#line 891 "lex.yy"
return ACTIVE;
	YY_BREAK
case 396:
YY_RULE_SETUP
#line 893 "lex.yy"
return CUDAMODULE;
	YY_BREAK
case 397:
YY_RULE_SETUP
#line 894 "lex.yy"
return CUDAKERNEL;
	YY_BREAK
case 398:
YY_RULE_SETUP
#line 895 "lex.yy"
return CUDASHAREDMEMORY;
	YY_BREAK
case 399:
YY_RULE_SETUP
#line 896 "lex.yy"
return CUDAGRID;
	YY_BREAK
case 400:
YY_RULE_SETUP
#line 897 "lex.yy"
return CUDABLOCK;
	YY_BREAK
case 401:
YY_RULE_SETUP
#line 899 "lex.yy"
return COMPUTEGROUPS;
	YY_BREAK
case 402:
YY_RULE_SETUP
#line 900 "lex.yy"
{
        yy_push_state(clearmode);
        return CLEARMODE;
    }
	YY_BREAK


case 403:
YY_RULE_SETUP
#line 906 "lex.yy"
return '=';
	YY_BREAK
case 404:
YY_RULE_SETUP
#line 907 "lex.yy"
{ yy_pop_state(); return ';'; }
	YY_BREAK
case 405:
YY_RULE_SETUP
#line 908 "lex.yy"
return '|';
	YY_BREAK
case 406:
YY_RULE_SETUP
#line 909 "lex.yy"
{ yylval.clear_mode = nvFX::Clear_none; return CLEAR_ENUM; }
	YY_BREAK
case 407:
YY_RULE_SETUP
#line 910 "lex.yy"
{ yylval.clear_mode = nvFX::Clear_all; return CLEAR_ENUM; }
	YY_BREAK
case 408:
YY_RULE_SETUP
#line 911 "lex.yy"
{ yylval.clear_mode = nvFX::Clear_color; return CLEAR_ENUM; }
	YY_BREAK
case 409:
YY_RULE_SETUP
#line 912 "lex.yy"
{ yylval.clear_mode = nvFX::Clear_depth; return CLEAR_ENUM; }
	YY_BREAK
case 410:
YY_RULE_SETUP
#line 913 "lex.yy"
{ yylval.clear_mode = nvFX::Clear_stencil; return CLEAR_ENUM; }
	YY_BREAK
case 411:
YY_RULE_SETUP
#line 914 "lex.yy"
{ yylval.clear_mode = nvFX::Clear_color; return CLEAR_ENUM; }
	YY_BREAK
case 412:
YY_RULE_SETUP
#line 915 "lex.yy"
{ yylval.clear_mode = nvFX::Clear_depth; return CLEAR_ENUM; }
	YY_BREAK
case 413:
YY_RULE_SETUP
#line 916 "lex.yy"
{ yylval.clear_mode = nvFX::Clear_stencil; return CLEAR_ENUM; }
	YY_BREAK
case 414:
YY_RULE_SETUP
#line 917 "lex.yy"
{ yylval.clear_mode = nvFX::Clear_color_depth; return CLEAR_ENUM; }
	YY_BREAK
case 415:
YY_RULE_SETUP
#line 918 "lex.yy"
{ yylval.clear_mode = nvFX::Clear_depth_stencil; return CLEAR_ENUM; }
	YY_BREAK


case 416:
YY_RULE_SETUP
#line 921 "lex.yy"
return '=';
	YY_BREAK
case 417:
YY_RULE_SETUP
#line 922 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_OPTIX; return RENDERMODE_ENUM; }
	YY_BREAK
case 418:
YY_RULE_SETUP
#line 923 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_SCENEGRAPH_SHADED; return RENDERMODE_ENUM; }
	YY_BREAK
case 419:
YY_RULE_SETUP
#line 924 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_SCENEGRAPH_NOSHADING; return RENDERMODE_ENUM; }
	YY_BREAK
case 420:
YY_RULE_SETUP
#line 925 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_FULLSCREEN_QUAD;return RENDERMODE_ENUM; }
	YY_BREAK
case 421:
YY_RULE_SETUP
#line 926 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_SCENEGRAPH_SHADED_OPAQUE_ONLY;return RENDERMODE_ENUM; }
	YY_BREAK
case 422:
YY_RULE_SETUP
#line 927 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_SCENEGRAPH_SHADED_TRANSPARENT_ONLY;return RENDERMODE_ENUM; }
	YY_BREAK
case 423:
YY_RULE_SETUP
#line 928 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_SCENEGRAPH_NOSHADING_OPAQUE_ONLY;return RENDERMODE_ENUM; }
	YY_BREAK
case 424:
YY_RULE_SETUP
#line 929 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_SCENEGRAPH_NOSHADING_TRANSPARENT_ONLY;return RENDERMODE_ENUM; }
	YY_BREAK
case 425:
YY_RULE_SETUP
#line 930 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_SCENEGRAPH_OUTLINES_ONLY;return RENDERMODE_ENUM; }
	YY_BREAK
case 426:
YY_RULE_SETUP
#line 931 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_DEBUG_QUAD0;return RENDERMODE_ENUM; }
	YY_BREAK
case 427:
YY_RULE_SETUP
#line 932 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_DEBUG_QUAD1;return RENDERMODE_ENUM; }
	YY_BREAK
case 428:
YY_RULE_SETUP
#line 933 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_DEBUG_QUAD2;return RENDERMODE_ENUM; }
	YY_BREAK
case 429:
YY_RULE_SETUP
#line 934 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_DEBUG_QUAD3;return RENDERMODE_ENUM; }
	YY_BREAK
case 430:
YY_RULE_SETUP
#line 935 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_DEBUG_SCENE;return RENDERMODE_ENUM; }
	YY_BREAK
case 431:
YY_RULE_SETUP
#line 936 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_DEBUG_SCENE_LINES;return RENDERMODE_ENUM; }
	YY_BREAK
case 432:
YY_RULE_SETUP
#line 937 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::DO_NOTHING;return RENDERMODE_ENUM; }
	YY_BREAK
case 433:
YY_RULE_SETUP
#line 938 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_OPTIX_REFLECTION;return RENDERMODE_ENUM; }
	YY_BREAK
case 434:
YY_RULE_SETUP
#line 939 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_OPTIX_SHADOW;return RENDERMODE_ENUM; }
	YY_BREAK
case 435:
YY_RULE_SETUP
#line 940 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_OPTIX_REFLECTION_AND_SHADOW;return RENDERMODE_ENUM; }
	YY_BREAK
case 436:
YY_RULE_SETUP
#line 941 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_OPTIX;return RENDERMODE_ENUM; }
	YY_BREAK
case 437:
YY_RULE_SETUP
#line 942 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RUN_CUDA;return RENDERMODE_ENUM; }
	YY_BREAK
case 438:
YY_RULE_SETUP
#line 943 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RUN_GLSLCOMPUTE;return RENDERMODE_ENUM; }
	YY_BREAK
case 439:
YY_RULE_SETUP
#line 944 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_CUSTOM0;return RENDERMODE_ENUM; }
	YY_BREAK
case 440:
YY_RULE_SETUP
#line 945 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_CUSTOM1;return RENDERMODE_ENUM; }
	YY_BREAK
case 441:
YY_RULE_SETUP
#line 946 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_CUSTOM2;return RENDERMODE_ENUM; }
	YY_BREAK
case 442:
YY_RULE_SETUP
#line 947 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_CUSTOM3;return RENDERMODE_ENUM; }
	YY_BREAK
case 443:
YY_RULE_SETUP
#line 948 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_CUSTOM4;return RENDERMODE_ENUM; }
	YY_BREAK
case 444:
YY_RULE_SETUP
#line 949 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_CUSTOM5;return RENDERMODE_ENUM; }
	YY_BREAK
case 445:
YY_RULE_SETUP
#line 950 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_CUSTOM6;return RENDERMODE_ENUM; }
	YY_BREAK
case 446:
YY_RULE_SETUP
#line 951 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_CUSTOM7;return RENDERMODE_ENUM; }
	YY_BREAK
case 447:
YY_RULE_SETUP
#line 952 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_CUSTOM8;return RENDERMODE_ENUM; }
	YY_BREAK
case 448:
YY_RULE_SETUP
#line 953 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_CUSTOM9;return RENDERMODE_ENUM; }
	YY_BREAK
case 449:
YY_RULE_SETUP
#line 954 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_STENCILFILLPATH;return RENDERMODE_ENUM; }
	YY_BREAK
case 450:
YY_RULE_SETUP
#line 955 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_STENCILSTROKEPATH;return RENDERMODE_ENUM; }
	YY_BREAK
case 451:
YY_RULE_SETUP
#line 956 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_COVERFILLPATH;return RENDERMODE_ENUM; }
	YY_BREAK
case 452:
YY_RULE_SETUP
#line 957 "lex.yy"
{ yy_pop_state(); yylval.render_mode = nvFX::RENDER_COVERSTROKEPATH;return RENDERMODE_ENUM; }
	YY_BREAK


case 453:
YY_RULE_SETUP
#line 960 "lex.yy"
return ATTRIBUTE;
	YY_BREAK

/*==================================================================
      rules for inside a  FBO section 
    */

case 454:
YY_RULE_SETUP
#line 966 "lex.yy"
{
        yy_push_state(fbo); //leads to 'fbo' (fbo1 is a fast transition part)
        return yytext[0];
    }
	YY_BREAK
case 455:
YY_RULE_SETUP
#line 970 "lex.yy"
{
        yy_pop_state();
        return yytext[0];
    }
	YY_BREAK

/*==================================================================
      rules for inside a  FBO section 
    */

case 456:
YY_RULE_SETUP
#line 979 "lex.yy"
{
        return yytext[0];
    }
	YY_BREAK
case 457:
YY_RULE_SETUP
#line 982 "lex.yy"
{
        //yy_pop_state(); // back to resource1
        //yy_pop_state(); // back to the one before resource1
        return yytext[0];
    }
	YY_BREAK
case 458:
YY_RULE_SETUP
#line 987 "lex.yy"
return COLORTARGETS;
	YY_BREAK
case 459:
YY_RULE_SETUP
#line 988 "lex.yy"
return DSTTARGET;
	YY_BREAK

/*==================================================================
      rules for inside a  texture section 
    */

case 460:
YY_RULE_SETUP
#line 994 "lex.yy"
{
        yy_push_state(resource); //leads to resource' (resource1 is a fast transition part)
        return yytext[0];
    }
	YY_BREAK

/*==================================================================
      rules for inside a  texture section 
    */

case 461:
YY_RULE_SETUP
#line 1003 "lex.yy"
{
        return yytext[0];
    }
	YY_BREAK
case 462:
YY_RULE_SETUP
#line 1006 "lex.yy"
{
        //yy_pop_state(); // back to resource1
        //yy_pop_state(); // back to the one before resource1
        return yytext[0];
    }
	YY_BREAK
case 463:
YY_RULE_SETUP
#line 1011 "lex.yy"
return SETSAMPLERSTATE;
	YY_BREAK
case 464:
YY_RULE_SETUP
#line 1012 "lex.yy"
return APPDEFINED;
	YY_BREAK
case 465:
YY_RULE_SETUP
#line 1013 "lex.yy"
return APPDEFINED;
	YY_BREAK
case 466:
YY_RULE_SETUP
#line 1014 "lex.yy"
return RESOURCEMSAA;
	YY_BREAK
case 467:
YY_RULE_SETUP
#line 1015 "lex.yy"
return RESOURCEFORMAT;
	YY_BREAK
case 468:
YY_RULE_SETUP
#line 1016 "lex.yy"
return RESOURCESIZE;
	YY_BREAK
case 469:
YY_RULE_SETUP
#line 1017 "lex.yy"
return RESOURCESIZEFACTOR;
	YY_BREAK
case 470:
YY_RULE_SETUP
#line 1018 "lex.yy"
return RESOURCERESOLVETARGET;
	YY_BREAK
case 471:
YY_RULE_SETUP
#line 1019 "lex.yy"
yylval.resource_format = FMT_RGBA8; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 472:
YY_RULE_SETUP
#line 1020 "lex.yy"
yylval.resource_format = FMT_RGBA16F; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 473:
YY_RULE_SETUP
#line 1021 "lex.yy"
yylval.resource_format = FMT_RGBA32F; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 474:
YY_RULE_SETUP
#line 1022 "lex.yy"
yylval.resource_format = FMT_INTENSITY8; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 475:
YY_RULE_SETUP
#line 1023 "lex.yy"
yylval.resource_format = FMT_INTENSITY16F; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 476:
YY_RULE_SETUP
#line 1024 "lex.yy"
yylval.resource_format = FMT_INTENSITY32F; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 477:
YY_RULE_SETUP
#line 1025 "lex.yy"
yylval.resource_format = FMT_LUMINANCE_ALPHA8; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 478:
YY_RULE_SETUP
#line 1026 "lex.yy"
yylval.resource_format = FMT_RG16F_NV; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 479:
YY_RULE_SETUP
#line 1027 "lex.yy"
yylval.resource_format = FMT_LUMINANCE_ALPHA16F; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 480:
YY_RULE_SETUP
#line 1028 "lex.yy"
yylval.resource_format = FMT_LUMINANCE_ALPHA32F; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 481:
YY_RULE_SETUP
#line 1029 "lex.yy"
yylval.resource_format = FMT_RG32F_NV; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 482:
YY_RULE_SETUP
#line 1030 "lex.yy"
yylval.resource_format = FMT_RGB8; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 483:
YY_RULE_SETUP
#line 1031 "lex.yy"
yylval.resource_format = FMT_RGB16F; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 484:
YY_RULE_SETUP
#line 1032 "lex.yy"
yylval.resource_format = FMT_RGB32F; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 485:
YY_RULE_SETUP
#line 1033 "lex.yy"
yylval.resource_format = FMT_DEPTH24STENCIL8; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 486:
YY_RULE_SETUP
#line 1034 "lex.yy"
yylval.resource_format = FMT_DEPTH_COMPONENT32F; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 487:
YY_RULE_SETUP
#line 1035 "lex.yy"
yylval.resource_format = FMT_DEPTH32F_STENCIL8; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 488:
YY_RULE_SETUP
#line 1036 "lex.yy"
yylval.resource_format = FMT_RGBA8UI; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 489:
YY_RULE_SETUP
#line 1037 "lex.yy"
yylval.resource_format = FMT_FLOATRGBA16NV; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 490:
YY_RULE_SETUP
#line 1038 "lex.yy"
yylval.resource_format = FMT_RG                  ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 491:
YY_RULE_SETUP
#line 1039 "lex.yy"
yylval.resource_format = FMT_RG_INTEGER          ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 492:
YY_RULE_SETUP
#line 1040 "lex.yy"
yylval.resource_format = FMT_R8                  ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 493:
YY_RULE_SETUP
#line 1041 "lex.yy"
yylval.resource_format = FMT_R16                 ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 494:
YY_RULE_SETUP
#line 1042 "lex.yy"
yylval.resource_format = FMT_RG8                 ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 495:
YY_RULE_SETUP
#line 1043 "lex.yy"
yylval.resource_format = FMT_RG16                ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 496:
YY_RULE_SETUP
#line 1044 "lex.yy"
yylval.resource_format = FMT_R16F                ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 497:
YY_RULE_SETUP
#line 1045 "lex.yy"
yylval.resource_format = FMT_R32F                ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 498:
YY_RULE_SETUP
#line 1046 "lex.yy"
yylval.resource_format = FMT_RG16F               ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 499:
YY_RULE_SETUP
#line 1047 "lex.yy"
yylval.resource_format = FMT_RG32F               ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 500:
YY_RULE_SETUP
#line 1048 "lex.yy"
yylval.resource_format = FMT_R8I                 ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 501:
YY_RULE_SETUP
#line 1049 "lex.yy"
yylval.resource_format = FMT_R8UI                ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 502:
YY_RULE_SETUP
#line 1050 "lex.yy"
yylval.resource_format = FMT_R16I                ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 503:
YY_RULE_SETUP
#line 1051 "lex.yy"
yylval.resource_format = FMT_R16UI               ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 504:
YY_RULE_SETUP
#line 1052 "lex.yy"
yylval.resource_format = FMT_R32I                ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 505:
YY_RULE_SETUP
#line 1053 "lex.yy"
yylval.resource_format = FMT_R32UI               ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 506:
YY_RULE_SETUP
#line 1054 "lex.yy"
yylval.resource_format = FMT_RG8I                ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 507:
YY_RULE_SETUP
#line 1055 "lex.yy"
yylval.resource_format = FMT_RG8UI               ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 508:
YY_RULE_SETUP
#line 1056 "lex.yy"
yylval.resource_format = FMT_RG16I               ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 509:
YY_RULE_SETUP
#line 1057 "lex.yy"
yylval.resource_format = FMT_RG16UI              ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 510:
YY_RULE_SETUP
#line 1058 "lex.yy"
yylval.resource_format = FMT_RG32I               ; return RESOURCEFORMAT_ENUM;
	YY_BREAK
case 511:
YY_RULE_SETUP
#line 1059 "lex.yy"
yylval.resource_format = FMT_RG32UI              ; return RESOURCEFORMAT_ENUM;
	YY_BREAK

/*==================================================================
      rules for inside a  section
    */

case 512:
YY_RULE_SETUP
#line 1065 "lex.yy"
{
        return yytext[0];
    }
	YY_BREAK
case 513:
YY_RULE_SETUP
#line 1068 "lex.yy"
{
        //yy_pop_state();
        return yytext[0];
    }
	YY_BREAK
case 514:
YY_RULE_SETUP
#line 1072 "lex.yy"
yylval.glenum=GLTEXTUREMINFILTER; return GLTEXTUREMINFILTER;
	YY_BREAK
case 515:
YY_RULE_SETUP
#line 1073 "lex.yy"
yylval.glenum=GLTEXTUREMAGFILTER; return GLTEXTUREMAGFILTER;
	YY_BREAK
case 516:
YY_RULE_SETUP
#line 1074 "lex.yy"
yylval.glenum=GLTEXTUREWRAPS; return GLTEXTUREWRAPS;
	YY_BREAK
case 517:
YY_RULE_SETUP
#line 1075 "lex.yy"
yylval.glenum=GLTEXTUREWRAPT; return GLTEXTUREWRAPT;
	YY_BREAK
case 518:
YY_RULE_SETUP
#line 1076 "lex.yy"
yylval.glenum=GLTEXTUREWRAPR; return GLTEXTUREWRAPR;
	YY_BREAK
/* D3D keywords
    AddressS                          yylval.glenum=GLTEXTUREWRAPS; return GLTEXTUREWRAPS;
    AddressT                          yylval.glenum=GLTEXTUREWRAPT; return GLTEXTUREWRAPT;
    AddressR                          yylval.glenum=GLTEXTUREWRAPR; return GLTEXTUREWRAPR;
    AddressU                          yylval.glenum=GLTEXTUREWRAPS; return GLTEXTUREWRAPS;
    AddressV                          yylval.glenum=GLTEXTUREWRAPT; return GLTEXTUREWRAPT;
    AddressW                          yylval.glenum=GLTEXTUREWRAPR; return GLTEXTUREWRAPR;*/
case 519:
YY_RULE_SETUP
#line 1084 "lex.yy"
yylval.glenum=GLLINEARMIPMAPLINEAR; return GLLINEARMIPMAPLINEAR;
	YY_BREAK
case 520:
YY_RULE_SETUP
#line 1085 "lex.yy"
yylval.glenum=GLLINEAR; return GLLINEAR;
	YY_BREAK
case 521:
YY_RULE_SETUP
#line 1086 "lex.yy"
yylval.glenum=GLCLAMP; return GLCLAMP;
	YY_BREAK
case 522:
YY_RULE_SETUP
#line 1087 "lex.yy"
yylval.glenum=GLCLAMPTOEDGE; return GLCLAMPTOEDGE;
	YY_BREAK
case 523:
YY_RULE_SETUP
#line 1088 "lex.yy"
yylval.glenum=GLREPEAT; return GLREPEAT;
	YY_BREAK
case 524:
YY_RULE_SETUP
#line 1089 "lex.yy"
yylval.glenum=GLNEAREST; return GLNEAREST;
	YY_BREAK
case 525:
YY_RULE_SETUP
#line 1090 "lex.yy"
yylval.glenum=GLMIRROREDREPEAT; return GLMIRROREDREPEAT;
	YY_BREAK
case 526:
YY_RULE_SETUP
#line 1091 "lex.yy"
yylval.glenum=GLMIRROREDREPEAT; return GLMIRROREDREPEAT;
	YY_BREAK

/*==================================================================
      Variable
    */
case 527:
YY_RULE_SETUP
#line 1097 "lex.yy"
{
    // TODO create and REGISTER the variable in a table
    yylval.s = new std::string(yytext);
        // NOTE: "::" is really not friendly with GLSL (and other shading languages... ?)
    int n = (int)yylval.s->find("::");
    if(n==0)
        yylval.s->replace(0, 2, "");
    if(n>0)
        yylval.s->replace(n, 2, "_NS_");
    return VARNAME;
}
	YY_BREAK
/*==================================================================
      strip space and tabs
    */
case 528:
YY_RULE_SETUP
#line 1111 "lex.yy"
{
}
	YY_BREAK
/*==================================================================
      New Line : count and strip it out
    */
case 529:
YY_RULE_SETUP
#line 1116 "lex.yy"
{
    ++line_num;
    /*return yytext[0];*/
}
	YY_BREAK
/*==================================================================
      other chars
    */
case 530:
YY_RULE_SETUP
#line 1123 "lex.yy"
{
    if((yytext[0] >= 33) && (yytext[0] <= 126))
        return yytext[0];
    else {
        nvFX::printf("Warning: line %d : odd character found (%u)...\n", line_num, (unsigned char)yytext[0]);
    }
}
	YY_BREAK
/*==================================================================
      ==================================================================
      !! SIMPLIFIED PREPROCESSOR !!
      More complex preprocessor would require a complete parser that would
      pre-process the code. Here we avoid doing so : directly loading nested 
      includes : Not even using the grammar analyzer !
      ==================================================================
      ==================================================================
    */
case 531:
YY_RULE_SETUP
#line 1139 "lex.yy"
BEGIN(incl);
	YY_BREAK
case 532:
YY_RULE_SETUP
#line 1140 "lex.yy"
/*  eat  the  whitespace and " or < as often in #include */
	YY_BREAK
case 533:
YY_RULE_SETUP
#line 1141 "lex.yy"
{  /*  got  the  include  file  name  */
    char * s = strchr(yytext, '\"'); // get rid of the quote or >
    if(!s) s = strchr(yytext, '>');
    if(s)
        *s = '\0';
    include_stack.push(IncludeData(YY_CURRENT_BUFFER, line_num, file_name.c_str()));
    file_name = std::string(yytext);
    line_num  = 1;
    FILE *fd = NULL;
    const char *buf = NULL;
    if(nvFX::g_includeCb)
        nvFX::g_includeCb(yytext, fd, buf);
    if(buf)
        yy_switch_to_buffer( yy_scan_string(buf) );
    else if(fd)
        yy_switch_to_buffer( yy_create_buffer(  fd,  YY_BUF_SIZE  )  );
    else {
        fd  =  fopen(  yytext,  "r"  );
        if(!fd)
        {
            fprintf(  stderr,  "err loading file %s", yytext);
        } else {
            yy_switch_to_buffer( yy_create_buffer(  fd,  YY_BUF_SIZE  )  );
        }
    }
    if(fd)
    {
        // let's keep track of this newly opened file : when poping, we will have to close it
        IncludeData &incData = include_stack.top();
        incData.fileToClose = fd;
        BEGIN(INITIAL);
    } else {
        YY_FATAL_ERROR( "failure in including a file" );
    }
}
	YY_BREAK
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(fbo):
case YY_STATE_EOF(fbo1):
case YY_STATE_EOF(clearmode):
case YY_STATE_EOF(rendermode):
case YY_STATE_EOF(incl):
case YY_STATE_EOF(comment):
case YY_STATE_EOF(comment2):
case YY_STATE_EOF(str):
case YY_STATE_EOF(shader):
case YY_STATE_EOF(shaderbody):
case YY_STATE_EOF(cstbuffer):
case YY_STATE_EOF(technique):
case YY_STATE_EOF(pass):
case YY_STATE_EOF(sampler_state):
case YY_STATE_EOF(dst_state):
case YY_STATE_EOF(pr_state):
case YY_STATE_EOF(color_sample_state):
case YY_STATE_EOF(rasterization_state):
case YY_STATE_EOF(resource):
case YY_STATE_EOF(resource1):
#line 1176 "lex.yy"
{
    if(include_stack.empty())//(  --include_stack_ptr  <  0  )
    {
        yyterminate();
    }
    else
    {
        yy_delete_buffer(  YY_CURRENT_BUFFER  );
        IncludeData &incData = include_stack.top();
        yy_switch_to_buffer(incData.state);//[include_stack_ptr]);
        line_num = incData.line_num;
        file_name = incData.file_name;
        if(incData.fileToClose)
            fclose(incData.fileToClose);
        include_stack.pop();
    }
}
	YY_BREAK
case 534:
YY_RULE_SETUP
#line 1194 "lex.yy"
ECHO;
	YY_BREAK
#line 8876 "C:/p4/GitHub/nvFX/FxParser/lex.cpp"

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between yy_current_buffer and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yy_n_chars = yy_current_buffer->yy_n_chars;
			yy_current_buffer->yy_input_file = yyin;
			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state();

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yy_last_accepting_cpos;
				yy_current_state = yy_last_accepting_state;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer() )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yy_did_buffer_switch_on_eof = 0;

				if ( yywrap() )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yy_c_buf_p =
					yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yy_c_buf_p =
				&yy_current_buffer->yy_ch_buf[yy_n_chars];

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */


/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */

static int yy_get_next_buffer()
	{
	register char *dest = yy_current_buffer->yy_ch_buf;
	register char *source = yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( yy_current_buffer->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		yy_current_buffer->yy_n_chars = yy_n_chars = 0;

	else
		{
		int num_to_read =
			yy_current_buffer->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */
#ifdef YY_USES_REJECT
			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
#else

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = yy_current_buffer;

			int yy_c_buf_p_offset =
				(int) (yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yy_flex_realloc( (void *) b->yy_ch_buf,
							 b->yy_buf_size + 2 );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = yy_current_buffer->yy_buf_size -
						number_to_move - 1;
#endif
			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
			yy_n_chars, num_to_read );

		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	if ( yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			yy_current_buffer->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yy_n_chars += number_to_move;
	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];

	return ret_val;
	}


/* yy_get_previous_state - get the state just before the EOB char was reached */

static yy_state_type yy_get_previous_state()
	{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = yy_start;

	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			yy_last_accepting_state = yy_current_state;
			yy_last_accepting_cpos = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 3610 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
	}


/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */

#ifdef YY_USE_PROTOS
static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
#else
static yy_state_type yy_try_NUL_trans( yy_current_state )
yy_state_type yy_current_state;
#endif
	{
	register int yy_is_jam;
	register char *yy_cp = yy_c_buf_p;

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		yy_last_accepting_state = yy_current_state;
		yy_last_accepting_cpos = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 3610 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 3609);

	return yy_is_jam ? 0 : yy_current_state;
	}


#ifndef YY_NO_UNPUT
#ifdef YY_USE_PROTOS
static void yyunput( int c, register char *yy_bp )
#else
static void yyunput( c, yy_bp )
int c;
register char *yy_bp;
#endif
	{
	register char *yy_cp = yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yy_hold_char;

	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yy_n_chars + 2;
		register char *dest = &yy_current_buffer->yy_ch_buf[
					yy_current_buffer->yy_buf_size + 2];
		register char *source =
				&yy_current_buffer->yy_ch_buf[number_to_move];

		while ( source > yy_current_buffer->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		yy_current_buffer->yy_n_chars =
			yy_n_chars = yy_current_buffer->yy_buf_size;

		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;


	yytext_ptr = yy_bp;
	yy_hold_char = *yy_cp;
	yy_c_buf_p = yy_cp;
	}
#endif	/* ifndef YY_NO_UNPUT */


#ifdef __cplusplus
static int yyinput()
#else
static int input()
#endif
	{
	int c;

	*yy_c_buf_p = yy_hold_char;

	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			/* This was really a NUL. */
			*yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yy_c_buf_p - yytext_ptr;
			++yy_c_buf_p;

			switch ( yy_get_next_buffer() )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/* fall through */

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap() )
						return EOF;

					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yy_c_buf_p = yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
	*yy_c_buf_p = '\0';	/* preserve yytext */
	yy_hold_char = *++yy_c_buf_p;


	return c;
	}


#ifdef YY_USE_PROTOS
void yyrestart( FILE *input_file )
#else
void yyrestart( input_file )
FILE *input_file;
#endif
	{
	if ( ! yy_current_buffer )
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );

	yy_init_buffer( yy_current_buffer, input_file );
	yy_load_buffer_state();
	}


#ifdef YY_USE_PROTOS
void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
#else
void yy_switch_to_buffer( new_buffer )
YY_BUFFER_STATE new_buffer;
#endif
	{
	if ( yy_current_buffer == new_buffer )
		return;

	if ( yy_current_buffer )
		{
		/* Flush out information for old buffer. */
		*yy_c_buf_p = yy_hold_char;
		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	yy_current_buffer = new_buffer;
	yy_load_buffer_state();

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yy_did_buffer_switch_on_eof = 1;
	}


#ifdef YY_USE_PROTOS
void yy_load_buffer_state( void )
#else
void yy_load_buffer_state()
#endif
	{
	yy_n_chars = yy_current_buffer->yy_n_chars;
	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
	yyin = yy_current_buffer->yy_input_file;
	yy_hold_char = *yy_c_buf_p;
	}


#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
#else
YY_BUFFER_STATE yy_create_buffer( file, size )
FILE *file;
int size;
#endif
	{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
	}


#ifdef YY_USE_PROTOS
void yy_delete_buffer( YY_BUFFER_STATE b )
#else
void yy_delete_buffer( b )
YY_BUFFER_STATE b;
#endif
	{
	if ( ! b )
		return;

	if ( b == yy_current_buffer )
		yy_current_buffer = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yy_flex_free( (void *) b->yy_ch_buf );

	yy_flex_free( (void *) b );
	}


#ifndef YY_ALWAYS_INTERACTIVE
#ifndef YY_NEVER_INTERACTIVE
extern int isatty YY_PROTO(( int ));
#endif
#endif

#ifdef YY_USE_PROTOS
void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
#else
void yy_init_buffer( b, file )
YY_BUFFER_STATE b;
FILE *file;
#endif


	{
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

#if YY_ALWAYS_INTERACTIVE
	b->yy_is_interactive = 1;
#else
#if YY_NEVER_INTERACTIVE
	b->yy_is_interactive = 0;
#else
	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
#endif
#endif
	}


#ifdef YY_USE_PROTOS
void yy_flush_buffer( YY_BUFFER_STATE b )
#else
void yy_flush_buffer( b )
YY_BUFFER_STATE b;
#endif

	{
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == yy_current_buffer )
		yy_load_buffer_state();
	}


#ifndef YY_NO_SCAN_BUFFER
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
#else
YY_BUFFER_STATE yy_scan_buffer( base, size )
char *base;
yy_size_t size;
#endif
	{
	YY_BUFFER_STATE b;

	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b );

	return b;
	}
#endif


#ifndef YY_NO_SCAN_STRING
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
#else
YY_BUFFER_STATE yy_scan_string( yy_str )
yyconst char *yy_str;
#endif
	{
	int len;
	for ( len = 0; yy_str[len]; ++len )
		;

	return yy_scan_bytes( yy_str, len );
	}
#endif


#ifndef YY_NO_SCAN_BYTES
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
#else
YY_BUFFER_STATE yy_scan_bytes( bytes, len )
yyconst char *bytes;
int len;
#endif
	{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;

	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) yy_flex_alloc( n );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
	}
#endif


#ifndef YY_NO_PUSH_STATE
#ifdef YY_USE_PROTOS
static void yy_push_state( int new_state )
#else
static void yy_push_state( new_state )
int new_state;
#endif
	{
	if ( yy_start_stack_ptr >= yy_start_stack_depth )
		{
		yy_size_t new_size;

		yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yy_start_stack_depth * sizeof( int );

		if ( ! yy_start_stack )
			yy_start_stack = (int *) yy_flex_alloc( new_size );

		else
			yy_start_stack = (int *) yy_flex_realloc(
					(void *) yy_start_stack, new_size );

		if ( ! yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yy_start_stack[yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
	}
#endif


#ifndef YY_NO_POP_STATE
static void yy_pop_state()
	{
	if ( --yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yy_start_stack[yy_start_stack_ptr]);
	}
#endif


#ifndef YY_NO_TOP_STATE
static int yy_top_state()
	{
	return yy_start_stack[yy_start_stack_ptr - 1];
	}
#endif

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

#ifdef YY_USE_PROTOS
static void yy_fatal_error( yyconst char msg[] )
#else
static void yy_fatal_error( msg )
char msg[];
#endif
	{
	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
	}



/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		yytext[yyleng] = yy_hold_char; \
		yy_c_buf_p = yytext + n; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = '\0'; \
		yyleng = n; \
		} \
	while ( 0 )


/* Internal utility routines. */

#ifndef yytext_ptr
#ifdef YY_USE_PROTOS
static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
#else
static void yy_flex_strncpy( s1, s2, n )
char *s1;
yyconst char *s2;
int n;
#endif
	{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
	}
#endif

#ifdef YY_NEED_STRLEN
#ifdef YY_USE_PROTOS
static int yy_flex_strlen( yyconst char *s )
#else
static int yy_flex_strlen( s )
yyconst char *s;
#endif
	{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
	}
#endif


#ifdef YY_USE_PROTOS
static void *yy_flex_alloc( yy_size_t size )
#else
static void *yy_flex_alloc( size )
yy_size_t size;
#endif
	{
	return (void *) malloc( size );
	}

#ifdef YY_USE_PROTOS
static void *yy_flex_realloc( void *ptr, yy_size_t size )
#else
static void *yy_flex_realloc( ptr, size )
void *ptr;
yy_size_t size;
#endif
	{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
	}

#ifdef YY_USE_PROTOS
static void yy_flex_free( void *ptr )
#else
static void yy_flex_free( ptr )
void *ptr;
#endif
	{
	free( ptr );
	}

#if YY_MAIN
int main()
	{
	yylex();
	return 0;
	}
#endif
#line 1194 "lex.yy"
